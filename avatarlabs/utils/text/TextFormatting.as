/** TextStyling  *	---------------------------------------------------------------------------- *  *	@desc:  *		This class will have static functions to make it easier to initialize  *		UILabel class, it also  *	@author:   *		Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.avatarlabs.utils.text	{		import flash.display.Bitmap;		import flash.display.BitmapData;		import flash.display.BlendMode;		import flash.display.DisplayObject;		import flash.display.DisplayObjectContainer;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.FullScreenEvent;		import flash.events.IOErrorEvent;		import flash.events.ProgressEvent;		import flash.geom.ColorTransform;		import flash.geom.Matrix;		import flash.geom.Point;		import flash.geom.Rectangle;		import flash.text.StyleSheet;		import flash.text.TextField;		import flash.text.TextFormat;		import flash.utils.getDefinitionByName;				import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.fonts.FontLoader;		import com.avatarlabs.utils.userinterface.UILabel;				public class TextFormatting extends Object		{						/** Constructor			  *	---------------------------------------------------------------------------- */				public function TextFormatting()				{									}							/** formatUILabel			  *	---------------------------------------------------------------------------- */				public static function formatUILabel( labelClip:UILabel, textField:TextField, fontName:String, htmlText:Boolean=false, text:String=null ):void				{					labelClip.textField = textField;					labelClip.fontName = fontName;					labelClip.embedFonts = true;					labelClip.isHTMLText = htmlText;										if( text != null )					{						if( htmlText )							labelClip.setHTMLText( text );						else							labelClip.setText( text );					}				}							/** formatTextWithFontName			  *	---------------------------------------------------------------------------- */				public static function formatTextWithFontName( textField:TextField, text:String, fontName:String, htmlText:Boolean=false, autoSize:String="left" ):void				{					var tf:TextFormat = textField.getTextFormat();						tf.font = FontLoader.getFont( fontName ).fontName;											textField.autoSize = autoSize;					textField.embedFonts = true;										if( htmlText )						textField.htmlText = text;					else						textField.text = text;										textField.setTextFormat( tf );									}							/** formatTextWithStyleSheet			  *	---------------------------------------------------------------------------- */				public static function formatTextWithStyleSheet( textField:TextField, text:String, styleSheet:StyleSheet=null, htmlText:Boolean=false, autoSize:String="left" ):void				{					textField.embedFonts = true;					textField.autoSize = autoSize;										if( styleSheet != null )						textField.styleSheet = styleSheet;										if( htmlText )						textField.htmlText = text;					else						textField.text = text;				}		}			}