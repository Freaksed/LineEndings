/** HashTable  *	---------------------------------------------------------------------------- *  *	@desc:  *		Responsible for storing data  *	@developer: Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */	package com.avatarlabs.utils.cache	{				public class HashTable extends Object		{			private var _hashes:Array;			private var _hashesCount:int;						private static var _instance:HashTable;						/** Constructor			  *	---------------------------------------------------------------------- */				public function HashTable()				{					init();				}							/** reset			  *	---------------------------------------------------------------------- */				public static function reset():void				{					_instance = null;				}							/** getInstance			  *	---------------------------------------------------------------------- */				public static function getInstance():HashTable				{					if( _instance==null ) _instance = new HashTable();					return _instance;				}							/** addHash / getHash			  *	---------------------------------------------------------------------- */				public function addHash( s:String ):int				{					for( var i:uint=0; i<_hashes.length; ++i )					{						if( _hashes[i] == s )							return i;					}										_hashes.push( s );					_hashesCount = _hashes.length;										return _hashesCount-1;				}				public function getHash( s:String ):int				{					for( var i:int=0; i<_hashesCount; ++i )					{						if( _hashes[i] == s )							return i;					}										return -1;				}				public function getString( hash:int ):String				{					return _hashes[hash];				}							/** init			  *	---------------------------------------------------------------------- */				public function init():void				{					_hashes = new Array();					_hashesCount = 0;				}						}			}