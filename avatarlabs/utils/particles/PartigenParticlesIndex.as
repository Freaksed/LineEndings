/** PartigenParticlesIndex  *	---------------------------------------------------------------------------- *  *	@desc:  *		Responsible for storing data  *	@developer: Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */	package com.avatarlabs.utils.particles	{		import flash.display.MovieClip;		import flash.events.*;		import flash.errors.*;				import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.particles.PartigenParticle;				public class PartigenParticlesIndex extends EventDispatcher		{			private static var instance:PartigenParticlesIndex;						private var _particles:Array;			private var _particlesCount:int;						private var _particleContainer:MovieClip;						/** Constructor			  *	---------------------------------------------------------------------- */				public function PartigenParticlesIndex()				{					_particles = new Array();					_particlesCount = 0;				}							/** reset			  *	---------------------------------------------------------------------- */				public static function reset():void				{					instance = null;				}							/** getInstance			  *	---------------------------------------------------------------------- */				public static function getInstance():PartigenParticlesIndex				{					if( instance==null ) instance = new PartigenParticlesIndex();					return instance;				}							/** institutions			  *	---------------------------------------------------------------------- */				public function addParticle( p:PartigenParticle ):void				{					_particles[p.id] = p;					this._particlesCount++;				}				public function get particles():Array				{					return this._particles;				}				public function getParticleById( id:String ):PartigenParticle				{					if( _particles[id] != null )						return _particles[id];										return null;				}								public function set particleContainer( m:MovieClip ):void { _particleContainer = m; }				public function get particleContainer():MovieClip { return _particleContainer; }		}			}