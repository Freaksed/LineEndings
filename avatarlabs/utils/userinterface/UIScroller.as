/** UIScroller Class  *	------------------------------------------------------------------------------------  *	@dev: 	Christian Widodo [ctwidodo@gmail.com]  *	@desc:	A Scroller class using UISlider class for scrolling text  *	Updates:  *	james - added setMask  *	------------------------------------------------------------------------------------*/  	package com.avatarlabs.utils.userinterface	{		import flash.events.*;		import flash.display.MovieClip;		import flash.geom.Rectangle;		import flash.events.MouseEvent;				import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.userinterface.UISlider;		import com.avatarlabs.utils.console.ConsoleBroadcaster;				public class UIScroller extends MovieClip		{			protected var _dynamicClip:MovieClip;			protected var _slider:*;			protected var _maskClip:MovieClip;			protected var _contentClip:MovieClip;			protected var _property:String;									/** Constructor			  *	------------------------------------------------------- */				public function UIScroller()				{					init();				}								public function get dynamicClip():MovieClip { return _dynamicClip; }								public function init():void				{					_dynamicClip = this;					_property = "y";										dispatchEvent( new Event(Event.INIT) );				}							/** handleSliderChange			  *	------------------------------------------------------- */				public function handleSliderChange( evt:CustomEvent )				{															try{						//ConsoleBroadcaster.broadcast(" UIScroller", "handleSliderChange("+evt.customParameters.percent+");" );												var percent = evt.customParameters.percent;																						if(  percent >  .99 )							dispatchEvent( new Event("onEndOfList") );												var diff:Number;						var pixel:Number;												if ( _property == "y" )						{							diff = _contentClip.height-_maskClip.height+5;													pixel = - diff * percent;							_contentClip.y = _maskClip.getBounds( _dynamicClip ).top+ pixel;																					}						else						{							diff = _contentClip.width-_maskClip.width+5;							pixel = - diff * percent;							_contentClip.x = _maskClip.getBounds( _dynamicClip ).left+ pixel;																			}											}catch(e:Error){						trace('handleSliderChange:'+e);					}												}							/** setSlider			  *	------------------------------------------------------- */				public function setSlider( s:* )				{					_slider = s;					_slider.addEventListener( "onChangeValue", handleSliderChange );				}							/** setContent			  *	------------------------------------------------------- */				public function setContent( c:MovieClip )				{					_contentClip = c;					//_contentClip.addEventListener( "onSetText", toggleSlider );				}							/** setMask			  *	------------------------------------------------------- */				public function setMask( m:MovieClip )				{					_maskClip = m;				}								public function setValue( v:Number ):void				{					_slider.setValue( v, true );				}								public function setProperty( p:String ):void				{					_property = p;				}											/** goArrow			  *	------------------------------------------------------- */				public function goArrow( p:Number ):void{							(_slider as UISlider).setOffset(p);										}															/** toggleSlider			  *	------------------------------------------------------- */				public function toggleSlider( event:Event=null )				{					//ConsoleBroadcaster.broadcast(" UIScroller", "toggleSlider("+event+");" );										_contentClip.mask = _maskClip;															if( _property == "y" )					{						if( _contentClip.height > _maskClip.height )							_slider.dynamicClip.visible = true;						else							_slider.dynamicClip.visible = false;					}					else					{						if( _contentClip.width > _maskClip.width )							_slider.dynamicClip.visible = true;						else							_slider.dynamicClip.visible = false;					}										dispatchEvent( new CustomEvent("onToggleSlider", {visible:_slider.visible}) );				}											/** resizeSlider			  *	------------------------------------------------------- */				public function resizeSlider( prop:String="", cursorPosition = null ):void				{					if(prop == "")	prop = _property;					if(cursorPosition == null)	cursorPosition = .5;										_slider.resizeSlider(prop, cursorPosition );				}											/** resetSlider			  *	------------------------------------------------------- */				public function resetScroller( prop:String="" ):void				{										try{						//ConsoleBroadcaster.broadcast(" UIScroller", "resetScroller();" );															if ( prop == "" ) prop = _property;												if( _slider ) _slider.resetSlider( prop );													handleSliderChange( new CustomEvent( "onChangeValue", {percent:0} ) );												}catch(e:Error){												trace('resetScroller:' + e);												}														}					}	}