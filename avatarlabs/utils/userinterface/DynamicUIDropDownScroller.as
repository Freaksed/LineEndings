/** DynamicUIDropDownScroller Class  *	------------------------------------------------------------------------------------  *	@dev: 	Christian Widodo [christian@avatarlabs.com]  *	@desc:	A DropDownMenu class with a scroller for the content inside  *			This is created since Flash's drop down ComboBox is not flexible enough  *			to fit the needs of a project  *	------------------------------------------------------------------------------------*/  	package com.avatarlabs.utils.userinterface	{		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.MouseEvent;		import flash.geom.Rectangle;		import flash.utils.getDefinitionByName;				import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import com.avatarlabs.utils.userinterface.DynamicUIScroller;		import com.avatarlabs.utils.userinterface.UIScroller;				public class DynamicUIDropDownScroller extends UIDropDownScroller		{			//protected var _dynamicClip:MovieClip;						//protected var _scrollerClip:DynamicUIScroller;			protected var _selectedLabelClip:DynamicUIButton;						/**	Stage Instances **/			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function DynamicUIDropDownScroller()				{									}								public function set dynamicClip( m:MovieClip ):void				{					_dynamicClip = m;										scroller_mc = _dynamicClip.scroller_mc;					selectedLabel_mc = _dynamicClip.selectedLabel_mc;					selectedLabel_mc.mouseChildren = false;										var sliderClip:DynamicUISlider = new DynamicUISlider();						sliderClip.dynamicClip = scroller_mc.slider_mc;						sliderClip.dynamicInit();						sliderClip.setProperty( "y" );						sliderClip.setHandle( scroller_mc.slider_mc.handle_mc );						sliderClip.setBounds( scroller_mc.slider_mc.bound_mc );										_scrollerClip = new DynamicUIScroller();					_scrollerClip.dynamicClip = scroller_mc;					_scrollerClip.dynamicInit();					_scrollerClip.setProperty( "y" );					_scrollerClip.setSlider( sliderClip );					_scrollerClip.setContent( scroller_mc.content_mc );					_scrollerClip.setMask( scroller_mc.mask_mc );										_selectedLabelClip = new DynamicUIButton();					_selectedLabelClip.dynamicClip = selectedLabel_mc;					_selectedLabelClip.dynamicInit();				}				public function get dynamicClip():MovieClip { return _dynamicClip; }							/** init			  *	---------------------------------------------------------------------------- */				override public function init():void				{									}							/** dynamicInit			  *	---------------------------------------------------------------------------- */				public function dynamicInit():void				{					_contentItems = new Array();					_dp = new Array();										//_dropDownContentItemLinkage = "DropDownContent.item";					//_dropDownContentItemClass = getDefinitionByName(_dropDownContentItemLinkage) as Class;										_selectedLabelClip.addEventListener( "onClick", handleSelectedLabelClicked, false, 0, true );										var contentItem:MovieClip;										for( var i:int=0; i<_dp.length; i++ )					{						contentItem = new DynamicUIButton();						contentItem.dynamicClip = new _dropDownContentItemClass();						contentItem.dynamicClip.mouseChildren = false;						contentItem.dynamicClip.label_mc.label_txt.text = _dp[i].label;						contentItem.dynamicInit();						//contentItem.buttonMode = true;						contentItem.addEventListener( "onClick", handleContentItemClicked, false, 0, true );						contentItem.addEventListener( "onSetFocus", handleContentItemRolledOver, false, 0, true );						contentItem.addEventListener( "onKillFocus", handleContentItemRolledOut, false, 0, true );						contentItem.dynamicClip.x = 0;						contentItem.dynamicClip.y = _scrollerClip.dynamicClip.content_mc.numChildren * contentItem.dynamicClip.height;												_scrollerClip.dynamicClip.content_mc.addChild( contentItem.dynamicClip );												_contentItems.push( contentItem );					}										_scrollerClip.dynamicClip.visible = false;										_opened = false;					_dynamicClip.tabEnabled = false;					_dynamicClip.tabChildren = false;										/*					trace( "_scrollerClip: "+_scrollerClip );					//trace( "_scrollerClip.toggleSlider: "+_scrollerClip.toggleSlider );										if( _scrollerClip )					{						trace( _scrollerClip.toggleSlider );						_scrollerClip.toggleSlider();					}					*/										try					{						_scrollerClip.toggleSlider();					}					catch( e:Error )					{						_scrollerClip.addEventListener( Event.INIT, handleScrollerInit, false, 0, true );					}				}							/** set/get dp			  *	---------------------------------------------------------------------------- */			  	override public function set dp( _dp:Array ):void				{					this._dp = _dp;										//trace( "_scrollerClip: "+_scrollerClip );					//trace( "contentClip: "+_scrollerClip.dynamicClip.content_mc );										var contentClip:MovieClip = _scrollerClip.dynamicClip.content_mc;					var contentItem:MovieClip;										while( contentClip.numChildren > 0 )					{						contentClip.removeChildAt(0);					}										_contentItems = new Array();										for( var i:int=0; i<_dp.length; i++ )					{						contentItem = new DynamicUIButton();						contentItem.dynamicClip = new _dropDownContentItemClass();						contentItem.dynamicClip.mouseChildren = false;						contentItem.dynamicClip.label_mc.label_txt.text = _dp[i].label;						contentItem.dynamicInit();						//contentItem.buttonMode = true;						contentItem.addEventListener( "onClick", handleContentItemClicked, false, 0, true );						contentItem.addEventListener( "onSetFocus", handleContentItemRolledOver, false, 0, true );						contentItem.addEventListener( "onKillFocus", handleContentItemRolledOut, false, 0, true );						contentItem.dynamicClip.x = 0;						contentItem.dynamicClip.y = _scrollerClip.dynamicClip.content_mc.numChildren * contentItem.dynamicClip.height;												//trace( "contentItem: "+contentItem );						//trace( "contentItem.dynamicClip: "+contentItem.dynamicClip );												_scrollerClip.dynamicClip.content_mc.addChild( contentItem.dynamicClip );												_contentItems.push( contentItem );					}										//trace( _dp.length );					//trace( "contentHeight: "+MovieClip(_scrollerClip).content_mc.height );										try					{						_scrollerClip.toggleSlider();					}					catch( e:Error )					{						_scrollerClip.addEventListener( Event.INIT, handleScrollerInit, false, 0, true );					}				}		}	}