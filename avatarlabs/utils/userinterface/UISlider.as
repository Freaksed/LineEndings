/** UISlider Class  *	------------------------------------------------------------------------------------  *	@dev: 	Christian Widodo [ctwidodo@gmail.com]  *	@desc:	A general slider class that can go right/left or top/bottom  *			depending on the usage.  *	@todo:	fix it so that it wont snap to handle's x/y  *	------------------------------------------------------------------------------------*/  	package com.avatarlabs.utils.userinterface	{		import flash.display.MovieClip;		import flash.geom.Rectangle;		import flash.events.Event;		import flash.events.MouseEvent;				import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;				public class UISlider extends MovieClip		{			protected var _dynamicClip:MovieClip;			protected var _handleBounds:Rectangle;			protected var _property:String;			protected var _handleClip:MovieClip;			protected var _boundsClip:MovieClip;						protected var _startY:Number;			protected var _startX:Number;						/** Constructor			  *	------------------------------------------------------- */				public function UISlider()				{					init();				}							/** init			  *	------------------------------------------------------- */				public function init():void				{					_dynamicClip = this;										_dynamicClip.tabEnabled = false;					_dynamicClip.tabChildren = false;										dispatchEvent( new Event(Event.INIT) );				}							/** handleStartDrag			  *	------------------------------------------------------- */				protected function handleStartDrag( evt:MouseEvent ):void				{					//ConsoleBroadcaster.broadcast( "UISlider", "handleDragHandle();" );										_startY = evt.localY;					_startX = evt.localX;										//_handleClip.startDrag( false, _handleBounds );										_dynamicClip.stage.addEventListener( MouseEvent.MOUSE_MOVE, dragHandle );					_dynamicClip.stage.addEventListener( MouseEvent.MOUSE_UP, handleStopDrag );				}							/** handleStopDrag			  *	------------------------------------------------------- */				protected function handleStopDrag( evt:MouseEvent ):void				{										try{						//ConsoleBroadcaster.broadcast( "UISlider", "handleStopDrag();" );						_dynamicClip.stage.removeEventListener( MouseEvent.MOUSE_MOVE, dragHandle );						_dynamicClip.stage.removeEventListener( MouseEvent.MOUSE_UP, handleStopDrag );					}catch(e:Error){						trace('handleStopDrag: ' + e);					}														}							/** dragHandle			  *	------------------------------------------------------- */				protected function dragHandle( evt:MouseEvent ):void				{					var difference:Number = _handleClip.y - _startY;										var bounds:Rectangle = _handleClip.getBounds( _boundsClip );					//trace( bounds.top+_handleClip.height/2 );					//trace( _handleClip.y );					//trace( _handleBounds.top );					//trace( _handleBounds.bottom );										var percent;										if ( _property=="y" )					{						_handleClip.y = Math.max( Math.min( _dynamicClip.mouseY, _handleBounds.bottom ), _handleBounds.top );						percent = ((_handleClip.y-_handleBounds.top) / (_handleBounds.bottom-_handleBounds.top));					}					else					{						_handleClip.x = Math.max( Math.min( _dynamicClip.mouseX, _handleBounds.right ), _handleBounds.left );						percent = ((_handleClip.x-_handleBounds.left) / (_handleBounds.right-_handleBounds.left));					}										//trace( "percent: "+percent );										dispatchEvent( new CustomEvent( "onChangeValue", {percent:percent} ));				}							/** setProperty			  *	------------------------------------------------------- */				public function setProperty( p:String )				{					_property = p;				}							/** setHandle			  *	------------------------------------------------------- */				public function setHandle( h:MovieClip )				{					_handleClip = h;										_handleClip.useHandCursor = true;					_handleClip.buttonMode = true;										_handleClip.addEventListener( MouseEvent.MOUSE_DOWN, handleStartDrag );				}											/** getPercent			  *	------------------------------------------------------- */				public function getPercent():Number				{					var percent;										//trace('the percent is ' + percent );										if ( _property=="y" )											percent = ((_handleClip.y-_handleBounds.top) / (_handleBounds.bottom-_handleBounds.top));										else						percent = ((_handleClip.x-_handleBounds.left) / (_handleBounds.right-_handleBounds.left));										//trace('the percent is ' + percent );										return percent;				}							/** setOffset			  *	------------------------------------------------------- */									public function setOffset(offset):void				{					var percent = getPercent() + offset;															if(percent < 0 ) percent = 0;					else if ( percent > 1)	percent = 1;										setValue (  percent, true );									}							/** setBounds			  *	------------------------------------------------------- */				public function setBounds( b:MovieClip )				{					_boundsClip = b;					var bounds:Rectangle = _handleClip.getBounds( _dynamicClip );										//trace( bounds );					//trace( "bounds.top: "+bounds.top );					//trace( "bounds.height: "+bounds.height );										_handleBounds = b.getBounds( _dynamicClip ); //(x=-7, y=-104.95, w=14, h=209.9)										//trace( "_handleBounds.top: "+_handleBounds.top );					//trace( "_handleBounds.bottom: "+_handleBounds.bottom );										_handleBounds.top = _handleBounds.top-(bounds.top-bounds.y); // -83					_handleBounds.bottom = _handleBounds.bottom-(bounds.bottom-bounds.y); // 83					//_handleBounds.left = _handleBounds.left+_handleClip.width/2;					//_handleBounds.right = _handleBounds.right-_handleClip.width/2;										_handleBounds.left = _handleBounds.left-(bounds.left-bounds.x);					_handleBounds.right = _handleBounds.right-bounds.width-bounds.left;										//trace( _handleBounds );					//trace( "_handleBounds.top: "+_handleBounds.top );					//trace( "_handleBounds.bottom: "+_handleBounds.bottom );				}							/** setValue			  *	------------------------------------------------------- */			  	public function setValue( v:Number, dispatch:Boolean=false ):void				{					//trace('v value is ' + v);										if ( _property == "y" )					{						_handleClip.y = _handleBounds.top + (_handleBounds.bottom - _handleBounds.top) * v;					}					else					{						_handleClip.x = _handleBounds.left + (_handleBounds.right - _handleBounds.left) * v;					}										if ( dispatch )					{						dispatchEvent( new CustomEvent("onChangeValue", {percent:v}) );					}				}							/** resizeSlider			  *	------------------------------------------------------- */					public function resizeSlider(prop:String, newCursorPosition):void				{					if(prop == "y" ){												_handleClip.scaleY = _handleClip.scaleY*.9;						//_handleClip.y = _handleBounds.height*newCursorPosition;											}else{						_handleClip.scaleX= _handleClip.scaleX*.9;						//_handleClip.x = _handleBounds.width*newCursorPosition;					}										setValue(newCursorPosition, false);										handleStopDrag( null );											var bounds = _handleClip.getBounds( _handleClip );												_handleBounds = _boundsClip.getBounds( _dynamicClip ); 															_handleBounds.top 	= _handleBounds.top-(bounds.top*_handleClip.scaleY); // -83					_handleBounds.bottom = _handleBounds.bottom-(bounds.top*_handleClip.scaleY)-(bounds.height * _handleClip.scaleY); // 83					_handleBounds.left	= _handleBounds.left-(bounds.left*_handleClip.scaleX);					_handleBounds.right 	= _handleBounds.right-(bounds.width*_handleClip.scaleX)-(bounds.left*_handleClip.scaleX);									}											/** resetSlider			  *	------------------------------------------------------- */			  	public function resetSlider( prop:String ):void				{					try{											_handleClip.scaleY =1;						_handleClip.scaleX =1;												var bounds = _handleClip.getBounds( _handleClip );																		_handleBounds = _boundsClip.getBounds( _dynamicClip ); 											_handleBounds.top 	= _handleBounds.top-bounds.top; // -83						_handleBounds.bottom = _handleBounds.bottom-bounds.top-bounds.height ; // 83						_handleBounds.left	= _handleBounds.left-bounds.left;						_handleBounds.right 	= _handleBounds.right-bounds.width-bounds.left;																		if( prop == "y" )							_handleClip.y = _handleBounds.top;						else							_handleClip.x = _handleBounds.left;													handleStopDrag( null );												}catch(e:Error){												//trace('resetSlider: ' + e);					}																}						}	}