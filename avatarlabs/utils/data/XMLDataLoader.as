/** XmlDataLoader  *	---------------------------------------------------------------------------- *  *	@desc:  *		Responsible for loading and facilitating standard data access methods.  *	@developer: Aaron Buchanan, [aaron@avatarlabs.com]  *				Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */	package com.avatarlabs.presentations.data	{		import flash.net.URLLoader;		import flash.net.URLRequest;		import flash.events.*;		import flash.errors.*;				import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.presentations.data.*;				public class XMLDataLoader extends EventDispatcher		{			private var xmlFeed:XML;			private var xmlLoader:URLLoader;			private var xmlFeedURL:String;						private var completedCallback:Function;						/**	constructor			  *	--------------------------------------------------------------------------- */				public function XMLDataLoader()				{					xmlFeed = new XML();					xmlFeed.ignoreWhitespace = true;										xmlLoader = new URLLoader();					xmlLoader.addEventListener( Event.COMPLETE, onFeedLoad );				}							/**	onFeedLoad			  *	--------------------------------------------------------------------------- */				private function onFeedLoad( e:Event ):void				{					ConsoleBroadcaster.broadcast( "XMLDataLoader", "onFeedLoad();");										xmlFeed = new XML( xmlLoader.data );										var settings = xmlFeed.settings.children();										for( var i=0; i<settings.length(); i++ )					{						var name:String		= settings[i].attribute("name");						var value:String	= settings[i].attribute("value");												SettingsIndex.getInstance().addSetting( name, value );					}										var projects = xmlFeed.projects.children();										for( var j=0; j<projects.length(); j++ )					{						//trace( projects[j] );						//trace( slides.length() );												var projectSlides 	= projects[j].slides.children();						var projectTitle 	= projects[j].title.text();												var project = new Project();							project.title	= projectTitle;												for( var k=0; k<projectSlides.length(); k++ )						{							var slideTitle:String		= projectSlides[k].title.text();							var slideCaption:String		= projectSlides[k].caption.text();							var slideAsset:String		= projectSlides[k].attribute("url");														project.addSlide( new Slide(slideTitle, slideCaption, slideAsset) );						}												ProjectsIndex.getInstance().addProject( project );					}										dispatchEvent( new Event("onLoadComplete") );				}							/**	loadFeed			  *	--------------------------------------------------------------------------- */				public function loadFeed( feedURL:String ):void				{					xmlFeedURL = feedURL;										xmlLoader.load( new URLRequest( xmlFeedURL ));				}		}	}	