/**	UINavigation *	dev: James Safechuck (james@avatarlabs.com) *	--------------------------------------------------------------------------------------------------------------- * *	Notes: *	Register an id for this group.  add buttons associated with group.  NavigationController will notify *	listening functions when this group is triggered *	--------------------------------------------------------------------------------------------------------------- * *	example *	registerGroupListener("MainNav"); *	addButton( button1_mc, "button 1" ); *	--------------------------------------------------------------------------------------------------------------- */	package com.avatarlabs.utils.navigation	{		import flash.events.*;		import flash.display.MovieClip;		import flash.utils.getQualifiedClassName;				import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.navigation.*;		import com.avatarlabs.utils.console.*;				public class UINavigation extends MovieClip		{			protected var _dynamicClip:MovieClip;			protected var _navigationController:NavigationController;			protected var _currentActiveButton:UINavigationButton;						protected var _buttons:Array;						protected var _group:String;						protected var _contentId;						/**	constructor			  *	------------------------------------------------------------ */				public function UINavigation()				{					init();				}								public function get contentId():* { return _contentId; }				public function get group():String { return _group; }								public function init():void				{					_dynamicClip = this;										_navigationController = NavigationController.getInstance();										_group = "DEFAULT";										_buttons = [];				}							/**	onNavigate			  *	---------------------------------------------------------------------------- */				protected function onNavigate( event:CustomEvent ):void				{					//ConsoleBroadcaster.broadcast( "UINavigation","onNavigate( "+event.customParameters.navigationGroupId+" )");										for( var i in _buttons )					{						//ConsoleBroadcaster.broadcast( "UINavigation","_buttons[ i ].getId() "+_buttons[ i ].getId());						//ConsoleBroadcaster.broadcast( "UINavigation","event.customParameters.navigationGroupId "+event.customParameters.contentId);												if( _buttons[ i ].getId() == event.customParameters.contentId )						{							_contentId = event.customParameters.contentId;							_buttons[ i ].activate();							_currentActiveButton = _buttons[ i ];						}						else						{							_buttons[ i ].deactivate();						}					}				}							/**	protected:addButton			  *	------------------------------------------------------------ */				protected function addButton ( button:UINavigationButton, id:* )				{					//ConsoleBroadcaster.broadcast( "UINavigation","addButton( button: "+button.name+", id: "+id+")");										button.setId( id );					button.addEventListener( "onClick", handleClick );					button.addEventListener( "onSetFocus", handleButtonFocus );					button.addEventListener( "onKillFocus",  handleButtonBlur );										_buttons.push( button );				}							/**	defaultNavigateTo			  *	------------------------------------------------------------ */				public function defaultNavigateTo(id:*):void				{					//ConsoleBroadcaster.broadcast( "UINavigation","defaultNavigateTo("+id+");");										for( var i=0; i<_buttons.length; i++ )					{						if( _buttons[i].getId() == id )						{							_navigationController.navigateTo( _buttons[i].getId(), _group );							break;						}					}				}							/**	registerGroupListener			  *	will now recieve notification when a button from this group			  *	is clicked.			  *	------------------------------------------------------------ */				protected function registerGroupListener(g:String):void				{					//ConsoleBroadcaster.broadcast( "UINavigation","registerGroupListener("+g+")");										if( _group == "DEFAULT" )					{						_group = g;												_navigationController.addEventListener( "onNavigate_"+g, onNavigate );					}else					{						//ConsoleBroadcaster.broadcast( "UINavigation","group already registered");					}				}						/**	public:handleClick / handleButtonFocus / handleButtonBlur			  *	------------------------------------------------------------ */				public function handleClick ( event:Event )				{					//ConsoleBroadcaster.broadcast( "UINavigation","handleClick();");										_navigationController.navigateTo( event.currentTarget.getId(), _group );				}								public function handleButtonFocus ( event:Event )				{					//ConsoleBroadcaster.broadcast( "UINavigation","handleButtonFocus();");				}								public function handleButtonBlur ( event:Event )				{					//ConsoleBroadcaster.broadcast( "UINavigation","handleButtonBlur();");				}								public function getButtons():Array				{					//ConsoleBroadcaster.broadcast( "UINavigation","getButtons();");					return _buttons;				}					}			}