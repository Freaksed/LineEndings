/**	NavigationButtonMultiState  *	------------------------------------------------------------------------------------ *  *	@desc:	A multi state navigation button that extends UINavigationButton  *			It has to have 4 label states in fla, "off", "over", "out", "stage"  *	@developer:	Christian Widodo [ christian@avatarlabs.com ]  *	------------------------------------------------------------------------------------ */	package com.avatarlabs.utils.navigation	{		import flash.events.*;		import flash.display.MovieClip;				import com.avatarlabs.utils.console.*;		import com.avatarlabs.utils.navigation.UINavigationButton;		import com.avatarlabs.utils.userinterface.PlayToRewindTo;				public class UINavigationButtonMultiState extends UINavigationButton		{					/*	constructor		 *	------------------------------------------------------------ */						public function UINavigationButtonMultiState()			{				super();							}					/*	setActive		 *	------------------------------------------------------------ */			override public function setActive( a:Boolean )			{				ConsoleBroadcaster.broadcast( "UINavigationButtonMultiState","setActive( "+a+" )");								active = a;								dispatchEvent( new Event("onSetActive") );			}					/*	activate / deactivate		 *	------------------------------------------------------------ */			override public function activate()			{				ConsoleBroadcaster.broadcast( "UINavigationButtonMultiState","activate()");								setActive( true );								removeEventListener( MouseEvent.CLICK, handleClick );				removeEventListener( MouseEvent.MOUSE_OVER, focus );				removeEventListener( MouseEvent.MOUSE_OUT, blur );								buttonMode = false;								updateStatus();			}					override public function deactivate()			{				ConsoleBroadcaster.broadcast( "UINavigationButtonMultiState","deactivate()");								if ( active )				{					addEventListener( MouseEvent.CLICK, handleClick );					addEventListener( MouseEvent.MOUSE_OVER, focus );					addEventListener( MouseEvent.MOUSE_OUT, blur );										setActive( false );										buttonMode = true;										updateStatus();				}			}					/*	event handlers		 *	------------------------------------------------------------ */			override public function focus( event:MouseEvent ):void			{				ConsoleBroadcaster.broadcast( "UINavigationButtonMultiState", "focus();" );								gotoAndPlay( "over" );				dispatchEvent(new Event("onSetFocus"));							}						override public function blur( event:MouseEvent ):void			{				ConsoleBroadcaster.broadcast( "UINavigationButtonMultiState", "blur();" );								!active ? gotoAndPlay("out") : null;								dispatchEvent(new Event("onKillFocus"));			}					/*	check focus		 *	------------------------------------------------------------ */		 	override protected function updateStatus():void			{				ConsoleBroadcaster.broadcast( "UINavigationButtonMultiState","updateStatus()");								!active ? gotoAndPlay("out") : gotoAndPlay("stage");			}		}			}