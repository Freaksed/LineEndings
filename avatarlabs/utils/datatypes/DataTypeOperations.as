/** DataTypeOperations  * ----------------------------------------------------------------------- *  *	  * ----------------------------------------------------------------------- */  	package com.avatarlabs.utils.datatypes	{		public class DataTypeOperations		{			/** convertNumberToString			  * ----------------------------------------------------------------------- *			  *				  * ----------------------------------------------------------------------- */				public static function convertNumberToString( number:Number ):String				{					var result:String = number.toString();										var commasNeeded:Number = Math.floor(( number.toString().length-1 ) / 3 );										while( commasNeeded>0 )					{						var index:Number = result.indexOf(",")-3 > 0 ? result.indexOf(",")-3 : result.length-3;												if( index > 0 )							result = result.substr( 0, index ) + "," + result.substr( index );							else break;												commasNeeded--;					}										return result;				}							/** convertStringtoNumber			  * ----------------------------------------------------------------------- *			  *	turns '1,000,000' into 1000000			  * ----------------------------------------------------------------------- */				public static function convertStringtoNumber( number:String ):Number				{					var result:Number = Number( number.split(",").join("") );					return result;				}						/** convertNumberToDecimals			  * ----------------------------------------------------------------------- *			  *				  * ----------------------------------------------------------------------- */				public static function convertNumberToDecimals( number:Number, decimals:Number ):Number				{					return Math.round( number * Math.pow( 10,  decimals ))/Math.pow( 10, decimals );				}						/** convertSecondsToTimeString			  * ----------------------------------------------------------------------- *			  *	converts 90.10 to 1:30:10			  * ----------------------------------------------------------------------- */				public static function convertSecondsToTimeString( seconds:Number ):String				{					var secondsStr = String( seconds );					var secondsArr = secondsStr.split( "." );					var min = Math.floor( secondsArr[0] / 60 );					var sec = secondsArr[0] % 60;					var milisec = secondsArr[1]==undefined ? 0 : secondsArr[1];										/* adding "0" to min, sec in front and adding "0" to milisec in the back */					var minString:String = String( min );						minString = minString.length==1 ? "0"+minString : minString;										var secString:String = String( sec );						secString = secString.length==1 ? "0"+secString : secString;										var milisecString:String = String( milisec );						milisecString = milisecString.length==1 ? milisecString+"0" : milisecString;										return ( minString+":"+secString+":"+milisecString );				}							/** convertTimeToString			 *	------------------------------------------------------------------------- *			 *	@param: seconds:Number			 *	returns hh:mm:ss			 *	------------------------------------------------------------------------- */				public static function convertTimeToString( seconds:Number, hourDisplayed:Boolean=true, minuteDisplayed:Boolean=true, secondDisplayed:Boolean=true, milisecondDisplayed:Boolean=false ):String				{					if( seconds == 0 )						return "0";										var hour:Number = Math.floor( seconds / 3600 );					var min:Number = Math.floor( (seconds % 3600) / 60 );					var sec:Number = (seconds % 3600) % 60;					var result:String = '';										/*					if( hourDisplayed )					{						if ( hour > 0 )							result += String( hour )+":";					}										if( minuteDisplayed )					{						if ( hour==0 && min!=0)						{							result += String( min )+":";						}						else if ( hour > 0 )						{							if ( min > 0 )								result += ( String(min).length==1 ? "0"+String(min) : String(min) ) + ":";							else								result += "00:";						}					}										if ( hour==0 && min==0 )					{						result += "00:"+String( sec );					}					else					{						if ( sec > 0 )							result += ( String(sec).length==1 ? "0"+String(sec) : String(sec) );						else							result += "00";					}					*/										if( hourDisplayed )					{						result += (String(hour).length == 1 ? "0"+hour : hour);					}										if( minuteDisplayed )					{						if( hourDisplayed ) result += ":";						result += (String(min).length == 1 ? "0"+min : min);					}										if( secondDisplayed )					{						if( minuteDisplayed ) result += ":";						result += (String(sec).length == 1 ? "0"+sec : sec);					}										return result;				}		}	}