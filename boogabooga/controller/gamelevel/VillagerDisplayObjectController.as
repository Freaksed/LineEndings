/** VillagerDisplayObjectController  *	---------------------------------------------------------------------------- *  *	@desc:  *		Thils class controls all the chickens that are currently on the board,  *		active or non active.  *	  *	@author:   *		Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */	package com.boogabooga.controller.gamelevel	{		import flash.display.MovieClip;		import flash.events.*;		import flash.errors.*;		import flash.geom.Point;		import flash.utils.getDefinitionByName;		import flash.utils.getQualifiedClassName;		import flash.utils.getTimer;		import flash.utils.Timer;				import com.avatarlabs.utils.ArrayUtil;		import com.avatarlabs.utils.VectorUtil;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.timers.CustomTimer;				import com.boogabooga.controller.gamelevel.DisplayObjectController;		import com.boogabooga.data.gamelevel.GameLevelDataIndex;		import com.boogabooga.data.gamelevel.Villager;		import com.boogabooga.events.GameLevelEvent;		import com.boogabooga.ui.gamelevel.VillagerDisplayObject;		import com.boogabooga.ui.gamelevel.Gameboard;		import com.boogabooga.ui.gamelevel.GameLevelDisplayLayerItem;				public class VillagerDisplayObjectController extends DisplayObjectController		{			//protected var _villagerDisplayObjects:Array;			protected var _villagerDisplayObjects:Vector.<VillagerDisplayObject>;			protected var _villagerDisplayObjectsLength:int;						protected var _gameboardController:GameboardController;						/** Constructor			  *	---------------------------------------------------------------------------- */			 	public function VillagerDisplayObjectController()				{					init();				}								public function set gameboardController( gc:GameboardController ):void { _gameboardController = gc; }				public function get villagerDisplayObjects():Vector.<VillagerDisplayObject> { return _villagerDisplayObjects; }				public function get villagerDisplayObjectsLength():int { return _villagerDisplayObjectsLength; }							/** init			  *	---------------------------------------------------------------------------- */				override public function init():void				{					super.init();										_debug = false;					//_villagerDisplayObjects = new Array();					_villagerDisplayObjects = new Vector.<VillagerDisplayObject>;					_villagerDisplayObjectsLength = 0;				}							/** pause			  *	---------------------------------------------------------------------------- */				override public function pause():void				{					if( _debug ) ConsoleBroadcaster.broadcast( "VillagerDisplayObjectController", "pause();" );										for( var i:uint=0; i<_villagerDisplayObjectsLength; ++i )					{						_villagerDisplayObjects[i].pause();					}									}							/** unpause			  *	---------------------------------------------------------------------------- */				override public function unpause():void				{					if( _debug ) ConsoleBroadcaster.broadcast( "VillagerDisplayObjectController", "unpause();" );										for( var i:uint=0; i<_villagerDisplayObjectsLength; ++i )					{						_villagerDisplayObjects[i].unpause();					}									}							/** kill			  *	---------------------------------------------------------------------------- */				override public function kill():void				{					/*					for( var i:uint=0; i<_villagerDisplayObjects.length; ++i )					{						_villagerDisplayObjects[i].removeEventListener( "onClick", handleChickenClicked );						_villagerDisplayObjects[i].removeEventListener( "onRemoveFromGame", handleChickenRemovedFromGame );						VillagerDisplayObject(_villagerDisplayObjects[i]).kill();						_villagerDisplayObjects[i] = null;					}					*/										while( _villagerDisplayObjects.length > 0 )						removeVillager( _villagerDisplayObjects[0] );										_villagerDisplayObjects = null;										_gameboardController = null;										super.kill();				}							/** updateOnEnterFrame			  *	---------------------------------------------------------------------------- *			  *	This updates the display object on every enter frame loop.			  *	---------------------------------------------------------------------------- */				public function updateOnEnterFrame():void				{					for( var i:int=0; i<_villagerDisplayObjectsLength; ++i )					{						_villagerDisplayObjects[i].updateOnEnterFrame();					}				}							/** start			  *	---------------------------------------------------------------------------- */				public function start():void				{					/*					var villager:Villager;					var villagerDisplayObject:VillagerDisplayObject;										villager = GameLevelDataIndex.getInstance().getVillager(1);										villagerDisplayObject = new VillagerDisplayObject();					villagerDisplayObject.contentClip = new (getDefinitionByName("VillagerDisplayObjectLibrary") as Class)();					villagerDisplayObject.init();					villagerDisplayObject.villager = GameLevelDataIndex.getInstance().getVillager(1);					villagerDisplayObject.positionIn2D.x = 300;					villagerDisplayObject.positionIn2D.y = -400;					villagerDisplayObject.inIsometricView = _gameboardReference.inIsometricView;					_gameboardReference.tilesContainer_mc.addChild( villagerDisplayObject.contentClip );					villagerDisplayObject.render();					addVillager( villagerDisplayObject );										//trace( "villagerDisplayObject.contentClip.x: "+villagerDisplayObject.contentClip.x );					//trace( "villagerDisplayObject.contentClip.y: "+villagerDisplayObject.contentClip.y );										villagerDisplayObject = new VillagerDisplayObject();					villagerDisplayObject.contentClip = new (getDefinitionByName("VillagerDisplayObjectLibrary") as Class)();					villagerDisplayObject.init();					villagerDisplayObject.villager = GameLevelDataIndex.getInstance().getVillager(2);					villagerDisplayObject.positionIn2D.x = 500;					villagerDisplayObject.positionIn2D.y = -400;					villagerDisplayObject.inIsometricView = _gameboardReference.inIsometricView;					_gameboardReference.tilesContainer_mc.addChild( villagerDisplayObject.contentClip );					villagerDisplayObject.render();					addVillager( villagerDisplayObject );										//trace( "villagerDisplayObject.contentClip.x: "+villagerDisplayObject.contentClip.x );					//trace( "villagerDisplayObject.contentClip.y: "+villagerDisplayObject.contentClip.y );										villagerDisplayObject = new VillagerDisplayObject();					villagerDisplayObject.contentClip = new (getDefinitionByName("VillagerDisplayObjectLibrary") as Class)();					villagerDisplayObject.init();					villagerDisplayObject.villager = GameLevelDataIndex.getInstance().getVillager(3);					villagerDisplayObject.positionIn2D.x = 500;					villagerDisplayObject.positionIn2D.y = -550;					villagerDisplayObject.inIsometricView = _gameboardReference.inIsometricView;					_gameboardReference.tilesContainer_mc.addChild( villagerDisplayObject.contentClip );					villagerDisplayObject.render();					addVillager( villagerDisplayObject );										//trace( "villagerDisplayObject.contentClip.x: "+villagerDisplayObject.contentClip.x );					//trace( "villagerDisplayObject.contentClip.y: "+villagerDisplayObject.contentClip.y );					*/				}								public function addVillager( displayObject:VillagerDisplayObject ):void				{					ConsoleBroadcaster.broadcast( "VillagerDisplayObjectController", "addVillager();" );										//environmentObjectsDisplayLayer_mc.addClipToLayerInFront( envDisplayObject.contentClip, (GameLevelDataIndex.getInstance().boardMaxRows - envDisplayObject.gameLevelEnvironmentObject.column + envDisplayObject.gameLevelEnvironmentObject.row), GameLevelDisplayLayerItem.LAYER_BACKGROUND );					_gameboardReference.environmentObjectsDisplayLayerClip.addClipToLayerInFront( displayObject.contentClip, GameLevelDataIndex.getInstance().boardMaxRows-displayObject.gameLevelVillagerObject.column+displayObject.gameLevelVillagerObject.row, GameLevelDisplayLayerItem.LAYER_BACKGROUND );					_villagerDisplayObjects.push( displayObject );					_villagerDisplayObjectsLength = _villagerDisplayObjects.length;				}								public function removeVillager( displayObject:VillagerDisplayObject ):void				{					var villagerDisplayObject:VillagerDisplayObject = VectorUtil.remove( _villagerDisplayObjects, displayObject );					if( villagerDisplayObject != null )					{						MovieClip(villagerDisplayObject.contentClip.parent).removeChild( villagerDisplayObject.contentClip );						villagerDisplayObject.kill();												villagerDisplayObject = null;					}					_villagerDisplayObjectsLength = _villagerDisplayObjects.length;				}								public function showVillagerAnimation( type:int ):void				{					ConsoleBroadcaster.broadcast( "VillagerDisplayObjectController", "showVillagerAnimation("+type+");" );										for( var i:int=0; i<_villagerDisplayObjectsLength; ++i )					{						_villagerDisplayObjects[i].showAnimation( type );					}				}						}	}