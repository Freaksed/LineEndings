/** Enemy  *	---------------------------------------------------------------------------- *  *	@desc:  *		Enemy data class  *	@author:   *		Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */	package com.boogabooga.data.gamelevel	{		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.events.IOErrorEvent;		import flash.events.FullScreenEvent;		import flash.events.ProgressEvent;		import flash.external.ExternalInterface;		import flash.net.URLLoader;		import flash.net.URLRequest;		import flash.net.URLRequestMethod;		import flash.net.URLVariables;				import com.avatarlabs.utils.ArrayUtil;		import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.console.ConsoleBroadcaster;				import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.maingame.*;				public class Enemy extends AbstractGameObject		{			protected var _health:Number;			protected var _maxHealth:Number;			protected var _power:Number;			protected var _rateOfFire:Number;			protected var _range:Number;			protected var _speed:Number;			protected var _additionalAttackValue:Number;			protected var _hitSoundDataIds:Array;			protected var _hatchlingId:int;			protected var _walkUpAnimationObject:AnimationObject;			protected var _walkDownAnimationObject:AnimationObject;			protected var _attackUpAnimationObject:AnimationObject;			protected var _attackDownAnimationObject:AnimationObject;			protected var _deathUpAnimationObject:AnimationObject;			protected var _deathDownAnimationObject:AnimationObject;			protected var _additionalAttackUpAnimationObject:AnimationObject;			protected var _additionalAttackDownAnimationObject:AnimationObject;			protected var _listed:Boolean;			protected var _uniqueSoundDataIds:Array;						/** Constructor			  *	---------------------------------------------------------------------- */				public function Enemy()				{					init();				}							/** init			  *	---------------------------------------------------------------------- */				override public function init():void				{					super.init();										_debug = true;										_hitSoundDataIds = new Array();					_uniqueSoundDataIds = new Array();				}							/** set/get health			  *	---------------------------------------------------------------------- */				public function set health( n:Number ):void				{					_health = n;										if( isNaN(_maxHealth) )						_maxHealth = _health;				}				public function get health():Number { return _health; }							/** get maxHealth			  *	---------------------------------------------------------------------- */				public function get maxHealth():Number { return _maxHealth; }							/** set/get power			  *	---------------------------------------------------------------------- */				public function set power( n:Number ):void { _power = n; }				public function get power():Number { return _power; }							/** set/get rateOfFire			  *	---------------------------------------------------------------------- */				public function set rateOfFire( n:Number ):void { _rateOfFire = n; }				public function get rateOfFire():Number { return _rateOfFire; }							/** set/get range			  *	---------------------------------------------------------------------- */				public function set range( n:Number ):void { _range = n; }				public function get range():Number { return _range; }							/** set/get speed			  *	---------------------------------------------------------------------- */				public function set speed( n:Number ):void { _speed = n; }				public function get speed():Number { return _speed; }								public function set additionalAttackValue( n:Number ):void { _additionalAttackValue = n; }				public function get additionalAttackValue():Number { return _additionalAttackValue; }								public function set hatchlingId( i:int ):void { _hatchlingId = i; }				public function get hatchlingId():int { return _hatchlingId; }								public function set walkUpAnimationObject( a:AnimationObject ):void { _walkUpAnimationObject = a; }				public function get walkUpAnimationObject():AnimationObject { return _walkUpAnimationObject; }								public function set walkDownAnimationObject( a:AnimationObject ):void { _walkDownAnimationObject = a; }				public function get walkDownAnimationObject():AnimationObject { return _walkDownAnimationObject; }								public function set attackUpAnimationObject( a:AnimationObject ):void { _attackUpAnimationObject = a; }				public function get attackUpAnimationObject():AnimationObject { return _attackUpAnimationObject; }								public function set attackDownAnimationObject( a:AnimationObject ):void { _attackDownAnimationObject = a; }				public function get attackDownAnimationObject():AnimationObject { return _attackDownAnimationObject; }								public function set deathUpAnimationObject( a:AnimationObject ):void { _deathUpAnimationObject = a; }				public function get deathUpAnimationObject():AnimationObject { return _deathUpAnimationObject; }								public function set deathDownAnimationObject( a:AnimationObject ):void { _deathDownAnimationObject = a; }				public function get deathDownAnimationObject():AnimationObject { return _deathDownAnimationObject; }								public function set additionalAttackUpAnimationObject( a:AnimationObject ):void { _additionalAttackUpAnimationObject = a; }				public function get additionalAttackUpAnimationObject():AnimationObject { return _additionalAttackUpAnimationObject; }								public function set additionalAttackDownAnimationObject( a:AnimationObject ):void { _additionalAttackDownAnimationObject = a; }				public function get additionalAttackDownAnimationObject():AnimationObject { return _additionalAttackDownAnimationObject; }								public function set listed( b:Boolean ):void { _listed = b; }				public function get listed():Boolean { return _listed; }								public function set hitSoundDataIds( a:Array ):void { _hitSoundDataIds = a; }				public function get hitSoundDataIds():Array { return _hitSoundDataIds; }								public function set uniqueSoundDataIds( a:Array ):void { _uniqueSoundDataIds = a; }				public function get uniqueSoundDataIds():Array { return _uniqueSoundDataIds; }								public function collectUniqueSoundDataIds():void				{					var j:int;										if( _walkUpAnimationObject != null )					{						for( j=0; j<_walkUpAnimationObject.soundDataIds.length; ++j )						{							if( ArrayUtil.find( _uniqueSoundDataIds, _walkUpAnimationObject.soundDataIds[j] ) == null )								_uniqueSoundDataIds.push( _walkUpAnimationObject.soundDataIds[j] );						}					}										if( _walkDownAnimationObject != null )					{						for( j=0; j<_walkDownAnimationObject.soundDataIds.length; ++j )						{							if( ArrayUtil.find( _uniqueSoundDataIds, _walkDownAnimationObject.soundDataIds[j] ) == null )								_uniqueSoundDataIds.push( _walkDownAnimationObject.soundDataIds[j] );						}					}										if( _attackUpAnimationObject != null )					{						for( j=0; j<_attackUpAnimationObject.soundDataIds.length; ++j )						{							if( ArrayUtil.find( _uniqueSoundDataIds, _attackUpAnimationObject.soundDataIds[j] ) == null )								_uniqueSoundDataIds.push( _attackUpAnimationObject.soundDataIds[j] );						}					}										if( _attackDownAnimationObject != null )					{						for( j=0; j<_attackDownAnimationObject.soundDataIds.length; ++j )						{							if( ArrayUtil.find( _uniqueSoundDataIds, _attackDownAnimationObject.soundDataIds[j] ) == null )								_uniqueSoundDataIds.push( _attackDownAnimationObject.soundDataIds[j] );						}					}										if( _deathUpAnimationObject != null )					{						for( j=0; j<_deathUpAnimationObject.soundDataIds.length; ++j )						{							if( ArrayUtil.find( _uniqueSoundDataIds, _deathUpAnimationObject.soundDataIds[j] ) == null )								_uniqueSoundDataIds.push( _deathUpAnimationObject.soundDataIds[j] );						}					}										if( _deathDownAnimationObject != null )					{						for( j=0; j<_deathDownAnimationObject.soundDataIds.length; ++j )						{							if( ArrayUtil.find( _uniqueSoundDataIds, _deathDownAnimationObject.soundDataIds[j] ) == null )								_uniqueSoundDataIds.push( _deathDownAnimationObject.soundDataIds[j] );						}					}										if( _additionalAttackUpAnimationObject != null )					{						for( j=0; j<_additionalAttackUpAnimationObject.soundDataIds.length; ++j )						{							if( ArrayUtil.find( _uniqueSoundDataIds, _additionalAttackUpAnimationObject.soundDataIds[j] ) == null )								_uniqueSoundDataIds.push( _additionalAttackUpAnimationObject.soundDataIds[j] );						}					}										if( _additionalAttackDownAnimationObject != null )					{						for( j=0; j<_additionalAttackDownAnimationObject.soundDataIds.length; ++j )						{							if( ArrayUtil.find( _uniqueSoundDataIds, _additionalAttackDownAnimationObject.soundDataIds[j] ) == null )								_uniqueSoundDataIds.push( _additionalAttackDownAnimationObject.soundDataIds[j] );						}					}										for( j=0; j<_hitSoundDataIds.length; ++j )					{						if( ArrayUtil.find( _uniqueSoundDataIds, _hitSoundDataIds[j] ) == null )							_uniqueSoundDataIds.push( _hitSoundDataIds[j] );					}				}								public function clone():Enemy				{					var cloned:Enemy = UtilFunctions.clone(this) as Enemy;										return cloned;				}						}			}