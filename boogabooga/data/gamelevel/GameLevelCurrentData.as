/** GameLevelCurrentData  *	---------------------------------------------------------------------------- *  *	@desc:  *		Main data index for the game. It's a singleton that you can access from anywhere.  *	@author:   *		Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */	package com.boogabooga.data.gamelevel	{		import flash.events.*;		import flash.errors.*;				import com.avatarlabs.utils.ArrayUtil;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.timers.CustomTimer;		import com.boogabooga.data.maingame.Gift;		import com.boogabooga.data.maingame.Island;		import com.boogabooga.data.maingame.Village;				public class GameLevelCurrentData extends EventDispatcher		{			protected static var _instance:GameLevelCurrentData;						protected var _gift:Gift;			protected var _chickenCount:uint;			//protected var _slotTimer:CustomTimer; //I think the slot timer class will take care of this cooldown time.			//protected var _godTimer:CustomTimer;			protected var _selectedAttacks:Array; //Selected weapons and selected gods are in this array, not sureif we need to separate			protected var _playingIsland:Island;			protected var _playingVillage:Village;						/** Constructor			  *	---------------------------------------------------------------------- */				public function GameLevelCurrentData()				{					init();				}							/** reset			  *	---------------------------------------------------------------------- */				public static function reset():void				{					_instance = null;				}							/** getInstance			  *	---------------------------------------------------------------------- */				public static function getInstance():GameLevelCurrentData				{					if( _instance==null ) _instance = new GameLevelCurrentData();					return _instance;				}								public function set chickenCount( u:uint ):void				{					_chickenCount = u;										EventNotificationCenter.getInstance().sendSignal( "onChickenCountUpdated", this, {chickenCount:_chickenCount} );				}				public function get chickenCount():uint { return _chickenCount; }								public function get selectedAttacks():Array { return _selectedAttacks; }								public function set gift( g:Gift ):void { _gift = g; }				public function get gift():Gift { return _gift; }								public function set playingIsland( i:Island ):void { _playingIsland = i; }				public function get playingIsland():Island { return _playingIsland; }								public function set playingVillage( v:Village ):void { _playingVillage = v; }				public function get playingVillage():Village { return _playingVillage; }							/** init			  *	---------------------------------------------------------------------- */				public function init():void				{					_chickenCount = 0;										_selectedAttacks = new Array();				}								public function kill():void				{					ArrayUtil.removeAll( _selectedAttacks );					_chickenCount = 0;					_gift = null;					_playingIsland = null;					_playingVillage = null;				}		}			}