/** AbstractGameObject  *	---------------------------------------------------------------------------- *  *	@desc:  *		Base data class that can be used for most of the data classes.  *	@author:   *		Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */	package com.boogabooga.data.gamelevel	{		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.events.IOErrorEvent;		import flash.events.FullScreenEvent;		import flash.events.ProgressEvent;		import flash.external.ExternalInterface;		import flash.net.URLLoader;		import flash.net.URLRequest;		import flash.net.URLRequestMethod;		import flash.net.URLVariables;				import com.avatarlabs.utils.ArrayUtil;		import com.avatarlabs.utils.VectorUtil;		import com.avatarlabs.utils.console.ConsoleBroadcaster;				import com.boogabooga.data.maingame.*;				public dynamic class AbstractGameObject extends Object		{			protected var _debug:Boolean;						protected var _id:uint;			protected var _name:int;			protected var _description:int;			protected var _statistic:String;			protected var _linkageId:String;			protected var _assetURL:String;			protected var _iconURL:String;			protected var _cacheIconId:String;			protected var _createdBy:String;			//protected var _attackProperties:Array;  // [ GameLevelUtil.ATTACK_PROPERTY_WOOD_INDEX, GameLevelUtil.ATTACK_PROPERTY_PROJECTILE_INDEX, GameLevelUtil.ATTACK_PROPERTY_ ];			protected var _attackProperties:Vector.<int>;			//protected var _projectileProperties:Array;			protected var _projectileProperties:Vector.<int>;			protected var _projectileParticleEffect:String;			protected var _projectileEffectRange:Number;			//protected var _deathProperties:Array;			protected var _deathProperties:Vector.<int>;			protected var _deathParticleEffect:String;			protected var _deathEffectPower:Number;			protected var _deathEffectRange:Number;			protected var _oneDirectionOnly:Boolean;			protected var _availableOnLevel:int;			protected var _prices:Array;			protected var _dateAdded:Date;						public static const WALK_UP:String = "Walk_Up";			public static const WALK_DOWN:String = "Walk_Down";			public static const ATTACK_UP:String = "Attack_Up";			public static const ATTACK_DOWN:String = "Attack_Down";			public static const DEATH_UP:String = "Death_Up";			public static const DEATH_DOWN:String = "Death_Down";			public static const ADDITIONAL_ATTACK_UP:String = "Additional_Attack_Up";			public static const ADDITIONAL_ATTACK_DOWN:String = "Additional_Attack_Down";			public static const SWITCH_WEAPON_ONE:String = "Switch_Weapon_One";			public static const SWITCH_WEAPON_TWO:String = "Switch_Weapon_Two";						/** Constructor			  *	---------------------------------------------------------------------- */				public function AbstractGameObject()				{					init();				}							/** init			  *	---------------------------------------------------------------------- */				public function init():void				{					_debug = false;										//_attackProperties = new Array();					//_projectileProperties = new Array();					//_deathProperties = new Array();					_attackProperties = new Vector.<int>;					_projectileProperties = new Vector.<int>;					_deathProperties = new Vector.<int>;					_oneDirectionOnly = false;										_statistic = '';										_prices = new Array();				}							/** set/get id			  *	---------------------------------------------------------------------- */				public function set id( u:uint ):void { _id = u; }				public function get id():uint { return _id; }							/** set/get name			  *	---------------------------------------------------------------------- */				public function set name( i:int ):void { _name = i; }				public function get name():int { return _name; }							/** set/get description			  *	---------------------------------------------------------------------- */				public function set description( i:int ):void { _description = i; }				public function get description():int { return _description; }								public function set statistic( s:String ):void { _statistic = s; }				public function get statistic():String { return _statistic; }							/** set/get linkageId			  *	---------------------------------------------------------------------- */				public function set linkageId( s:String ):void { _linkageId = s; }				public function get linkageId():String { return _linkageId; }							/** set/get assetURL			  *	---------------------------------------------------------------------- */				public function set assetURL( s:String ):void { _assetURL = s; }				public function get assetURL():String { return _assetURL; }							/** set/get iconURL			  *	---------------------------------------------------------------------- */				public function set iconURL( s:String ):void { _iconURL = s; }				public function get iconURL():String { return _iconURL; }								public function set cacheIconId( s:String ):void { _cacheIconId = s; }				public function get cacheIconId():String { return _cacheIconId; }							/** set/get createdBy			  *	---------------------------------------------------------------------- */				public function set createdBy( s:String ):void { _createdBy = s; }				public function get createdBy():String { return _createdBy; }								public function set attackProperties( v:Vector.<int> ) { _attackProperties = v; }				public function get attackProperties():Vector.<int> { return _attackProperties; }				//public function set attackProperties( a:Array ):void { _attackProperties = a; }				//public function get attackProperties():Array { return _attackProperties; }								//public function set projectileProperties( a:Array ):void { _projectileProperties = a; }				//public function get projectileProperties():Array { return _projectileProperties; }				public function set projectileProperties( v:Vector.<int> ):void { _projectileProperties = v; }				public function get projectileProperties():Vector.<int> { return _projectileProperties; }								public function set projectileParticleEffect( s:String ):void { _projectileParticleEffect = s; }				public function get projectileParticleEffect():String { return _projectileParticleEffect; }								public function set projectileEffectRange( n:Number ):void { _projectileEffectRange = n; }				public function get projectileEffectRange():Number { return _projectileEffectRange; }								//public function set deathProperties( a:Array ):void { _deathProperties = a; }				//public function get deathProperties():Array { return _deathProperties; }				public function set deathProperties( v:Vector.<int> ):void { _deathProperties = v; }				public function get deathProperties():Vector.<int> { return _deathProperties; }								public function set deathParticleEffect( s:String ):void { _deathParticleEffect = s; }				public function get deathParticleEffect():String { return _deathParticleEffect; }								public function set deathEffectPower( n:Number ):void { _deathEffectPower = n; }				public function get deathEffectPower():Number { return _deathEffectPower; }								public function set deathEffectRange( n:Number ):void { _deathEffectRange = n; }				public function get deathEffectRange():Number { return _deathEffectRange; }								public function set oneDirectionOnly( b:Boolean ):void { _oneDirectionOnly = b; }				public function get oneDirectionOnly():Boolean { return _oneDirectionOnly; }								public function set availableOnLevel( i:int ):void { _availableOnLevel = i; }				public function get availableOnLevel():int { return _availableOnLevel; }								public function set prices( a:Array ):void { _prices = a; }				public function get prices():Array { return _prices; }								public function set dateAdded( d:Date ):void { _dateAdded = d; }				public function get dateAdded():Date { return _dateAdded; }							/** addAttackProperty			  *	---------------------------------------------------------------------- */				public function addAttackProperty( i:int ):void				{					_attackProperties.push( i );				}							/** hasAttackProperty			  *	---------------------------------------------------------------------- */				public function hasAttackProperty( i:int ):Boolean				{					//return (VectorUtil.find( _attackProperties, i ) != null);					return (VectorUtil.find( _attackProperties, i ) != null);				}								public function addProjectileProperty( i:int ):void				{					_projectileProperties.push( i );				}				public function hasProjectileProperty( i:int ):Boolean				{					return (VectorUtil.find( _projectileProperties, i ) != null);				}								public function addDeathProperty( i:int ):void				{					_deathProperties.push( i );				}				public function hasDeathProperty( i:int ):Boolean				{					return (VectorUtil.find( _deathProperties, i ) != null);				}		}			}