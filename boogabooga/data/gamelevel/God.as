/** God  *	---------------------------------------------------------------------------- *  *	@desc:  *		God data class  *	@author:   *		Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */	package com.boogabooga.data.gamelevel	{		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.events.IOErrorEvent;		import flash.events.FullScreenEvent;		import flash.events.ProgressEvent;		import flash.external.ExternalInterface;		import flash.net.URLLoader;		import flash.net.URLRequest;		import flash.net.URLRequestMethod;		import flash.net.URLVariables;				import com.avatarlabs.utils.ArrayUtil;		import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.console.ConsoleBroadcaster;				import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.maingame.*;				public class God extends AbstractGameObject		{			protected var _consumable:Boolean;			protected var _useCount:int;			protected var _power:Number;			protected var _range:Number;			protected var _additionalAttackValue:Number;			protected var _hitSoundDataIds:Array;			protected var _cost:uint;			protected var _earlyUnlockCost:uint;			protected var _usageOnUnlock:uint;			protected var _animationObject:AnimationObject;			protected var _attackParticleAnimationObjectId:int;			protected var _uniqueSoundDataIds:Array;						/** Constructor			  *	---------------------------------------------------------------------- */				public function God()				{					init();				}							/** init			  *	---------------------------------------------------------------------- */				override public function init():void				{					super.init();										_debug = true;										_consumable = true;					_useCount = 0;					_uniqueSoundDataIds = new Array();					_hitSoundDataIds = new Array();				}							/** set/get consumable			  *	---------------------------------------------------------------------- */				public function set consumable( b:Boolean ):void { _consumable = b; }				public function get consumable():Boolean { return _consumable; }							/** set/get useCount			  *	---------------------------------------------------------------------- */				public function set useCount( u:int ):void { _useCount = u < 0 ? 0 : u; }				public function get useCount():int { return _useCount; }							/** set/get power			  *	---------------------------------------------------------------------- */				public function set power( n:Number ):void { _power = n; }				public function get power():Number { return _power; }							/** set/get range			  *	---------------------------------------------------------------------- */				public function set range( n:Number ):void { _range = n; }				public function get range():Number { return _range; }								public function set additionalAttackValue( n:Number ):void { _additionalAttackValue = n; }				public function get additionalAttackValue():Number { return _additionalAttackValue; }							/** set/get cost			  *	---------------------------------------------------------------------- */				public function set cost( u:uint ):void { _cost = u; }				public function get cost():uint { return _cost; }							/** set/get earlyUnlockCost			  *	---------------------------------------------------------------------- */				public function set earlyUnlockCost( u:uint ):void { _earlyUnlockCost = u; }				public function get earlyUnlockCost():uint { return _earlyUnlockCost; }								public function set usageOnUnlock( u:uint ):void { _usageOnUnlock = u; }				public function get usageOnUnlock():uint { return _usageOnUnlock; }								public function set animationObject( a:AnimationObject ):void { _animationObject = a; }				public function get animationObject():AnimationObject { return _animationObject; }								public function set attackParticleAnimationObjectId( i:int ):void { _attackParticleAnimationObjectId = i; }				public function get attackParticleAnimationObjectId():int { return _attackParticleAnimationObjectId; }								public function set hitSoundDataIds( a:Array ):void { _hitSoundDataIds = a; }				public function get hitSoundDataIds():Array { return _hitSoundDataIds; }								public function set uniqueSoundDataIds( a:Array ):void { _uniqueSoundDataIds = a; }				public function get uniqueSoundDataIds():Array { return _uniqueSoundDataIds; }								public function collectUniqueSoundDataIds():void				{					var j:int;										for( j=0; j<_animationObject.soundDataIds.length; ++j )					{						if( ArrayUtil.find( _uniqueSoundDataIds, _animationObject.soundDataIds[j] ) == null )							_uniqueSoundDataIds.push( _animationObject.soundDataIds[j] );					}										for( j=0; j<_hitSoundDataIds.length; ++j )					{						if( ArrayUtil.find( _uniqueSoundDataIds, _hitSoundDataIds[j] ) == null )							_uniqueSoundDataIds.push( _hitSoundDataIds[j] );					}				}								public function clone():God				{					var clonedGod:God = UtilFunctions.clone(this) as God;										return clonedGod;				}						}			}