/** Treasure  *	---------------------------------------------------------------------------- *  *	@desc:  *		Treasure data class  *	@author:   *		Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */	package com.boogabooga.data.maingame	{		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.events.IOErrorEvent;		import flash.events.FullScreenEvent;		import flash.events.ProgressEvent;		import flash.external.ExternalInterface;		import flash.net.URLLoader;		import flash.net.URLRequest;		import flash.net.URLRequestMethod;		import flash.net.URLVariables;				import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.console.ConsoleBroadcaster;				import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.maingame.*;				public class Treasure extends AbstractGameObject		{			protected var _rarity:uint;			protected var _value:uint;			protected var _count:uint;						public static const RARITY_RARE:int = 0;			public static const RARITY_COMMON:int = 1;						/** Constructor			  *	---------------------------------------------------------------------- */				public function Treasure()				{									}							/** init			  *	---------------------------------------------------------------------- */				override public function init():void				{					//trace( "Treasure: init();" );					super.init();				}							/** set/get id			  *	---------------------------------------------------------------------- */				public function set rarity( u:uint ):void { _rarity = u; }				public function get rarity():uint { return _rarity; }								public function set value( u:uint ):void { _value = u; }				public function get value():uint { return _value; }								public function set count( u:uint ):void { _count = u; }				public function get count():uint { return _count; }								public function clone():Treasure				{					var cloned:Treasure = UtilFunctions.clone(this) as Treasure;										//trace( "cloned.attackProperties: "+cloned.attackProperties );					//trace( "_attackProperties: "+_attackProperties );										return cloned;				}						}			}