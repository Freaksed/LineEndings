/** StringsIndex  *	---------------------------------------------------------------------------- *  *	@desc:  *		Main data index for the game. It's a singleton that you can access from anywhere.  *	@author:   *		Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */	package com.boogabooga.data	{		import flash.errors.*;		import flash.events.*;		import flash.geom.Rectangle;				import com.avatarlabs.utils.VectorUtil;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.console.ConsoleBroadcaster;				public class StringsIndex extends EventDispatcher		{			private static var _instance:StringsIndex;						protected var _strings:Vector.<Object>;			protected var _stringsLength:int;						/** Constructor			  *	---------------------------------------------------------------------- */				public function StringsIndex()				{					init();				}								public function get strings():Vector.<Object> { return _strings; }							/** reset			  *	---------------------------------------------------------------------- */				public static function reset():void				{					_instance = null;				}							/** getInstance			  *	---------------------------------------------------------------------- */				public static function getInstance():StringsIndex				{					if( _instance==null ) _instance = new StringsIndex();					return _instance;				}							/** init			  *	---------------------------------------------------------------------- */				public function init():void				{					_strings = new Vector.<Object>;					_stringsLength = 0;				}								public function addString( id:String, name:String, value:String ):void				{					//trace( 'addString('+name+', '+value+');' );					var found:Boolean = false;										//_strings[id] = {name:name, value:value};					for( var i:int=0; i<_stringsLength; ++i )					{						if( _strings[i].id == id )						{							//trace( 'found string, replacing the value' );							found = true;							_strings[i].name = name;							_strings[i].value = value;							break;						}					}										if( !found )					{						_strings.push( {id:id, name:name, value:value} );						_stringsLength = _strings.length;					}				}								public function getString( id:String ):String				{					//if( _strings[id] )						//return _strings[id].value;					for( var i:int=0; i<_stringsLength; ++i )					{						if( _strings[i].id == id )							return _strings[i].value;					}										ConsoleBroadcaster.broadcast( "StringsIndex", "***** ERROR ***** Can't find string, "+id+", in the list" );										return "";				}								public function getStringByName( n:String ):String				{					for( var i:int=0; i<_stringsLength; ++i )					{						if( _strings[i].name ==  n )						{							return _strings[i].value;						}					}										ConsoleBroadcaster.broadcast( "StringsIndex", "***** ERROR ***** Can't find string with name, "+n+", in the list" );										return "";				}						}			}