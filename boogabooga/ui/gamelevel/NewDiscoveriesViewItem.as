/** NewDiscoveriesViewItem  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.gamelevel	{		import flash.display.Bitmap;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;		import flash.utils.getDefinitionByName;				import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.AssetLoaderEvent;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.userinterface.DynamicUIArrowedSlider;		import com.avatarlabs.utils.userinterface.DynamicUIScroller;		import com.avatarlabs.utils.userinterface.DynamicUISlider;		import com.avatarlabs.utils.userinterface.UIScroller;		import com.avatarlabs.utils.userinterface.UISlider;				import com.boogabooga.controller.maingame.MainGameController;		import com.boogabooga.data.SettingsIndex;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.maingame.Treasure;		import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.gamelevel.Enemy;		import com.boogabooga.data.gamelevel.GameLevelDataIndex;		import com.boogabooga.data.gamelevel.Weapon;		import com.boogabooga.utils.GameLevelUtil;		import flash.text.TextFormat;				public class NewDiscoveriesViewItem extends DynamicUIScroller		{			protected var _item:AbstractGameObject;						protected var _sliderClip:DynamicUIArrowedSlider;						private var _headerOriginalTextFormat:TextFormat;			private var _headerMaxHeight:int;						/**	Stage Instances **/			public var header_mc:MovieClip;			public var image_mc:MovieClip;			public var mask_mc:MovieClip;			public var slider_mc:MovieClip;			public var content_mc:MovieClip;			public var paperBackground_mc:MovieClip;			public var background_mc:MovieClip;			public var elements_mc:MovieClip;			public var defense_mc:MovieClip;			public var superDefense_mc:MovieClip;			public var monster_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function NewDiscoveriesViewItem()				{					//init();				}							/** init			  *	---------------------------------------------------------------------------- */				override public function dynamicInit():void				{					super.dynamicInit();										header_mc = _dynamicClip.header_mc;					image_mc = _dynamicClip.image_mc;					mask_mc = _dynamicClip.mask_mc;					slider_mc = _dynamicClip.slider_mc;					content_mc = _dynamicClip.content_mc;					paperBackground_mc = _dynamicClip.paperBackground_mc;					paperBackground_mc.cacheAsBitmap = true;					background_mc = _dynamicClip.background_mc;					background_mc.cacheAsBitmap = true;					elements_mc = _dynamicClip.elements_mc;					defense_mc = _dynamicClip.defense_mc;					defense_mc.visible = false;					superDefense_mc = _dynamicClip.superDefense_mc;					superDefense_mc.visible = false;					monster_mc = _dynamicClip.monster_mc;					monster_mc.visible = false;										_headerMaxHeight = 29;					_headerOriginalTextFormat = UtilFunctions.clone( header_mc.label_txt.getTextFormat() ) as TextFormat;										content_mc.label_txt.autoSize = TextFieldAutoSize.LEFT;					content_mc.label_txt.styleSheet = SettingsIndex.getInstance().fontManager.getStyleSheet();										_sliderClip = new DynamicUIArrowedSlider();					_sliderClip.dynamicClip = slider_mc;					_sliderClip.dynamicInit();					_sliderClip.setProperty( "y" );					_sliderClip.setHandle( slider_mc.handle_mc );					_sliderClip.setBounds( slider_mc.bound_mc );										setProperty( "y" );					setContent( content_mc );					setMask( mask_mc );					setSlider( _sliderClip );					//toggleSlider();					slider_mc.visible = false;				}							/** initItem			  *	---------------------------------------------------------------------------- */				public function initItem( item:AbstractGameObject ):void				{					_item = item;										if( _item is Weapon )					{						if( _item.consumable )							superDefense_mc.visible = true;						else							defense_mc.visible = true;					}					else if( _item is Enemy )					{						monster_mc.visible = true;					}					else					{						superDefense_mc.visible = true;					}										var element:MovieClip;					var elements:Array;					var i:int;										if( _item is Weapon )					{						elements = GameLevelUtil.getItemElements( _item );												for( i=0; i<elements.length; ++i )						{							element = new (getDefinitionByName(elements[i]) as Class)();							element.width = 24;							element.height = 25;							//element.x = -12;							element.y = 24 * i;							elements_mc.addChild( element );						}					}					else if( _item is Enemy )					{						elements = GameLevelUtil.getItemStrongElements( _item );												for( i=0; i<elements.length; ++i )						{							element = new (getDefinitionByName(elements[i]) as Class)();							element.width = 24;							element.height = 25;							//element.x = -12;							element.y = 24 * i;							elements_mc.addChild( element );						}					}										header_mc.label_txt.setTextFormat( _headerOriginalTextFormat );					TextFormatting.formatTextWithFontName( header_mc.label_txt, StringsIndex.getInstance().getString(String(_item.name)), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					//TextFormatting.formatTextWithFontName( content_mc.label_txt, StringsIndex.getInstance().getString(String(_item.description))+'\n'+_item.statistic, "Lithos Pro Black", false, TextFieldAutoSize.LEFT );										var tf:TextFormat = header_mc.label_txt.getTextFormat();					while( header_mc.label_txt.height > _headerMaxHeight )					{						tf.size = Number(tf.size) - 1;						header_mc.label_txt.setTextFormat( tf );					}										content_mc.label_txt.htmlText = '<span class="font2Default">'+StringsIndex.getInstance().getString(String(_item.description))+'\n'+_item.statistic+'</span>';										toggleSlider();										if( BitmapDataManager.getInstance().getBitmapData(_item.cacheIconId) != null )					{						addImage();					}					else					{						MainGameController.getInstance().urgentAssetLoaderController.addBitmapToLoad( _item.cacheIconId, _item.iconURL );						MainGameController.getInstance().urgentAssetLoaderController.addEventListener( AssetLoaderEvent.COMPLETE, handleIconLoadComplete );						MainGameController.getInstance().urgentAssetLoaderController.startLoadAssets();					}				}							/** handleIconLoadComplete			  *	---------------------------------------------------------------------------- */				protected function handleIconLoadComplete( event:AssetLoaderEvent ):void				{					ConsoleBroadcaster.broadcast( "NewDiscoveriesViewItem", "handleIconLoadComplete();" );										MainGameController.getInstance().urgentAssetLoaderController.removeEventListener( AssetLoaderEvent.COMPLETE, handleIconLoadComplete );										if( BitmapDataManager.getInstance().getBitmapData(_item.cacheIconId) != null )					{						addImage();					}				}							/** addImage			  *	---------------------------------------------------------------------------- */				protected function addImage():void				{					var bitmap:Bitmap = new Bitmap( BitmapDataManager.getInstance().getBitmapData(_item.cacheIconId).bitmapData );						bitmap.width = 60;						bitmap.height = 60;						bitmap.x = -30;						bitmap.y = -30;						bitmap.smoothing = true;					image_mc.addChild( bitmap );				}							/** reset			  *	---------------------------------------------------------------------------- */				public function reset():void				{					while( image_mc.numChildren > 0 )						image_mc.removeChildAt(0);										while( elements_mc.numChildren > 0 )						elements_mc.removeChildAt(0);										defense_mc.visible = false;					superDefense_mc.visible = false;					monster_mc.visible = false;										_item = null;										resetScroller();				}							/** show			  *	---------------------------------------------------------------------------- */				public function show():void				{					_dynamicClip.visible = true;				}							/** hide			  *	---------------------------------------------------------------------------- */				public function hide():void				{					_dynamicClip.visible = false;										reset();				}		}	}