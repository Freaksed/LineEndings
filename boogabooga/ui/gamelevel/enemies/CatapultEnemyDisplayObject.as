/** CatapultEnemyDisplayObject  *	---------------------------------------------------------------------------- *  *	@desc:  *		This is the display object clip that will represent Enemy class.  *	@author:   *		Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.gamelevel.enemies	{		import flash.display.Bitmap;		import flash.display.BitmapData;		import flash.display.BlendMode;		import flash.display.DisplayObject;		import flash.display.DisplayObjectContainer;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.IOErrorEvent;		import flash.events.ProgressEvent;		import flash.events.MouseEvent;		import flash.geom.ColorTransform;		import flash.geom.Matrix;		import flash.geom.Point;		import flash.geom.Rectangle;		import flash.events.TimerEvent;		import flash.utils.getDefinitionByName;				import com.greensock.TweenLite;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.loader.CustomLoader;		import com.avatarlabs.utils.timers.CustomTimer;		import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.cache.BitmapDataManager;		import org.osflash.signals.Signal;				//import com.gamelevel.data.*;		import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.gamelevel.Enemy;		import com.boogabooga.data.gamelevel.GameLevelDataIndex;		import com.boogabooga.events.BoogaEvent;		import com.boogabooga.events.GameLevelEvent;		import com.boogabooga.ui.gamelevel.enemies.EnemyDisplayObject;		import com.boogabooga.ui.gamelevel.projectiles.LaserDisplayObject;		import com.boogabooga.utils.GameLevelUtil;				public class CatapultEnemyDisplayObject extends EnemyDisplayObject		{			public var onCatapultFired:Signal;						/**	Stage Instances **/			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function CatapultEnemyDisplayObject()				{									}							/** init			  *	---------------------------------------------------------------------------- */				override public function init():void				{					super.init();										onCatapultFired = new Signal( CatapultEnemyDisplayObject, Point, Number );				}							/** die			  *	---------------------------------------------------------------------------- */				override public function die():void				{										super.die();				}							/** kill			  *	---------------------------------------------------------------------------- */				override public function kill():void				{					onCatapultFired = null;										super.kill();				}							/**	******************************************* *			  * AnimationDisplayObject Events			  *	******************************************* */			 				/** handleAttackAnimationEvent			  *	---------------------------------------------------------------------------- */				override protected function handleAttackAnimationEventFired():void				{					if( _debug ) ConsoleBroadcaster.broadcast( "CatapultEnemyDisplayObject", "handleAttackAnimationEvent();" );										if( _alive && _attackedTarget != null )					{						//_attackedTarget.hit( _attackingGameObject, _attackingGameObject.power );						//_attackedTarget = null;												//dispatchEvent( new GameLevelEvent(GameLevelEvent.CATAPULT_FIRE, {shootTo:_attackedTarget.positionIn2D, altitude:_attackedTarget.altitude}) );						onCatapultFired.dispatch( this, _attackedTarget.positionIn2D, _attackedTarget.altitude );												//trace( "_currentAnimationDisplayObject: "+_currentAnimationDisplayObject );												_attackedTarget = null;					}				}						}			}