/** ChickenIndicator  *	---------------------------------------------------------------------------- *  *	@desc:  *		This is the display object clip that will represent Projectile class.  *	@author:   *		Christian Widodo, [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.gamelevel	{		import flash.display.Bitmap;		import flash.display.BitmapData;		import flash.display.BlendMode;		import flash.display.DisplayObject;		import flash.display.DisplayObjectContainer;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.events.FullScreenEvent;		import flash.events.IOErrorEvent;		import flash.events.ProgressEvent;		import flash.geom.ColorTransform;		import flash.geom.Matrix;		import flash.geom.Point;		import flash.geom.Rectangle;		import flash.text.TextFieldAutoSize;		import flash.utils.getDefinitionByName;				import com.greensock.TweenLite;		import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.loader.CustomLoader;		import com.avatarlabs.utils.particles.PartigenParticlesIndex;		import com.avatarlabs.utils.text.TextFormatting;		import com.desuade.partigen.emitters.Emitter;		import com.desuade.partigen.renderers.StandardRenderer;				import com.boogabooga.data.gamelevel.GameLevelDataIndex;		import com.boogabooga.events.GameLevelEvent;						public class ChickenIndicator extends EventDispatcher		{			protected var _debug:Boolean;			protected var _contentClip:MovieClip;			//protected var _particleRenderer:StandardRenderer;			protected var _chickenCollectedClips:Vector.<AnimationDisplayObject>;			protected var _chickenCollectedClipsLength:int;						/**	Stage Instances **/			public var label_mc:MovieClip;			public var chicken_mc:MovieClip;			//public var background_mc:MovieClip;			//public var background2_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function ChickenIndicator()				{					//init();				}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										label_mc = _contentClip.label_mc;					chicken_mc = _contentClip.chicken_mc;					chicken_mc.cacheAsBitmap = false;					//background_mc = _contentClip.background_mc;					//background_mc.cacheAsBitmap = false;					//background2_mc = _contentClip.background2_mc;					//background2_mc.cacheAsBitmap = false;				}				public function get contentClip():MovieClip { return _contentClip; }							/** init			  *	---------------------------------------------------------------------------- */				public function init():void				{					//trace( "ChickenIndicator: init();" );										_debug = true;										_chickenCollectedClips = new Vector.<AnimationDisplayObject>;					_chickenCollectedClipsLength = 0;										//trace( label_mc );					//trace( MovieClip(label_mc).label_txt );										//TextFormatting.formatUILabel( label_mc, MovieClip(label_mc).label_txt, "SF Fedora", false, "0" );					//TextFormatting.formatUILabel( label_mc, MovieClip(label_mc).label_txt, "Lithos Pro Black", false, "0" );					TextFormatting.formatTextWithFontName( label_mc.label_txt, " ", "Lithos Pro Black", false, TextFieldAutoSize.LEFT );										EventNotificationCenter.getInstance().addSignalListener( "onChickenCountUpdated", handleChickenCountUpdated, this );										//_particleRenderer = new StandardRenderer( _contentClip, "top" );										EventNotificationCenter.getInstance().addSignalListener( GameLevelEvent.ON_CHICKEN_OBTAINED_ANIMATION_COMPLETE, handlePlayAddChickenParticleEffect, this );				}							/** kill			  *	---------------------------------------------------------------------------- */				public function kill():void				{					EventNotificationCenter.getInstance().removeSignalListener( "onChickenCountUpdated", handleChickenCountUpdated );				}								public function show():void				{					_contentClip.visible = true;				}								public function hide():void				{					_contentClip.visible = false;				}								public function updateOnEnterFrame():void				{					for( var i:int=0; i<_chickenCollectedClipsLength; ++i )					{						if( _chickenCollectedClips[i].running )							_chickenCollectedClips[i].showNextAnimation();					}				}							/** updateChickenAmount			  *	---------------------------------------------------------------------------- */				public function updateChickenAmount( amount:uint ):void				{					//label_mc.setText( String(amount) );					TextFormatting.formatTextWithFontName( label_mc.label_txt, String(amount), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );				}							/** handleChickenCountUpdated			  *	---------------------------------------------------------------------------- */				protected function handleChickenCountUpdated( customParameters:Object ):void				{					updateChickenAmount( customParameters.chickenCount );				}							/** handlePlayAddChickenParticleEffect			  *	---------------------------------------------------------------------------- */				protected function handlePlayAddChickenParticleEffect( customParameters:Object ):void				{					/*					var emitter:Emitter = new Emitter();						emitter.x = label_mc.x;						emitter.y = label_mc.y;						emitter.renderer = _particleRenderer;						emitter.fromXML( PartigenParticlesIndex.getInstance().getParticleById("chicken_collect").xml );						emitter.emit( emitter.burst );					*/										var chickenCollectedClip:AnimationDisplayObject;					for( var i=0; i<_chickenCollectedClipsLength; ++i )					{						if( !_chickenCollectedClips[i].running )						{							chickenCollectedClip = _chickenCollectedClips[i];						}					}										if( chickenCollectedClip == null )					{						chickenCollectedClip = new AnimationDisplayObject();						chickenCollectedClip.contentClip = new (getDefinitionByName("DisplayObject.animation") as Class)();						chickenCollectedClip.init();						chickenCollectedClip.onAnimationEnded.add( handleChickenCollectedClipAnimationEnded );						chickenCollectedClip.animationObject = GameLevelDataIndex.getInstance().getAnimationObjectByCacheId( "ChickenCollect1" );						chickenCollectedClip.sourceBD = BitmapDataManager.getInstance().getBitmapData( "ChickenCollect1" ).bitmapData;						chickenCollectedClip.contentClip.x = label_mc.x;						chickenCollectedClip.contentClip.y = label_mc.y + chickenCollectedClip.animationObject.tileHeight - label_mc.height - 10;						chickenCollectedClip.initCanvas();						_contentClip.addChild( chickenCollectedClip.contentClip );												_chickenCollectedClips.push( chickenCollectedClip );						_chickenCollectedClipsLength = _chickenCollectedClips.length;					}										chickenCollectedClip.contentClip.visible = true;					chickenCollectedClip.startAnimation( false, 0 );				}								protected function handleChickenCollectedClipAnimationEnded( animationDisplayObject:AnimationDisplayObject ):void				{					//trace( animationDisplayObject.running );					animationDisplayObject.contentClip.visible = false;				}		}			}