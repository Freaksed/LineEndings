/** LevelEndResultView  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.gamelevel	{		import flash.display.Bitmap;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;				import com.avatarlabs.utils.VectorUtil;		import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import org.osflash.signals.Signal;				import com.boogabooga.data.SoundsIndex;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.gamelevel.GameLevelDataIndex;		import com.boogabooga.data.maingame.Village;		import com.boogabooga.events.BoogaEvent;				public class LevelEndResultView extends EventDispatcher		{			protected var _contentClip:MovieClip;						protected var _islandSelectClip:DynamicUIButton;			protected var _playAgainClip:DynamicUIButton;			protected var _nextClip:DynamicUIButton;						public var onIslandSelectClicked:Signal;			public var onPlayAgainClicked:Signal;			public var onNextClicked:Signal;						/**	Stage Instances **/			public var header_mc:MovieClip;			public var islandSelect_mc:MovieClip;			public var playAgain_mc:MovieClip;			public var next_mc:MovieClip;			public var background_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function LevelEndResultView()				{					//init();				}							/** set/get contentClip			  *	---------------------------------------------------------------------------- */				public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										//header_mc = _contentClip.header_mc;					islandSelect_mc = _contentClip.islandSelect_mc;					islandSelect_mc.cacheAsBitmap = true;					playAgain_mc = _contentClip.playAgain_mc;					playAgain_mc.cacheAsBitmap = true;					next_mc = _contentClip.next_mc;					next_mc.cacheAsBitmap = true;					background_mc = _contentClip.background_mc;					background_mc.cacheAsBitmap = true;				}				public function get contentClip():MovieClip { return _contentClip; }							/** init			  *	---------------------------------------------------------------------------- */				public function init():void				{										//TextFormatting.formatTextWithFontName( header_mc.label_txt, StringsIndex.getInstance().getStringByName("DISCOVERIES_NEW_DISCOVERIES"), "Lithos Pro Black" );					//EventNotificationCenter.getInstance().addSignalListener( BoogaEvent.ON_LANGUAGE_CHANGED, handleLanguageChanged, this );										_islandSelectClip = new DynamicUIButton();					_islandSelectClip.dynamicClip = islandSelect_mc;					_islandSelectClip.dynamicInit();					_islandSelectClip.addEventListener( "onClick", handleIslandSelectClicked, false, 0, true );					_islandSelectClip.addEventListener( "onSetFocus", handleIslandSelectRolledOver, false, 0, true );					_islandSelectClip.addEventListener( "onKillFocus", handleIslandSelectRolledOut, false, 0, true );										_playAgainClip = new DynamicUIButton();					_playAgainClip.dynamicClip = playAgain_mc;					_playAgainClip.dynamicInit();					_playAgainClip.addEventListener( "onClick", handlePlayAgainClicked, false, 0, true );					_playAgainClip.addEventListener( "onSetFocus", handlePlayAgainRolledOver, false, 0, true );					_playAgainClip.addEventListener( "onKillFocus", handlePlayAgainRolledOut, false, 0, true );										_nextClip = new DynamicUIButton();					_nextClip.dynamicClip = next_mc;					_nextClip.dynamicInit();					_nextClip.addEventListener( "onClick", handleNextClicked, false, 0, true );					_nextClip.addEventListener( "onSetFocus", handleNextRolledOver, false, 0, true );					_nextClip.addEventListener( "onKillFocus", handleNextRolledOut, false, 0, true );										onIslandSelectClicked = new Signal();					onPlayAgainClicked = new Signal();					onNextClicked = new Signal();				}							/** reset			  *	---------------------------------------------------------------------------- */				public function reset():void				{					ConsoleBroadcaster.broadcast( "LevelEndResultView", "reset();" );									}							/** show			  *	---------------------------------------------------------------------------- */				public function show():void				{					_contentClip.visible = true;				}							/** hide			  *	---------------------------------------------------------------------------- */				public function hide():void				{					_contentClip.visible = false;										reset();				}							/** handleIslandSelectClicked			  *	---------------------------------------------------------------------------- */				protected function handleIslandSelectClicked( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										//dispatchEvent( new BoogaEvent(BoogaEvent.ON_ISLAND_SELECT) );					onIslandSelectClicked.dispatch();				}							/** handleIslandSelectRolledOver			  *	---------------------------------------------------------------------------- */				protected function handleIslandSelectRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );										EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_islandSelectClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("LEVEL_RESULT_ISLAND_SELECT")} );				}							/** handleIslandSelectRolledOut			  *	---------------------------------------------------------------------------- */				protected function handleIslandSelectRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handlePlayAgainClicked			  *	---------------------------------------------------------------------------- */				protected function handlePlayAgainClicked( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										//dispatchEvent( new BoogaEvent(BoogaEvent.ON_PLAY_AGAIN) );					onPlayAgainClicked.dispatch();				}							/** handlePlayAgainRolledOver			  *	---------------------------------------------------------------------------- */				protected function handlePlayAgainRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );										EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_playAgainClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("LEVEL_RESULT_PLAY_AGAIN")} );				}							/** handlePlayAgainRolledOut			  *	---------------------------------------------------------------------------- */				protected function handlePlayAgainRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleNextClicked			  *	---------------------------------------------------------------------------- */				protected function handleNextClicked( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										//dispatchEvent( new BoogaEvent(BoogaEvent.ON_NEXT) );					onNextClicked.dispatch();				}							/** handleNextRolledOver			  *	---------------------------------------------------------------------------- */				protected function handleNextRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );										EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_nextClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("DISCOVERIES_NEXT_LEVEL")} );				}							/** handleNextRolledOut			  *	---------------------------------------------------------------------------- */				protected function handleNextRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleLanguageChanged			  *	---------------------------------------------------------------------------- *			  *	When a language is changed, update the text accordingly.			  *	---------------------------------------------------------------------------- 				protected function handleLanguageChanged( event:CustomEvent ):void				{					//TextFormatting.formatTextWithFontName( header_mc.label_txt, StringsIndex.getInstance().getStringByName("DISCOVERIES_NEW_DISCOVERIES"), "Lithos Pro Black" );				}*/		}	}