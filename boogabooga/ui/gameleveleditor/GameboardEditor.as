/** GameboardEditor  *	---------------------------------------------------------------------------- *  *	@desc:  *		This is the gameboard editor class used in the editor file.  *		This class provides a way for users to modify game levels.  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.gameleveleditor	{		import flash.display.MovieClip;		import flash.display.StageDisplayState;		import flash.events.Event;		import flash.events.FullScreenEvent;		import flash.events.IOErrorEvent;		import flash.events.MouseEvent;		import flash.events.ProgressEvent;		import flash.events.TimerEvent;		import flash.external.ExternalInterface;		import flash.geom.Point;		import flash.geom.Rectangle;		import flash.net.LocalConnection;		import flash.net.URLLoader;		import flash.net.URLRequest;		import flash.net.URLRequestMethod;		import flash.net.URLVariables;		import flash.system.System;		import flash.utils.getDefinitionByName;		import flash.utils.getQualifiedClassName;		import flash.utils.Timer;				import com.greensock.TweenLite;		import com.greensock.easing.Sine;		import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.loader.CustomLoader;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.timers.CustomTimer;		import com.avatarlabs.utils.timers.ElapsedTime;		import com.avatarlabs.utils.userinterface.UIButton;				import com.boogabooga.controller.gamelevel.WeaponDisplayObjectController;		import com.boogabooga.data.gamelevel.GameLevelDataIndex;		import com.boogabooga.ui.gamelevel.Gameboard;		import com.boogabooga.ui.gamelevel.GameboardTile;		import com.boogabooga.ui.gamelevel.GameLevelDisplayLayer;				public class GameboardEditor extends Gameboard		{						/**	Stage Instances **/			/**	End Stage Instances **/						/** Constructor			 *	---------------------------------------------------------------------------- */				public function GameboardEditor()				{					stop();										//init();				}							/** init			  *	---------------------------------------------------------------------------- */				override public function init():void				{					super.init();										_isEditor = true;										dispatchEvent( new Event(Event.INIT) );				}							/** initTiles			  *	---------------------------------------------------------------------------- */				override protected function initTiles():void				{					super.initTiles();										var i:int, j:int;										for( i=0; i<_tiles.length; ++i )					{						for( j=0; j<_tiles[i].length; ++j )						{							_tiles[i][j].editable = true;							_tiles[i][j].addEventListener( "onTileClicked", handleGameboardTileClicked, false, 0, true );						}					}										for( i=0; i<_diggingTiles1.length; ++i )					{						for( j=0; j<_diggingTiles1[i].length; ++j )						{							_diggingTiles1[i][j].editable = true;							_diggingTiles1[i][j].addEventListener( "onTileClicked", handleDiggingTileArea1Clicked, false, 0, true );						}					}										for( i=0; i<_diggingTiles2.length; ++i )					{						for( j=0; j<_diggingTiles2[i].length; ++j )						{							_diggingTiles2[i][j].editable = true;							_diggingTiles2[i][j].addEventListener( "onTileClicked", handleDiggingTileArea2Clicked, false, 0, true );						}					}										for( i=0; i<_diggingTiles3.length; ++i )					{						for( j=0; j<_diggingTiles3[i].length; ++j )						{							_diggingTiles3[i][j].editable = true;							_diggingTiles3[i][j].addEventListener( "onTileClicked", handleDiggingTileArea3Clicked, false, 0, true );						}					}				}							/** showGameTiles			  *	---------------------------------------------------------------------------- */				public function showGameTiles():void				{					var i:int, j:int;										for( i=0; i<_tiles.length; ++i )					{						for( j=0; j<_tiles[i].length; ++j )						{							_tiles[i][j].contentClip.visible = true;						}					}										environmentObjectsDisplayLayer_mc.visible = true;				}							/** hideGameTiles			  *	---------------------------------------------------------------------------- */				public function hideGameTiles():void				{					var i:int, j:int;										for( i=0; i<_tiles.length; ++i )					{						for( j=0; j<_tiles[i].length; ++j )						{							_tiles[i][j].contentClip.visible = false;						}					}										environmentObjectsDisplayLayer_mc.visible = false;				}							/** showDiggingTiles			  *	---------------------------------------------------------------------------- */				public function showDiggingTiles():void				{					var i:int, j:int;										for( i=0; i<_diggingTiles1.length; ++i )					{						for( j=0; j<_diggingTiles1[i].length; ++j )						{							_diggingTiles1[i][j].contentClip.visible = true;							_diggingTiles1[i][j].editable = true;						}					}										for( i=0; i<_diggingTiles2.length; ++i )					{						for( j=0; j<_diggingTiles2[i].length; ++j )						{							_diggingTiles2[i][j].contentClip.visible = true;							_diggingTiles2[i][j].editable = true;						}					}										for( i=0; i<_diggingTiles3.length; ++i )					{						for( j=0; j<_diggingTiles3[i].length; ++j )						{							_diggingTiles3[i][j].contentClip.visible = true;							_diggingTiles3[i][j].editable = true;						}					}				}							/** hideDiggingTiles			  *	---------------------------------------------------------------------------- */				public function hideDiggingTiles():void				{					var i:int, j:int;										for( i=0; i<_diggingTiles1.length; ++i )					{						for( j=0; j<_diggingTiles1[i].length; ++j )						{							_diggingTiles1[i][j].contentClip.visible = false;						}					}										for( i=0; i<_diggingTiles2.length; ++i )					{						for( j=0; j<_diggingTiles2[i].length; ++j )						{							_diggingTiles2[i][j].contentClip.visible = false;						}					}										for( i=0; i<_diggingTiles3.length; ++i )					{						for( j=0; j<_diggingTiles3[i].length; ++j )						{							_diggingTiles3[i][j].contentClip.visible = false;						}					}				}								public function showVillageTiles():void				{					var i:int, j:int, k:int;					for( i=0; i<_villageTiles.length; ++i )					{						for( j=0; j<_villageTiles[i].length; ++j )						{							_villageTiles[i][j].contentClip.visible = true;						}					}										//villageObjectsDisplayLayer_mc.visible = true;										for( i=0; i<_villageDisplayObjects.length; ++i )					{						for( j=0; j<_villageDisplayObjects[i].length; ++j )						{							for( k=0; k<_villageDisplayObjects[i][j].length; ++k )							{								_villageDisplayObjects[i][j][k].contentClip.visible = true;							}						}					}				}								public function hideVillageTiles():void				{					var i:int, j:int, k:int;					for( i=0; i<_villageTiles.length; ++i )					{						for( j=0; j<_villageTiles[i].length; ++j )						{							_villageTiles[i][j].contentClip.visible = false;						}					}										//villageObjectsDisplayLayer_mc.visible = false;										for( i=0; i<_villageDisplayObjects.length; ++i )					{						for( j=0; j<_villageDisplayObjects[i].length; ++j )						{							for( k=0; k<_villageDisplayObjects[i][j].length; ++k )							{								_villageDisplayObjects[i][j][k].contentClip.visible = false;							}						}					}				}							/** resetGameTiles			  *	---------------------------------------------------------------------------- */				public function resetGameTiles():void				{					var i:int, j:int;										for( i=0; i<_tiles.length; ++i )					{						for( j=0; j<_tiles[i].length; ++j )						{							_tiles[i][j].editable = true;							_tiles[i][j].tileType = GameboardTile.TILE_TYPE_PLACEABLE;						}					}										for( i=0; i<_gateTiles.length; ++i )					{						_gateTiles[i].tileType = GameboardTile.TILE_TYPE_GATE;					}				}								override public function resetDiggingTiles():void				{					var i:int, j:int;										for( i=0; i<_diggingTiles1.length; ++i )					{						for( j=0; j<_diggingTiles1[i].length; ++j )						{							_diggingTiles1[i][j].editable = true;							_diggingTiles1[i][j].tileType = GameboardTile.TILE_TYPE_PLACEABLE;						}					}					for( i=0; i<_diggingTiles2.length; ++i )					{						for( j=0; j<_diggingTiles2[i].length; ++j )						{							_diggingTiles2[i][j].editable = true;							_diggingTiles2[i][j].tileType = GameboardTile.TILE_TYPE_PLACEABLE;						}					}					for( i=0; i<_diggingTiles3.length; ++i )					{						for( j=0; j<_diggingTiles3[i].length; ++j )						{							_diggingTiles3[i][j].editable = true;							_diggingTiles3[i][j].tileType = GameboardTile.TILE_TYPE_PLACEABLE;						}					}				}							/** handleGameboardTileClicked			  *	---------------------------------------------------------------------------- */				protected function handleGameboardTileClicked( event:CustomEvent ):void				{					//trace( "handleGameboardTileClicked();" );										//trace( event.currentTarget );										dispatchEvent( new CustomEvent("onTileClicked", {tile:event.currentTarget}) );				}								protected function handleDiggingTileArea1Clicked( event:CustomEvent ):void				{					dispatchEvent( new CustomEvent("onDiggingTileArea1Clicked", {tile:event.currentTarget}) );				}								protected function handleDiggingTileArea2Clicked( event:CustomEvent ):void				{					dispatchEvent( new CustomEvent("onDiggingTileArea2Clicked", {tile:event.currentTarget}) );				}								protected function handleDiggingTileArea3Clicked( event:CustomEvent ):void				{					dispatchEvent( new CustomEvent("onDiggingTileArea3Clicked", {tile:event.currentTarget}) );				}		}	}	