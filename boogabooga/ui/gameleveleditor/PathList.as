/** PathList  *	---------------------------------------------------------------------------- *  *	@desc:  *		A list for the paths  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.gameleveleditor	{		import flash.display.MovieClip;		import flash.display.StageDisplayState;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.events.MouseEvent;		import flash.text.TextField;		import flash.utils.getDefinitionByName;		import flash.utils.getQualifiedClassName;				import com.greensock.TweenLite;		import com.greensock.easing.Sine;		import com.avatarlabs.utils.ArrayUtil;		import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.VectorUtil;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.forms.InputText;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import com.avatarlabs.utils.userinterface.DynamicUIScroller;		import com.avatarlabs.utils.userinterface.DynamicUISlider;						public class PathList extends EventDispatcher		{			protected var _contentClip:MovieClip;						protected var _pathClips:Array;			protected var _deleteAllPathsClip:DynamicUIButton;			protected var _scrollerClip:DynamicUIScroller;						/**	Stage Instances **/			public var deleteAllPaths_mc:MovieClip;			public var scroller_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function PathList()				{					//init();				}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										deleteAllPaths_mc = _contentClip.deleteAllPaths_mc;					scroller_mc = _contentClip.scroller_mc;										_deleteAllPathsClip = new DynamicUIButton();					_deleteAllPathsClip.dynamicClip = deleteAllPaths_mc;					_deleteAllPathsClip.dynamicInit();										var sliderClip:DynamicUISlider = new DynamicUISlider();						sliderClip.dynamicClip = scroller_mc.slider_mc;						sliderClip.dynamicInit();						sliderClip.setProperty( "y" );						sliderClip.setHandle( scroller_mc.slider_mc.handle_mc );						sliderClip.setBounds( scroller_mc.slider_mc.bound_mc );										_scrollerClip = new DynamicUIScroller();					_scrollerClip.dynamicClip = scroller_mc;					_scrollerClip.dynamicInit();					_scrollerClip.setProperty( "y" );					_scrollerClip.setSlider( sliderClip );					_scrollerClip.setContent( scroller_mc.content_mc );					_scrollerClip.setMask( scroller_mc.mask_mc );									}				public function get contentClip():MovieClip { return _contentClip; }							/** init			  *	---------------------------------------------------------------------------- */				public function init():void				{					_pathClips = new Array();										_deleteAllPathsClip.addEventListener( "onClick", handleDeleteAllPathsClicked, false, 0, true );					_deleteAllPathsClip.dynamicClip.mouseChildren = false;										_contentClip.mouseChildren = true;				}								public function reset():void				{					for( var i:int=0; i<_pathClips.length; ++i )					{						_pathClips[i].delete_mc.removeEventListener( MouseEvent.CLICK, handleDeletePathClicked );						_pathClips[i].removeEventListener( MouseEvent.ROLL_OVER, handlePathRolledOver );						_pathClips[i].removeEventListener( MouseEvent.ROLL_OUT, handlePathRolledOut );						_scrollerClip.dynamicClip.content_mc.removeChildAt(_pathClips[i]);					}										ArrayUtil.removeAll( _pathClips );										_scrollerClip.toggleSlider();				}							/** addPath			  *	---------------------------------------------------------------------------- */				public function addPath( id:int ):void				{					ConsoleBroadcaster.broadcast( "PathList", "addPath("+id+");" );										var pathClip:MovieClip = new (getDefinitionByName("PathScroller.content.item") );						pathClip.name_txt.text = "PATH "+(id+1);						pathClip.name_txt.mouseEnabled = false;						pathClip.delete_mc.buttonMode = true;						pathClip.delete_mc.mouseChildren = false;						pathClip.delete_mc.addEventListener( MouseEvent.CLICK, handleDeletePathClicked, false, 0, true );						pathClip.mouseChildren = true;						pathClip.addEventListener( MouseEvent.ROLL_OVER, handlePathRolledOver, false, 0, true );						pathClip.addEventListener( MouseEvent.ROLL_OUT, handlePathRolledOut, false, 0, true );						pathClip.id = id;						pathClip.y = (pathClip.height) * _pathClips.length;										if( _pathClips.length % 2 == 0 )					{						pathClip.backgroundEven_mc.visible = true;						pathClip.backgroundOdd_mc.visible = false;					}					else					{						pathClip.backgroundEven_mc.visible = false;						pathClip.backgroundOdd_mc.visible = true;					}										_scrollerClip.dynamicClip.content_mc.addChild( pathClip );										_pathClips.push( pathClip );										_scrollerClip.toggleSlider();				}								protected function updateBackgroundColor():void				{					for( var i:int=0; i<_pathClips.length; ++i )					{						if( i % 2 == 0 )						{							_pathClips[i].backgroundEven_mc.visible = true;							_pathClips[i].backgroundOdd_mc.visible = false;						}						else						{							_pathClips[i].backgroundEven_mc.visible = false;							_pathClips[i].backgroundOdd_mc.visible = true;						}					}				}							/** handleDeletePathClicked			  *	---------------------------------------------------------------------------- */				protected function handleDeletePathClicked( event:Event ):void				{					ConsoleBroadcaster.broadcast( "PathList", "handleDeletePathClicked("+event.currentTarget.parent.id+");" );										var id:int = event.currentTarget.parent.id;										var pathClip:MovieClip = ArrayUtil.remove( _pathClips, event.currentTarget.parent, "id" );					if( pathClip != null )					{						pathClip.delete_mc.removeEventListener( MouseEvent.CLICK, handleDeletePathClicked );						pathClip.removeEventListener( MouseEvent.ROLL_OVER, handlePathRolledOver );						pathClip.removeEventListener( MouseEvent.ROLL_OUT, handlePathRolledOut );						_scrollerClip.dynamicClip.content_mc.removeChild( pathClip );					}										for( var i:int=0; i<_pathClips.length; ++i )					{						_pathClips[i].id = i;						_pathClips[i].y = (_pathClips[i].height + 5) * i;						_pathClips[i].name_txt.text = "PATH "+(i+1);					}										dispatchEvent( new CustomEvent("onDeletePath", {id:event.currentTarget.parent.id}) );				}							/** handlePathRolledOver			  *	---------------------------------------------------------------------------- */				protected function handlePathRolledOver( event:MouseEvent ):void				{					dispatchEvent( new CustomEvent("onRollOverPath", {id:event.currentTarget.id}) );				}							/** handlePathRolledOut			  *	---------------------------------------------------------------------------- */				protected function handlePathRolledOut( event:MouseEvent ):void				{					dispatchEvent( new CustomEvent("onRollOutPath", {id:event.currentTarget.id}) );				}							/** handleDeleteAllPathsClicked			  *	---------------------------------------------------------------------------- *			  *	Delete all paths in the board, removes path buttons from the list.			  *	---------------------------------------------------------------------------- */				protected function handleDeleteAllPathsClicked( event:Event ):void				{					//while( MovieClip(scroller_mc).content_mc.numChildren > 0 )					for( var i:int=0; i<_pathClips.length; ++i )					{						_pathClips[i].delete_mc.removeEventListener( MouseEvent.CLICK, handleDeletePathClicked );						_pathClips[i].removeEventListener( MouseEvent.ROLL_OVER, handlePathRolledOver );						_pathClips[i].removeEventListener( MouseEvent.ROLL_OUT, handlePathRolledOut );						_scrollerClip.dynamicClip.content_mc.removeChildAt(_pathClips[i]);					}										ArrayUtil.removeAll( _pathClips );										//trace( "_pathClips: "+_pathClips );										dispatchEvent( new CustomEvent("onDeleteAllPaths") );				}						}	}