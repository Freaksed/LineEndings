/** WaveClip  *	---------------------------------------------------------------------------- *  *	@desc:  *		This is the gameboard editor class used in the editor file.  *		This class provides a way for users to modify game levels.  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.gameleveleditor	{		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.geom.Point;		import flash.geom.Rectangle;		import flash.system.System;		import flash.text.TextField;		import flash.utils.getDefinitionByName;		import flash.utils.getQualifiedClassName;				import com.greensock.TweenLite;		import com.greensock.easing.Sine;		import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.VectorUtil;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.forms.InputText;		import com.avatarlabs.utils.forms.DynamicInputText;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import com.avatarlabs.utils.userinterface.DynamicUIDropDownScroller;				import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.gamelevel.*;						public class WaveClip extends EventDispatcher		{			protected var _contentClip:MovieClip;			protected var _wave:Wave;						protected var _enemy1QtyClip:DynamicInputText;			protected var _enemy1DropDownClip:DynamicUIDropDownScroller;			protected var _enemy2QtyClip:DynamicInputText;			protected var _enemy2DropDownClip:DynamicUIDropDownScroller;			protected var _enemy3QtyClip:DynamicInputText;			protected var _enemy3DropDownClip:DynamicUIDropDownScroller;			protected var _deleteClip:DynamicUIButton;									/**	Stage Instances **/			public var name_txt:TextField;			public var enemy1Qty_mc:MovieClip;			public var enemy1DropDown_mc:MovieClip;			public var enemy2Qty_mc:MovieClip;			public var enemy2DropDown_mc:MovieClip;			public var enemy3Qty_mc:MovieClip;			public var enemy3DropDown_mc:MovieClip;			public var bounds_mc:MovieClip;			public var delete_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function WaveClip()				{					//init();				}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										name_txt = _contentClip.name_txt;					enemy1Qty_mc = _contentClip.enemy1Qty_mc;					enemy1Qty_mc.input_txt.restrict = "0-9.";					enemy1DropDown_mc = _contentClip.enemy1DropDown_mc;					enemy2Qty_mc = _contentClip.enemy2Qty_mc;					enemy2Qty_mc.input_txt.restrict = "0-9.";					enemy2DropDown_mc = _contentClip.enemy2DropDown_mc;					enemy3Qty_mc = _contentClip.enemy3Qty_mc;					enemy3Qty_mc.input_txt.restrict = "0-9.";					enemy3DropDown_mc = _contentClip.enemy3DropDown_mc;					bounds_mc = _contentClip.bounds_mc;					delete_mc = _contentClip.delete_mc;										_enemy1QtyClip = new DynamicInputText();					_enemy1QtyClip.dynamicClip = enemy1Qty_mc;					_enemy1QtyClip.dynamicInit();					_enemy1QtyClip.setTextField( enemy1Qty_mc.input_txt );										_enemy2QtyClip = new DynamicInputText();					_enemy2QtyClip.dynamicClip = enemy2Qty_mc;					_enemy2QtyClip.dynamicInit();					_enemy2QtyClip.setTextField( enemy2Qty_mc.input_txt );										_enemy3QtyClip = new DynamicInputText();					_enemy3QtyClip.dynamicClip = enemy3Qty_mc;					_enemy3QtyClip.dynamicInit();					_enemy3QtyClip.setTextField( enemy3Qty_mc.input_txt );										_enemy1DropDownClip = new DynamicUIDropDownScroller();					_enemy1DropDownClip.dynamicClip = enemy1DropDown_mc;					_enemy1DropDownClip.dropDownContentItemLinkage = "DropDownContent.item";					_enemy1DropDownClip.dynamicInit();										_enemy2DropDownClip = new DynamicUIDropDownScroller();					_enemy2DropDownClip.dynamicClip = enemy2DropDown_mc;					_enemy2DropDownClip.dropDownContentItemLinkage = "DropDownContent.item";					_enemy2DropDownClip.dynamicInit();										_enemy3DropDownClip = new DynamicUIDropDownScroller();					_enemy3DropDownClip.dynamicClip = enemy3DropDown_mc;					_enemy3DropDownClip.dropDownContentItemLinkage = "DropDownContent.item";					_enemy3DropDownClip.dynamicInit();										_deleteClip = new DynamicUIButton();					_deleteClip.dynamicClip = delete_mc;					_deleteClip.dynamicInit();				}				public function get contentClip():MovieClip { return _contentClip; }								public function set x( n:Number ):void { _contentClip.x = n; }				public function get x():Number { return _contentClip.x; }				public function set y( n:Number ):void { _contentClip.y = n; }				public function get y():Number { return _contentClip.y; }								public function set wave( w:Wave ):void				{					_wave = w;										for( var i:int=0; i<_wave.enemiesLength; ++i )					{						if( i==0 )						{							if( _wave.enemies[i].enemy != null )								_enemy1DropDownClip.selectedItemId = _wave.enemies[i].enemy;														if( _enemy1QtyClip.isInit )								_enemy1QtyClip.dynamicClip.input_txt.text = _wave.enemies[i].quantity;							else								_enemy1QtyClip.addEventListener( "onInit", handleEnemy1QtyInit, false, 0, true );						}						else if( i == 1 )						{							if( _wave.enemies[i].enemy != null )								_enemy2DropDownClip.selectedItemId = _wave.enemies[i].enemy;														if( _enemy2QtyClip.isInit )								_enemy2QtyClip.dynamicClip.input_txt.text = _wave.enemies[i].quantity;							else								_enemy2QtyClip.addEventListener( "onInit", handleEnemy2QtyInit, false, 0, true );						}						else if( i == 2 )						{							if( _wave.enemies[i].enemy != null )								_enemy3DropDownClip.selectedItemId = _wave.enemies[i].enemy;														if( _enemy3QtyClip.isInit )								_enemy3QtyClip.dynamicClip.input_txt.text = _wave.enemies[i].quantity;							else								_enemy3QtyClip.addEventListener( "onInit", handleEnemy3QtyInit, false, 0, true );						}					}				}				public function get wave():Wave				{					var tempWave:Wave = new Wave();					var isWaveValid:Boolean = false;										if( _enemy1QtyClip.isValid() )					{						tempWave.addEnemies( {enemy:Number(_enemy1DropDownClip.selectedItemId), quantity:Number(_enemy1QtyClip.getValue())} );						isWaveValid = true;					}					else					{						//tempWave.addEnemies( {enemy:null, quantity:"0"} );						isWaveValid = true;					}										if( _enemy2QtyClip.isValid() )					{						tempWave.addEnemies( {enemy:Number(_enemy2DropDownClip.selectedItemId), quantity:Number(_enemy2QtyClip.getValue())} );						isWaveValid = true;					}										if( _enemy3QtyClip.isValid() )					{						tempWave.addEnemies( {enemy:Number(_enemy3DropDownClip.selectedItemId), quantity:Number(_enemy3QtyClip.getValue())} );						isWaveValid = true;					}										if( isWaveValid )					{						_wave = tempWave;												return tempWave;					}										return null;				}							/** set name			  *	---------------------------------------------------------------------------- */				public function set waveName( s:String ):void				{					name_txt.text = s;				}							/** init			  *	---------------------------------------------------------------------------- */				public function init():void				{					var dp:Array = new Array();					var enemies:Vector.<Enemy> = GameLevelDataIndex.getInstance().listedEnemies;					var label:String = "";										for( var i:int=0; i<enemies.length; ++i )					{						dp.push( {label:StringsIndex.getInstance().getString(String(enemies[i].name)), id:enemies[i].id} );					}										dp.sort( sortEnemiesByName );										//_enemy1DropDownClip.addEventListener( "onContentItemClick", handleEnemy1DropDownItemClicked, false, 0, true );					_enemy1DropDownClip.dp = dp;					//_enemy2DropDownClip.addEventListener( "onContentItemClick", handleEnemy2DropDownItemClicked, false, 0, true );					_enemy2DropDownClip.dp = dp;					//_enemy3DropDownClip.addEventListener( "onContentItemClick", handleEnemy3DropDownItemClicked, false, 0, true );					_enemy3DropDownClip.dp = dp;										_deleteClip.addEventListener( "onClick", handleDeleteClicked, false, 0, true );				}				/*				protected function handleEnemy1DropDownItemClicked( event:CustomEvent ):void				{									}				*/			/** handleEnemy1QtyInit			  *	---------------------------------------------------------------------------- *			  *	If InputText isn't initialized yet when we try to set the value, we have to			  *	wait for it to be initialized first.			  *	---------------------------------------------------------------------------- */				protected function handleEnemy1QtyInit( event:Event ):void				{					_enemy1QtyClip.dynamicClip.input_txt.text = _wave.enemies[0].quantity;				}							/** handleEnemy2QtyInit			  *	---------------------------------------------------------------------------- *			  *	If InputText isn't initialized yet when we try to set the value, we have to			  *	wait for it to be initialized first.			  *	---------------------------------------------------------------------------- */				protected function handleEnemy2QtyInit( event:Event ):void				{					_enemy2QtyClip.dynamicClip.input_txt.text = _wave.enemies[1].quantity;				}							/** handleEnemy3QtyInit			  *	---------------------------------------------------------------------------- *			  *	If InputText isn't initialized yet when we try to set the value, we have to			  *	wait for it to be initialized first.			  *	---------------------------------------------------------------------------- */				protected function handleEnemy3QtyInit( event:Event ):void				{					_enemy3QtyClip.dynamicClip.input_txt.text = _wave.enemies[2].quantity;				}							/** handleDeleteClicked			  *	---------------------------------------------------------------------------- */				protected function handleDeleteClicked( event:Event ):void				{					dispatchEvent( new CustomEvent("onDelete") );				}							/** closeAllDropDowns			  *	---------------------------------------------------------------------------- */				public function closeAllDropDowns():void				{					_enemy1DropDownClip.close();					_enemy2DropDownClip.close();					_enemy3DropDownClip.close();				}								protected function sortEnemiesByName( a:Object, b:Object ):int				{					if( a.label < b.label )						return -1;					else if( a.label > b.label )						return 1;										return 0;				}		}	}