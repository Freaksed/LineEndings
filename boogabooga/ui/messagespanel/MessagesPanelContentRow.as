/** MessagesPanelContentRow  *	---------------------------------------------------------------------------- *  *	@desc:  *		Icon for the content scroller.  *	@authors:  *		Christian Widodo [christian@avatarlabs.com]  *		Brett Cook [brett@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.messagespanel	{		import flash.display.Bitmap;		import flash.display.BitmapData;		import flash.display.MovieClip;		import flash.display.Loader;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.events.IOErrorEvent;		import flash.events.MouseEvent;		import flash.events.ProgressEvent;		import flash.events.TimerEvent;		import flash.filters.GlowFilter;		import flash.geom.Point;		import flash.geom.Rectangle;		import flash.net.URLRequest;		import flash.system.ApplicationDomain;		import flash.system.LoaderContext;		import flash.text.TextField;				import com.greensock.TweenLite;		import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.cache.HashTable;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.loader.CustomLoader;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.userinterface.DynamicUIButton;				import com.boogabooga.data.SettingsIndex;		import com.boogabooga.data.SoundsIndex;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.gamelevel.God;		import com.boogabooga.data.gamelevel.Weapon;		import com.boogabooga.events.BoogaEvent;		import com.boogabooga.data.maingame.Gift;						public class MessagesPanelContentRow extends EventDispatcher		{			protected var _contentClip:MovieClip;			protected var _item:AbstractGameObject;			protected var _id:int;			protected var _minHeight:Number;			protected var _currentHeight:Number;						protected var _cacheIconId:String;			protected var _iconURL:String;						public var gift:Object;			public var messageId:uint;			public var messageType:uint;			public var friendId:int			public var friendFbId:String;			//public var asset_url:String;			public var itemId:int;						protected var _deleteClip:DynamicUIButton;			protected var _acceptClip:DynamicUIButton;						/**	Stage Instances **/			public var delete_mc:MovieClip;			public var accept_mc:MovieClip;			public var date_txt:TextField;			public var message_txt:TextField;			public var description_txt:TextField;			public var picture_mc:MovieClip;			public var icon_mc:MovieClip;			public var lightBg_mc:MovieClip;			public var darkBg_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function MessagesPanelContentRow()				{					//init();				}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										delete_mc = _contentClip.delete_mc;					accept_mc = _contentClip.accept_mc;					date_txt = _contentClip.date_txt;					message_txt = _contentClip.message_txt;					description_txt = _contentClip.description_txt;					picture_mc = _contentClip.picture_mc;					icon_mc = _contentClip.icon_mc;					lightBg_mc = _contentClip.lightBg_mc;					darkBg_mc = _contentClip.darkBg_mc;										_minHeight = lightBg_mc.height;					_currentHeight = _minHeight;										_deleteClip = new DynamicUIButton();					_deleteClip.dynamicClip = delete_mc;					_deleteClip.dynamicInit();										_acceptClip = new DynamicUIButton();					_acceptClip.dynamicClip = accept_mc;					_acceptClip.dynamicInit();				}				public function get contentClip():MovieClip { return _contentClip; }							/** set/get item			  *	---------------------------------------------------------------------------- */				public function set item( a:AbstractGameObject ):void				{					_item = a;				}				public function get item():AbstractGameObject				{					return _item;				}								public function get currentHeight():Number { return _currentHeight; }								public function setIcon( url:String, cacheId:String ):void				{					_cacheIconId = cacheId;					_iconURL = url;										if( BitmapDataManager.getInstance().getBitmapData(_cacheIconId) == null )					{						BitmapDataManager.getInstance().addEventListener( Event.COMPLETE, handleLoadIconComplete );						BitmapDataManager.getInstance().loadBitmapToCache( SettingsIndex.getInstance().contentURL+_iconURL, _cacheIconId );					}					else					{						addIconImage();					}				}								protected function handleLoadIconComplete( event:CustomEvent ):void				{					if( event.customParameters.cacheId == _cacheIconId )					{						BitmapDataManager.getInstance().removeEventListener( Event.COMPLETE, handleLoadIconComplete );												addIconImage();					}				}								protected function addIconImage():void				{					var bitmap:Bitmap = new Bitmap(BitmapDataManager.getInstance().getBitmapData(_cacheIconId).bitmapData);						bitmap.smoothing = true;						bitmap.width = bitmap.height = 38;										icon_mc.addChild( bitmap );				}								public function setProfilePic( url:String ):void				{					//var profilePicLoader:CustomLoader = new CustomLoader();						//profilePicLoader.addEventListener( "onLoadComplete", handleProfilePicLoadComplete, false, 0, true );						//profilePicLoader.loadAsset( picture_mc, url );										var loader:Loader = new Loader();						loader.contentLoaderInfo.addEventListener( Event.COMPLETE, handleProfilePicLoadComplete, false, 0, true );						loader.load( new URLRequest(url), new LoaderContext(true, ApplicationDomain.currentDomain) );									}								protected function handleProfilePicLoadComplete( event:Event ):void				{					event.currentTarget.removeEventListener( Event.COMPLETE, handleProfilePicLoadComplete );										var bitmapData:BitmapData = new BitmapData( event.currentTarget.content.width, event.currentTarget.content.height, true, 0x00FFFFFF );						bitmapData.draw( event.currentTarget.content );										var bitmap:Bitmap = new Bitmap(bitmapData);						bitmap.smoothing = true;						bitmap.width = bitmap.height = 45;										picture_mc.addChild( bitmap );										//picture_mc.width = picture_mc.height = 45;				}								public function setLightBg():void				{					lightBg_mc.visible = true;					darkBg_mc.visible = false;				}								public function setDarkBg():void				{					lightBg_mc.visible = false;					darkBg_mc.visible = true;				}								public function adjustHeight():void				{					if( description_txt.y + description_txt.height > _minHeight )					{						_currentHeight = int(description_txt.y + description_txt.height + 2) + 1;						lightBg_mc.height = _currentHeight;						darkBg_mc.height = _currentHeight;											}				}							/** init			  *	---------------------------------------------------------------------------- */				public function init():void				{					//trace( "init();" );										_contentClip.mouseChildren = true;					_contentClip.mouseEnabled = true;										//name_mc.textField = MovieClip(name_mc).label_txt;					//name_mc.fontName = "Rockwell";					//name_mc.embedFonts = true;										_deleteClip.addEventListener( "onClick", handleDeleteClicked, false, 0, true );					_deleteClip.addEventListener( "onSetFocus", handleDeleteRolledOver, false, 0, true );					_deleteClip.addEventListener( "onKillFocus", handleDeleteRolledOut, false, 0, true );					_acceptClip.addEventListener( "onClick", handleAcceptClicked, false, 0, true );					_acceptClip.addEventListener( "onSetFocus", handleAcceptRolledOver, false, 0, true );					_acceptClip.addEventListener( "onKillFocus", handleAcceptRolledOut, false, 0, true );										date_txt.visible = false;										//setDate();					//trace( "fontName set" );				}								public function setId( id:int ):void				{					_id = id;				}								public function getId():int				{					return _id;				}								public function setDate():void				{					var my_date:Date = new Date();					//var formattedDate:String = sprintf("%02i.%02i.%s",my_date.month+1,my_date.date,my_date.fullYear.toString().substr(2,2));					var formattedDate:String = (my_date.month+1)+"."+my_date.date+"."+my_date.fullYear.toString().substr(2,2);					//TextFormatting.formatTextWithFontName( date_txt, formattedDate, "SF Fedora", false, "left" );					TextFormatting.formatTextWithFontName( date_txt, formattedDate, "Lithos Pro Black", false, "left" );				}							/** handleDeleteClicked			  *	---------------------------------------------------------------------------- */				protected function handleDeleteClicked( event:Event ):void				{					//trace("handleDeleteClicked");					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										dispatchEvent( new CustomEvent("onRowDeleted", {row:event.currentTarget as MessagesPanelContentRow}) );				}							/** handleDeleteRolledOver			  *	---------------------------------------------------------------------------- */				protected function handleDeleteRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );										EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_deleteClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("MESSAGES_IGNORE")} );				}							/** handleDeleteRolledOut			  *	---------------------------------------------------------------------------- */				protected function handleDeleteRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleAcceptClicked			  *	---------------------------------------------------------------------------- */				protected function handleAcceptClicked( event:Event ):void				{					//trace("handleDeleteClicked");					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										dispatchEvent( new CustomEvent("onRowAccepted", {row:event.currentTarget as MessagesPanelContentRow}) );										_acceptClip.setDeactive(false);					_deleteClip.setDeactive(false);										TweenLite.to( accept_mc, .5, {alpha:0} );					TweenLite.to( delete_mc, .5, {alpha:0} );				}							/** handleAcceptRolledOver			  *	---------------------------------------------------------------------------- */				protected function handleAcceptRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );										EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_acceptClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("MESSAGES_APPROVE")} );				}							/** handleAcceptRolledOut			  *	---------------------------------------------------------------------------- */				protected function handleAcceptRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}								public function updateHeight():void				{					var newHeight:int = int(description_txt.y + description_txt.height + 2) + 1;						newHeight = newHeight < _minHeight ? _minHeight : newHeight;										_currentHeight = newHeight;										TweenLite.to( darkBg_mc, .25, {height:newHeight} );					TweenLite.to( lightBg_mc, .25, {height:newHeight} );				}		}			}