/** BackgroundViewerMain  *	---------------------------------------------------------------------------- *  *	@desc: Base Main Class that should take care of all the preloading of  *		the necessary files for the game.  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui	{		import flash.display.MovieClip;		import flash.display.Stage;		import flash.display.StageAlign;		import flash.display.StageScaleMode;		import flash.events.Event;		import flash.events.IOErrorEvent;		import flash.events.FullScreenEvent;		import flash.events.ProgressEvent;		import flash.external.ExternalInterface;		import flash.net.URLLoader;		import flash.net.URLRequest;		import flash.net.URLRequestMethod;		import flash.net.URLVariables;		import flash.text.Font;		import flash.utils.getDefinitionByName;				import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.AssetLoaderEvent;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.loader.CustomLoader;				import com.boogabooga.data.SettingsIndex;		import flash.system.LoaderContext;		import flash.system.ApplicationDomain;				public class BackgroundViewerMain extends MovieClip		{			protected var _backgroundClip:MovieClip;			protected var _linkageId:String;			protected var _assetURL:String;						/**	Stage Instances **/			public var container_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function BackgroundViewerMain()				{					this.loaderInfo.addEventListener( ProgressEvent.PROGRESS, handlePreloadProgress, false, 0, true );					this.loaderInfo.addEventListener( Event.COMPLETE, handlePreloadComplete, false, 0, true );										this.addEventListener( Event.ENTER_FRAME, handleEnterFrame, false, 0, true );										ConsoleBroadcaster.enabled = true;										stop();									}							/** handlePreloadProgress			  *	---------------------------------------------------------------------------- */				protected function handlePreloadProgress( event:ProgressEvent ):void				{					//ConsoleBroadcaster.broadcast( "BackgroundViewerMain", "handlePreloadProgress():" );				}							/** handlePreloadComplete			  *	---------------------------------------------------------------------------- */				protected function handlePreloadComplete( event:Event ):void				{					ConsoleBroadcaster.broadcast( "BackgroundViewerMain", "handlePreloadComplete();" );										event.currentTarget.removeEventListener( ProgressEvent.PROGRESS, handlePreloadProgress );					event.currentTarget.removeEventListener( Event.COMPLETE, handlePreloadComplete );					removeEventListener( Event.ENTER_FRAME, handleEnterFrame );										loadBackgroundAsset();				}								protected function handleEnterFrame( event:Event ):void				{					if( this.loaderInfo.bytesLoaded == this.loaderInfo.bytesTotal )					{						ConsoleBroadcaster.broadcast( "BackgroundViewerMain", "handleEnterFrame done" );												event.currentTarget.removeEventListener( ProgressEvent.PROGRESS, handlePreloadProgress );						event.currentTarget.removeEventListener( Event.COMPLETE, handlePreloadComplete );						removeEventListener( Event.ENTER_FRAME, handleEnterFrame );												loadBackgroundAsset();					}				}								protected function loadBackgroundAsset():void				{					_linkageId = "SkullIslandLevel_bg";					_assetURL = "files/assets/environments/SkullIslandLevel_bg.swf";										if( this.loaderInfo.parameters.linkageId && this.loaderInfo.parameters.assetURL )					{						_linkageId = this.loaderInfo.parameters.linkageId;						_assetURL = this.loaderInfo.parameters.assetURL;					}										if( this.loaderInfo.parameters.baseURL != undefined )						SettingsIndex.getInstance().baseURL = this.loaderInfo.parameters.baseURL;										ConsoleBroadcaster.broadcast( "BackgroundViewerMain", "linkageId: "+_linkageId );					ConsoleBroadcaster.broadcast( "BackgroundViewerMain", "assetURL: "+_assetURL );										var customLoader:CustomLoader = new CustomLoader();						customLoader.loaderContext = new LoaderContext( false, ApplicationDomain.currentDomain );						customLoader.addEventListener( "onLoadComplete", handleLoadBackgroundAssetComplete, false, 0, true );						customLoader.loadAsset( container_mc, SettingsIndex.getInstance().baseURL+_assetURL );				}								protected function handleLoadBackgroundAssetComplete( event:CustomEvent ):void				{					ConsoleBroadcaster.broadcast( "BackgroundViewerMain", "handleLoadBackgroundAssetComplete();" );										_backgroundClip = new (getDefinitionByName(_linkageId) as Class)();					container_mc.addChild( _backgroundClip );					_backgroundClip.scaleX = _backgroundClip.scaleY = .75;					_backgroundClip.play();				}		}			}