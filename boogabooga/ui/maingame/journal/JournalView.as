/** JournalView  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame.journal	{		import flash.display.MovieClip;		import flash.events.Event;		import flash.geom.Point;				import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.navigation.UINavigation;		import com.avatarlabs.utils.navigation.UINavigationButton;		import com.avatarlabs.utils.userinterface.UIButton;				import com.boogabooga.controller.maingame.GiftDataController;		import com.boogabooga.controller.maingame.MainGameController;		import com.boogabooga.controller.maingame.UserDataController;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.maingame.User;		import com.boogabooga.events.BoogaEvent;		import com.boogabooga.ui.maingame.AbstractContentView;		import com.boogabooga.ui.maingame.IContentView;		import com.boogabooga.ui.maingame.LoadingAssetView;		import com.boogabooga.ui.maingame.TableBackgroundView;				public class JournalView extends AbstractContentView implements IContentView		{			protected var _loadingAssetViewClip:LoadingAssetView;			protected var _currentPage:int;			protected var _friends:User;			protected var _journalUser:User;			protected var _tableBackgroundViewClip:TableBackgroundView;						protected var _frontCoverClip:JournalViewFrontCover;			protected var _detailInfoClip:JournalViewDetailInfo;			protected var _usersClip:JournalViewUsers;			protected var _requestGiftViewClip:JournalRequestGiftView;						/**	Stage Instances **/			//public var book_mc:MovieClip;			//public var pageFlipLToR_mc:MovieClip;			//public var pageFlipRToL_mc:MovieClip;			//public var nextPage_mc:UIButton;			//public var prevPage_mc:UIButton;			public var frontCover_mc:MovieClip;			public var detailInfo_mc:MovieClip;			public var users_mc:MovieClip;			public var overallDarkness_mc:MovieClip;			public var requestGiftView_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function JournalView()				{									}								public function set loadingAssetViewClip( clip:LoadingAssetView ):void { _loadingAssetViewClip = clip; }								override public function set contentClip( m:MovieClip ):void				{					super.contentClip = m;										frontCover_mc = _contentClip.frontCover_mc;					detailInfo_mc = _contentClip.detailInfo_mc;					users_mc = _contentClip.users_mc;					overallDarkness_mc = _contentClip.overallDarkness_mc;					requestGiftView_mc = _contentClip.requestGiftView_mc;										_frontCoverClip = new JournalViewFrontCover();					_frontCoverClip.contentClip = frontCover_mc;					_frontCoverClip.init();										_detailInfoClip = new JournalViewDetailInfo();					_detailInfoClip.contentClip = detailInfo_mc;					_detailInfoClip.init();										_usersClip = new JournalViewUsers();					_usersClip.contentClip = users_mc;					_usersClip.init();										_requestGiftViewClip = new JournalRequestGiftView();					_requestGiftViewClip.contentClip = requestGiftView_mc;					_requestGiftViewClip.init();				}								public function set tableBackgroundViewClip( t:TableBackgroundView ):void { _tableBackgroundViewClip = t; }							/** init			  *	---------------------------------------------------------------------------- */				override public function init():void				{					super.init();										//pageFlipLToR_mc = book_mc.pageFlipLToR_mc;					//pageFlipLToR_mc.stop();					//pageFlipRToL_mc = book_mc.pageFlipRToL_mc;					//pageFlipRToL_mc.stop();										//nextPage_mc.addEventListener( "onClick", nextPage );					//nextPage_mc.visible = false;					//prevPage_mc.addEventListener( "onClick", prevPage );					//prevPage_mc.visible = false;										_currentPage = 0;										_frontCoverClip.addEventListener( BoogaEvent.ON_JOURNAL_OPEN, handleJournalOpened );					_frontCoverClip.contentClip.visible = false;										_detailInfoClip.addEventListener( BoogaEvent.ON_JOURNAL_SHOW_COVER, handleJournalClosed );					_detailInfoClip.addEventListener( BoogaEvent.ON_JOURNAL_SHOW_SECOND_TUTORIAL, handleJournalShowSecondTutorial );					_detailInfoClip.contentClip.visible = false;					_detailInfoClip.onGiftRequestSent.add( handleGiftRequestSent );					_detailInfoClip.onGiftRequestCancel.add( handleGiftRequestCancel );					_detailInfoClip.onRequestInProgress.add( handleRequestInProgress );										_usersClip.addEventListener( BoogaEvent.ON_JOURNAL_SELECT_SELF, handleJournalSelectSelf );					_usersClip.addEventListener( BoogaEvent.ON_JOURNAL_SELECT_FRIEND, handleJournalSelectFriend );					_usersClip.contentClip.visible = false;										_requestGiftViewClip.onExitClicked.add( handleExitClicked );					_requestGiftViewClip.contentClip.alpha = 1;					_requestGiftViewClip.hide();				}							/** show			  *	---------------------------------------------------------------------------- */				override public function show():void				{					_journalUser = MainGameController.getInstance().currentUser;										_requestGiftViewClip.hide();										_frontCoverClip.show( _journalUser );					_usersClip.setCurrentUser( MainGameController.getInstance().currentUser );										_loadingAssetViewClip.showLoadingProgress();										var userDataController:UserDataController = new UserDataController();						userDataController.addEventListener( "onComplete", handleGetFriendsComplete );						userDataController.addEventListener( "onError", handleGetFriendsError );						userDataController.getFriends( MainGameController.getInstance().currentUser.id );										super.show();										if( MainGameController.getInstance().currentUser.tutorialJournal )					{						var globalPosition:Point = _frontCoverClip.open_mc.parent.localToGlobal( new Point(_frontCoverClip.open_mc.x+35, _frontCoverClip.open_mc.y+30) );						EventNotificationCenter.getInstance().sendNotificationWithParameters( BoogaEvent.ON_TUTORIAL_SHOW, this, {targetX:globalPosition.x, targetY:globalPosition.y, text:StringsIndex.getInstance().getStringByName("TUTORIAL_JOURNAL_1")} );					}										_tableBackgroundViewClip.show();				}							/** hide			  *	---------------------------------------------------------------------------- */				override public function hide():void				{					super.hide();										_requestGiftViewClip.hide();										_frontCoverClip.hide();					_detailInfoClip.hide();					//_usersClip.hide();										_tableBackgroundViewClip.hide();				}								protected function handleExitClicked():void				{					_requestGiftViewClip.hide();				}								protected function handleJournalClosed( event:BoogaEvent ):void				{					_detailInfoClip.hide();					_frontCoverClip.show( _journalUser );				}							/** handleJournalOpened			  *	---------------------------------------------------------------------------- *			  *	Opens the journal and show the detail view.			  *	---------------------------------------------------------------------------- */				protected function handleJournalOpened( event:BoogaEvent ):void				{					_frontCoverClip.hide();										if( MainGameController.getInstance().currentUser.tutorialJournal )					{						EventNotificationCenter.getInstance().sendNotification( BoogaEvent.ON_TUTORIAL_HIDE, this );					}										_detailInfoClip.show( _journalUser );				}							/** handleJournalShowSecondTutorial			  *	---------------------------------------------------------------------------- *			  *	Shows the second step of the tutorial in journal.			  *	---------------------------------------------------------------------------- */				protected function handleJournalShowSecondTutorial( event:BoogaEvent ):void				{					if( MainGameController.getInstance().currentUser.tutorialJournal )					{						var globalPosition:Point = _usersClip.friend1_mc.parent.localToGlobal( new Point(_usersClip.friend1_mc.x, _usersClip.friend1_mc.y) );						EventNotificationCenter.getInstance().sendNotificationWithParameters( BoogaEvent.ON_TUTORIAL_SHOW, this, {targetX:globalPosition.x, targetY:globalPosition.y, text:StringsIndex.getInstance().getStringByName("TUTORIAL_JOURNAL_2")} );					}				}								protected function handleGiftRequestSent():void				{					_loadingAssetViewClip.hideLoadingProgress();					_requestGiftViewClip.show();				}								protected function handleGiftRequestCancel():void				{					_loadingAssetViewClip.hideLoadingProgress();				}								protected function handleRequestInProgress():void				{					_loadingAssetViewClip.showLoadingProgress();				}							/** handleJournalSelectSelf			  *	---------------------------------------------------------------------------- *			  *	Shows the journal of the current user.			  *	---------------------------------------------------------------------------- */				protected function handleJournalSelectSelf( event:BoogaEvent ):void				{					_journalUser = MainGameController.getInstance().currentUser;										_detailInfoClip.hide();					_frontCoverClip.show( _journalUser );				}							/** handleJournalSelectFriend			  *	---------------------------------------------------------------------------- *			  *	Shows the journal of the selected friend.			  *	---------------------------------------------------------------------------- */				protected function handleJournalSelectFriend( event:BoogaEvent ):void				{					_journalUser = event.customParameters.user;										//_detailInfoClip.hide();					//_frontCoverClip.show( _journalUser );										_loadingAssetViewClip.showLoadingProgress();										var userDataController:UserDataController = new UserDataController();						userDataController.addEventListener( "onComplete", handleGetFriendUserDataComplete );						userDataController.addEventListener( "onError", handleGetFriendUserDataError );						userDataController.getFriendUserData( event.customParameters.user.id );									}											/** handleGetFriendsComplete			  *	---------------------------------------------------------------------------- *			  *	This event is fired when get friends request completes. Shows the user and			  *	friends selector.			  *	---------------------------------------------------------------------------- */				protected function handleGetFriendsComplete( event:CustomEvent ):void				{					event.currentTarget.removeEventListener( "onComplete", handleGetFriendsComplete );					event.currentTarget.removeEventListener( "onError", handleGetFriendsError );										_loadingAssetViewClip.hideLoadingProgress();										_usersClip.friends = event.customParameters.friends;					_usersClip.show();				}							/** handleGetFriendsError			  *	---------------------------------------------------------------------------- *			  *	This event is fired when there is an error in getting friends data.			  *	Dispatches the error event to the game.			  *	---------------------------------------------------------------------------- */				protected function handleGetFriendsError( event:CustomEvent ):void				{					ConsoleBroadcaster.broadcast( "JournalView", "handleGetFriendsError();" );										event.currentTarget.removeEventListener( "onComplete", handleGetFriendsComplete );					event.currentTarget.removeEventListener( "onError", handleGetFriendsError );										//TODO;					//	Do something when there is an error in loading friends data				}								protected function handleGetFriendUserDataComplete( event:CustomEvent ):void				{					ConsoleBroadcaster.broadcast( "JournalView", "handleGetFriendUserDataComplete();" );										event.currentTarget.removeEventListener( "onComplete", handleGetFriendUserDataComplete );					event.currentTarget.removeEventListener( "onError", handleGetFriendUserDataError );										_journalUser = event.customParameters.user;										var giftDataController:GiftDataController = new GiftDataController();						giftDataController.addEventListener( "onComplete", handleGetRecentRequestedGiftsComplete );						giftDataController.addEventListener( "onError", handleGetRecentRequestedGiftsComplete );						giftDataController.getRecentRequestedGifts( MainGameController.getInstance().currentUser.id, event.customParameters.user.id );									}								protected function handleGetFriendUserDataError( event:CustomEvent ):void				{					ConsoleBroadcaster.broadcast( "JournalView", "handleGetFriendUserDataError();" );										event.currentTarget.removeEventListener( "onComplete", handleGetFriendUserDataComplete );					event.currentTarget.removeEventListener( "onError", handleGetFriendUserDataError );										//TODO;					//	Do something when there is an error in loading friends data				}								protected function handleGetRecentRequestedGiftsComplete( event:CustomEvent ):void				{					event.currentTarget.removeEventListener( "onComplete", handleGetRecentRequestedGiftsComplete );					event.currentTarget.removeEventListener( "onError", handleGetRecentRequestedGiftsComplete );										ConsoleBroadcaster.broadcast( "JournalView", "userId: "+event.customParameters.userId );										if( event.customParameters.result == "0" )					{						_journalUser.canRequestGiftFrom = true;						//TODO:						//	Do something if you can't request from a friend					}					else					{						_journalUser.canRequestGiftFrom = false;					}										ConsoleBroadcaster.broadcast( "JournalView", "user.canRequestGiftFrom: "+_journalUser.canRequestGiftFrom );										_loadingAssetViewClip.hideLoadingProgress();										_detailInfoClip.hide();					_frontCoverClip.show( _journalUser );									}						}	}