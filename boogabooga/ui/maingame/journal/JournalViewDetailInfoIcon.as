/** JournalViewDetailInfoIcon  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame.journal	{		import flash.display.Bitmap;		import flash.display.BitmapData;		import flash.display.Loader;		import flash.display.MovieClip;		import flash.events.Event;		import flash.geom.ColorTransform;		import flash.net.URLRequest;		import flash.system.ApplicationDomain;		import flash.system.LoaderContext;				import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.userinterface.DynamicUIButton;				import com.boogabooga.data.SettingsIndex;		import com.boogabooga.data.gamelevel.AbstractGameObject;				public class JournalViewDetailInfoIcon extends DynamicUIButton		{			protected var _item:AbstractGameObject;			protected var _locked:Boolean;						/**	Stage Instances **/			public var lock_mc:MovieClip;			public var image_mc:MovieClip;			public var background_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function JournalViewDetailInfoIcon()				{									}								public function get item():AbstractGameObject { return _item; }				public function get locked():Boolean { return _locked; }								override public function set dynamicClip( m:MovieClip ):void				{					super.dynamicClip = m;										lock_mc = _dynamicClip.lock_mc;					image_mc = _dynamicClip.image_mc;					background_mc = _dynamicClip.background_mc;					background_mc.mouseChildren = false;					background_mc.mouseEnabled = false;				}								override public function dynamicInit():void				{					super.dynamicInit();										lock_mc.visible = true;					_locked = true;				}							/** reset			  *	---------------------------------------------------------------------------- */				public function reset():void				{					while( image_mc.numChildren > 0 )						image_mc.removeChildAt(0);										_dynamicClip.gotoAndStop(1);										_item = null;				}							/** showLockView			  *	---------------------------------------------------------------------------- */				public function showLockView( item:AbstractGameObject ):void				{					ConsoleBroadcaster.broadcast( "JournalViewDetailInfoIcon", "showLockView();" );										//image_mc.alpha = .5;					//(redMultiplier=0, greenMultiplier=0, blueMultiplier=0, alphaMultiplier=1, redOffset=0, greenOffset=0, blueOffset=0, alphaOffset=0)					image_mc.transform.colorTransform = new ColorTransform( 0, 0, 0, 1, 0, 0, 0, 0 );					lock_mc.visible = true;					_locked = true;										reset();					setDeactive();										_item = item;										if( item != null )					{						if( BitmapDataManager.getInstance().getBitmapData(item.cacheIconId) == null )						{							var loader:Loader = new Loader();								loader.contentLoaderInfo.addEventListener( Event.COMPLETE, handleLoadImageComplete );								loader.load( new URLRequest(SettingsIndex.getInstance().contentURL+_item.iconURL), new LoaderContext(false, ApplicationDomain.currentDomain) );						}						else						{							addImage();						}					}				}							/** showItemView			  *	---------------------------------------------------------------------------- *			  *	Shows item view, and loads the icon image if it's not loaded yet.			  *	---------------------------------------------------------------------------- */				public function showItemView( item:AbstractGameObject ):void				{					ConsoleBroadcaster.broadcast( "JournalViewDetailInfoIcon", "showItemView("+item+");" );										//image_mc.alpha = 1;					image_mc.transform.colorTransform = new ColorTransform();					lock_mc.visible = false;					_locked = false;										reset();					setActive(true);										_item = item;										if( BitmapDataManager.getInstance().getBitmapData(item.cacheIconId) == null )					{						var loader:Loader = new Loader();							loader.contentLoaderInfo.addEventListener( Event.COMPLETE, handleLoadImageComplete );							loader.load( new URLRequest(SettingsIndex.getInstance().contentURL+_item.iconURL), new LoaderContext(false, ApplicationDomain.currentDomain) );													//trace( "loading "+_item.iconURL );					}					else					{						addImage();					}				}							/** addImage			  *	---------------------------------------------------------------------------- *			  *	Adds the image to the stage if it's been loaded.			  *	---------------------------------------------------------------------------- */				public function addImage():void				{					var iconBitmap:Bitmap = new Bitmap(BitmapDataManager.getInstance().getBitmapData(_item.cacheIconId).bitmapData);						iconBitmap.width = iconBitmap.height = 60;						iconBitmap.smoothing = true;						iconBitmap.x = iconBitmap.y = -30;										image_mc.addChild( iconBitmap );				}								protected function handleLoadImageComplete( event:Event ):void				{					//trace( "handleLoadImageComplete();" );										event.currentTarget.removeEventListener( Event.COMPLETE, handleLoadImageComplete );										var bitmapData:BitmapData = new BitmapData( event.currentTarget.content.width, event.currentTarget.content.height, true, 0x00FFFFFF );						bitmapData.draw( event.currentTarget.content );										BitmapDataManager.getInstance().addBitmapData( _item.cacheIconId, bitmapData );										addImage();				}		}	}