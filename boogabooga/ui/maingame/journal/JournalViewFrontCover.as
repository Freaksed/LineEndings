/** JournalViewFrontCover  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame.journal	{		import flash.display.Bitmap;		import flash.display.BitmapData;		import flash.display.Loader;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.net.URLRequest;		import flash.system.ApplicationDomain;		import flash.system.LoaderContext;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;				import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.userinterface.DynamicUIButton;				import com.boogabooga.controller.maingame.MainGameController;		import com.boogabooga.data.SoundsIndex;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.maingame.User;		import com.boogabooga.ui.maingame.AbstractContentView;		import com.boogabooga.ui.maingame.IContentView;		import com.boogabooga.events.BoogaEvent;				public class JournalViewFrontCover extends EventDispatcher		{			protected var _contentClip:MovieClip;			protected var _user:User;						protected var _openClip:DynamicUIButton;						/**	Stage Instances **/			public var open_mc:MovieClip;			public var image_mc:MovieClip;			public var name_txt:TextField;			public var iconBackground_mc:MovieClip;			//public var adventureScoreLabel_txt:TextField;			//public var levelValue_txt:TextField;			//public var levelBackground_mc:MovieClip;			public var adventureLevel_mc:MovieClip;			public var rareArtifactsValue_txt:TextField;			public var rareArtifactsLabel_txt:TextField;			//public var cryptologySymbolsValue_txt:TextField;			//public var cryptologySymbolsLabel_txt:TextField;			public var commonArtifactsValue_txt:TextField;			public var commonArtifactsLabel_txt:TextField;			public var tribalItemsValue_txt:TextField;			public var tribalItemsLabel_txt:TextField;			public var specialItemsValue_txt:TextField;			public var specialItemsLabel_txt:TextField;			public var villagesSavedValue_txt:TextField;			public var villagesSavedLabel_txt:TextField;			public var islandsSavedValue_txt:TextField;			public var islandsSavedLabel_txt:TextField;			public var enemiesValue_txt:TextField;			public var enemiesLabel_txt:TextField;			public var background_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function JournalViewFrontCover()				{									}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										open_mc = _contentClip.open_mc;					image_mc = _contentClip.image_mc;					name_txt = _contentClip.name_txt;					iconBackground_mc = _contentClip.iconBackground_mc;					iconBackground_mc.cacheAsBitmap = true;					//adventureScoreLabel_txt = _contentClip.adventureScoreLabel_txt;					//levelValue_txt = _contentClip.levelValue_txt;					//levelBackground_mc = _contentClip.levelBackground_mc;					adventureLevel_mc = _contentClip.adventureLevel_mc;					rareArtifactsValue_txt = _contentClip.rareArtifactsValue_txt;					rareArtifactsLabel_txt = _contentClip.rareArtifactsLabel_txt;					commonArtifactsValue_txt = _contentClip.commonArtifactsValue_txt;					commonArtifactsLabel_txt = _contentClip.commonArtifactsLabel_txt;					tribalItemsValue_txt = _contentClip.tribalItemsValue_txt;					tribalItemsLabel_txt = _contentClip.tribalItemsLabel_txt;					specialItemsValue_txt = _contentClip.specialItemsValue_txt;					specialItemsLabel_txt = _contentClip.specialItemsLabel_txt;					villagesSavedValue_txt = _contentClip.villagesSavedValue_txt;					villagesSavedLabel_txt = _contentClip.villagesSavedLabel_txt;					islandsSavedValue_txt = _contentClip.islandsSavedValue_txt;					islandsSavedLabel_txt = _contentClip.islandsSavedLabel_txt;					enemiesValue_txt = _contentClip.enemiesValue_txt;					enemiesLabel_txt = _contentClip.enemiesLabel_txt;					background_mc = _contentClip.background_mc;					background_mc.cacheAsBitmap = true;										_openClip = new DynamicUIButton();					_openClip.dynamicClip = open_mc;					_openClip.dynamicInit();				}				public function get contentClip():MovieClip { return _contentClip; }								public function init():void				{					//TextFormatting.formatTextWithFontName( adventureScoreLabel_txt, "Adventure Score", "SF Fedora", false, TextFieldAutoSize.CENTER );					//TextFormatting.formatTextWithFontName( rareArtifactsLabel_txt, "Rare Artifacts", "SF Fedora", false, TextFieldAutoSize.LEFT );					//TextFormatting.formatTextWithFontName( commonArtifactsLabel_txt, "Common Artifacts", "SF Fedora", false, TextFieldAutoSize.LEFT );					//TextFormatting.formatTextWithFontName( cryptologySymbolsLabel_txt, "Cryptology Symbols", "SF Fedora", false, TextFieldAutoSize.LEFT );					//TextFormatting.formatTextWithFontName( tribalItemsLabel_txt, "Tribal Items", "SF Fedora", false, TextFieldAutoSize.LEFT );					//TextFormatting.formatTextWithFontName( specialItemsLabel_txt, "Special Items", "SF Fedora", false, TextFieldAutoSize.LEFT );					//TextFormatting.formatTextWithFontName( villagesSavedLabel_txt, "Villages Secured", "SF Fedora", false, TextFieldAutoSize.LEFT );					//TextFormatting.formatTextWithFontName( islandsSavedLabel_txt, "Enemies", "SF Fedora", false, TextFieldAutoSize.LEFT );					//TextFormatting.formatTextWithFontName( adventureScoreLabel_txt, "Adventure Score", "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					TextFormatting.formatTextWithFontName( rareArtifactsLabel_txt, StringsIndex.getInstance().getStringByName("JOURNAL_RARE_ARTIFACTS"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( commonArtifactsLabel_txt, StringsIndex.getInstance().getStringByName("JOURNAL_COMMON_ARTIFACTS"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					//TextFormatting.formatTextWithFontName( cryptologySymbolsLabel_txt, "Cryptology Symbols", "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( tribalItemsLabel_txt, StringsIndex.getInstance().getStringByName("LEVEL_SETUP_TRIBAL_ITEMS"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( specialItemsLabel_txt, StringsIndex.getInstance().getStringByName("LEVEL_SETUP_SPECIAL_ITEMS"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( villagesSavedLabel_txt, StringsIndex.getInstance().getStringByName("JOURNAL_VILLAGES_SAVED"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( islandsSavedLabel_txt, StringsIndex.getInstance().getStringByName("JOURNAL_ISLANDS_SAVED"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( enemiesLabel_txt, StringsIndex.getInstance().getStringByName("JOURNAL_ENEMIES"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );										_openClip.addEventListener( "onClick", handleOpenClicked, false, 0, true );					_openClip.addEventListener( "onSetFocus", handleOpenRolledOver, false, 0, true );					_openClip.addEventListener( "onKillFocus", handleOpenRolledOut, false, 0, true );										EventNotificationCenter.getInstance().addSignalListener( BoogaEvent.ON_LANGUAGE_CHANGED, handleLanguageChanged, this );				}							/** show			  *	---------------------------------------------------------------------------- */				public function show( user:User ):void				{					reset();										_user = user;										//TextFormatting.formatTextWithFontName( name_txt, user.name, "SF Fedora", false, TextFieldAutoSize.CENTER );					//TextFormatting.formatTextWithFontName( levelValue_txt, String(user.adventureLevel), "SF Fedora", false, TextFieldAutoSize.CENTER );					//TextFormatting.formatTextWithFontName( rareArtifactsValue_txt, String(user.rareTreasuresCount), "SF Fedora", false, TextFieldAutoSize.RIGHT );					//TextFormatting.formatTextWithFontName( commonArtifactsValue_txt, String(user.commonTreasuresCount), "SF Fedora", false, TextFieldAutoSize.RIGHT );					//TextFormatting.formatTextWithFontName( cryptologySymbolsValue_txt, String(user.unlockedCryptologies.length), "SF Fedora", false, TextFieldAutoSize.RIGHT );					//TextFormatting.formatTextWithFontName( tribalItemsValue_txt, String(user.durableWeaponsCount), "SF Fedora", false, TextFieldAutoSize.RIGHT );					//TextFormatting.formatTextWithFontName( specialItemsValue_txt, String(user.consumableWeaponsCount), "SF Fedora", false, TextFieldAutoSize.RIGHT );					//TextFormatting.formatTextWithFontName( villagesSavedValue_txt, String(user.unlockedVillagesCount), "SF Fedora", false, TextFieldAutoSize.RIGHT );					//TextFormatting.formatTextWithFontName( islandsSavedValue_txt, String(user.unlockedEnemies.length), "SF Fedora", false, TextFieldAutoSize.RIGHT );					TextFormatting.formatTextWithFontName( name_txt, user.name, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					TextFormatting.formatTextWithFontName( adventureLevel_mc.score_mc.label_txt, String(user.adventureLevel), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					TextFormatting.formatTextWithFontName( rareArtifactsValue_txt, String(user.rareTreasuresCount), "Lithos Pro Black", false, TextFieldAutoSize.RIGHT );					TextFormatting.formatTextWithFontName( commonArtifactsValue_txt, String(user.commonTreasuresCount), "Lithos Pro Black", false, TextFieldAutoSize.RIGHT );					//TextFormatting.formatTextWithFontName( cryptologySymbolsValue_txt, String(user.unlockedCryptologies.length), "Lithos Pro Black", false, TextFieldAutoSize.RIGHT );					TextFormatting.formatTextWithFontName( tribalItemsValue_txt, String(user.durableWeaponsCount), "Lithos Pro Black", false, TextFieldAutoSize.RIGHT );					TextFormatting.formatTextWithFontName( specialItemsValue_txt, String(user.consumableWeaponsCount), "Lithos Pro Black", false, TextFieldAutoSize.RIGHT );					TextFormatting.formatTextWithFontName( villagesSavedValue_txt, String(user.unlockedVillagesCount-1), "Lithos Pro Black", false, TextFieldAutoSize.RIGHT );					TextFormatting.formatTextWithFontName( islandsSavedValue_txt, String(user.unlockedIslands.length-1), "Lithos Pro Black", false, TextFieldAutoSize.RIGHT );					TextFormatting.formatTextWithFontName( enemiesValue_txt, String(user.unlockedEnemies.length), "Lithos Pro Black", false, TextFieldAutoSize.RIGHT );										if( BitmapDataManager.getInstance().getBitmapData("UserFBProfilePic_"+user.id) ==  null )					{						//_user = user;												trace( "loading image "+_user.fbProfilePicURL );												var iconLoader:Loader = new Loader();							iconLoader.contentLoaderInfo.addEventListener( Event.COMPLETE, handleLoadIconComplete, false, 0, true );							iconLoader.load( new URLRequest(_user.fbProfilePicURL), new LoaderContext(true, ApplicationDomain.currentDomain) );					}					else					{						addUserImage();					}										_contentClip.visible = true;									}							/** hide			  *	---------------------------------------------------------------------------- */				public function hide():void				{					_contentClip.visible = false;				}								public function reset():void				{					_user = null;										while( image_mc.numChildren > 0 )						image_mc.removeChildAt(0);				}							/** handleLoadIconComplete			  *	---------------------------------------------------------------------------- */				protected function handleLoadIconComplete( event:Event ):void				{					ConsoleBroadcaster.broadcast( "JournalViewFrontCover", "handleLoadIconComplete();" );										event.currentTarget.removeEventListener( Event.COMPLETE, handleLoadIconComplete );										var bitmapData:BitmapData = new BitmapData( event.currentTarget.content.width, event.currentTarget.content.height, true, 0xFFFFFFFF );						bitmapData.draw( event.currentTarget.content );					/*					var bitmap:Bitmap = new Bitmap(bitmapData);						bitmap.x = 100;						bitmap.y = 100;					trace( bitmap.width );					trace( bitmap.height );					addChild( bitmap );					*/					BitmapDataManager.getInstance().addBitmapData( "UserFBProfilePic_"+_user.id, bitmapData );					//_user = null;										//trace( "bitmap data for user profile pic "+BitmapDataManager.getInstance().getBitmapData("UserFBProfilePic_"+_user.id) );										addUserImage();				}							/** addUserImage			  *	---------------------------------------------------------------------------- */				function addUserImage():void				{					var bitmap:Bitmap = new Bitmap(BitmapDataManager.getInstance().getBitmapData("UserFBProfilePic_"+_user.id).bitmapData);						bitmap.smoothing = true;					var ratio:Number;										if( bitmap.width > bitmap.height )					{						ratio = 56 / bitmap.width;						bitmap.width = 56;						bitmap.height = bitmap.height * ratio;					}					else					{						ratio = 56 / bitmap.height;						bitmap.width = bitmap.width * ratio;						bitmap.height = 56;					}										bitmap.x = -bitmap.width/2;					bitmap.y = -bitmap.height/2;										image_mc.addChild( bitmap );				}							/** handleOpenClicked			  *	---------------------------------------------------------------------------- */				protected function handleOpenClicked( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										dispatchEvent( new BoogaEvent(BoogaEvent.ON_JOURNAL_OPEN) );				}							/** handleOpenRolledOver			  *	---------------------------------------------------------------------------- */				protected function handleOpenRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );				}							/** handleOpenRolledOut			  *	---------------------------------------------------------------------------- */				protected function handleOpenRolledOut( event:Event ):void				{									}							/** handleLanguageChanged			  *	---------------------------------------------------------------------------- *			  *	When a language is changed, update the text accordingly.			  *	---------------------------------------------------------------------------- */				protected function handleLanguageChanged( customParameters:Object ):void				{					TextFormatting.formatTextWithFontName( rareArtifactsLabel_txt, StringsIndex.getInstance().getStringByName("JOURNAL_RARE_ARTIFACTS"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( commonArtifactsLabel_txt, StringsIndex.getInstance().getStringByName("JOURNAL_COMMON_ARTIFACTS"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( tribalItemsLabel_txt, StringsIndex.getInstance().getStringByName("LEVEL_SETUP_TRIBAL_ITEMS"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( specialItemsLabel_txt, StringsIndex.getInstance().getStringByName("LEVEL_SETUP_SPECIAL_ITEMS"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( villagesSavedLabel_txt, StringsIndex.getInstance().getStringByName("JOURNAL_VILLAGES_SAVED"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( islandsSavedLabel_txt, StringsIndex.getInstance().getStringByName("JOURNAL_ISLANDS_SAVED"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					TextFormatting.formatTextWithFontName( enemiesLabel_txt, StringsIndex.getInstance().getStringByName("JOURNAL_ENEMIES"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );				}						}	}