/** JournalViewUserIcon  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame.journal	{		import flash.display.Bitmap;		import flash.display.BitmapData;		import flash.display.Loader;		import flash.display.MovieClip;		import flash.events.Event;		import flash.net.URLRequest;		import flash.system.ApplicationDomain;		import flash.system.LoaderContext;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;				import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import com.avatarlabs.utils.text.TextFormatting;				import com.boogabooga.ui.maingame.AbstractContentView;		import com.boogabooga.ui.maingame.IContentView;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.maingame.User;				public class JournalViewUserIcon extends DynamicUIButton		{			protected var _user:User;			protected var _invite:Boolean;						/**	Stage Instances **/			public var levelValue_txt:TextField;			public var crest_mc:MovieClip;			public var image_mc:MovieClip;			public var name_txt:TextField;			public var iconBackground_mc:MovieClip;			public var invite_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function JournalViewUserIcon()				{									}								public function get user():User { return _user; }				public function get invite():Boolean { return _invite; }								override public function set dynamicClip( m:MovieClip ):void				{					super.dynamicClip = m;										levelValue_txt = _dynamicClip.levelValue_txt;					levelValue_txt.mouseEnabled = false;					crest_mc = _dynamicClip.crest_mc;					crest_mc.cacheAsBitmap = true;					image_mc = _dynamicClip.image_mc;					iconBackground_mc = _dynamicClip.iconBackground_mc;					iconBackground_mc.cacheAsBitmap = true;					name_txt = _dynamicClip.name_txt;					name_txt.mouseEnabled = false;					invite_mc = _dynamicClip.invite_mc;					invite_mc.mouseEnabled = false;					invite_mc.mouseChildren = false;					invite_mc.gotoAndStop(1);				}								override public function dynamicInit():void				{					super.dynamicInit();										_invite = false;										TextFormatting.formatTextWithFontName( invite_mc.label_mc.label_txt, "INVITE", "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					//TextFormatting.formatTextWithFontName( invite_mc.label_mc.label_txt, StringsIndex.getInstance().getStringByName("JOURNAL_INVITE"), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );				}								public function reset():void				{					while( image_mc.numChildren > 0 )						image_mc.removeChildAt(0);				}							/** showUser			  *	---------------------------------------------------------------------------- *			  *	Shows the image, name and value of a user. It will load the user's icon			  *	if it's not loaded yet.			  *	---------------------------------------------------------------------------- */				public function showUser( user:User ):void				{					_user = user;										_invite = false;					invite_mc.visible = false;										TextFormatting.formatTextWithFontName( name_txt, _user.firstName, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					//TextFormatting.formatTextWithFontName( levelValue_txt, String(_user.level), "SF Fedora", false, TextFieldAutoSize.CENTER );					TextFormatting.formatTextWithFontName( levelValue_txt, String(_user.adventureLevel), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );										if( BitmapDataManager.getInstance().getBitmapData("UserFBProfilePic_"+_user.fbId)== null )					{						/*						var iconLoader:Loader = new Loader();							iconLoader.contentLoaderInfo.addEventListener( Event.COMPLETE, handleLoadIconComplete, false, 0, true );							iconLoader.load( new URLRequest(user.fbProfilePicURL), new LoaderContext(true, ApplicationDomain.currentDomain) );						*/						BitmapDataManager.getInstance().addEventListener( Event.COMPLETE, handleLoadIconComplete );						BitmapDataManager.getInstance().loadBitmapToCache( _user.fbProfilePicURL, "UserFBProfilePic_"+_user.fbId );					}					else					{						addUserImage();					}										levelValue_txt.visible = true;					crest_mc.visible = true;					image_mc.visible = true;					name_txt.visible = true;				}							/** showInvite			  *	---------------------------------------------------------------------------- *			  *	Shows the invite button instead of a user.			  *	---------------------------------------------------------------------------- */				public function showInvite( user:User=null ):void				{					_user = user;					_invite = true;										invite_mc.visible = true;										levelValue_txt.visible = false;					crest_mc.visible = false;					image_mc.visible = false;					name_txt.visible = false;										if( _user != null )					{						ConsoleBroadcaster.broadcast( "JournalViewUserIcon", 'showing user '+_user.fbId );						TextFormatting.formatTextWithFontName( name_txt, _user.firstName, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );												if( BitmapDataManager.getInstance().getBitmapData("UserFBProfilePic_"+_user.fbId)== null )						{							BitmapDataManager.getInstance().addEventListener( Event.COMPLETE, handleLoadIconComplete );							BitmapDataManager.getInstance().loadBitmapToCache( _user.fbProfilePicURL, "UserFBProfilePic_"+_user.fbId );						}						else						{							addUserImage();						}												name_txt.visible = true;						image_mc.visible = true;					}				}							/** handleLoadIconComplete			  *	---------------------------------------------------------------------------- *			  *	Finishes loading an icon.			  *	---------------------------------------------------------------------------- */				protected function handleLoadIconComplete( event:CustomEvent ):void				{					/*					event.currentTarget.removeEventListener( Event.COMPLETE, handleLoadIconComplete );										var bitmapData:BitmapData = new BitmapData( event.currentTarget.content.width, event.currentTarget.content.height );						bitmapData.draw( event.currentTarget.content );										BitmapDataManager.getInstance().addBitmapData( "UserFBProfilePic_"+_user.fbId, bitmapData );					//_user = null;										addUserImage();					*/										if( event.customParameters.cacheId == "UserFBProfilePic_"+_user.fbId )					{						BitmapDataManager.getInstance().removeEventListener( Event.COMPLETE, handleLoadIconComplete );												addUserImage();					}				}							/** addUserImage			  *	---------------------------------------------------------------------------- *			  *	Adds the user image when it's available			  *	---------------------------------------------------------------------------- */				protected function addUserImage():void				{					var bitmap:Bitmap = new Bitmap( BitmapDataManager.getInstance().getBitmapData("UserFBProfilePic_"+_user.fbId).bitmapData );						bitmap.smoothing = true;					//var ratio:Number = 50 / bitmap.height;										//bitmap.width = bitmap.width * ratio;					//bitmap.height = 50;										bitmap.width = bitmap.height = 50;					bitmap.x = bitmap.y = -25;										image_mc.addChild( bitmap );				}		}	}