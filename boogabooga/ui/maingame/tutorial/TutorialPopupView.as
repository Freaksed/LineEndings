/** TutorialPopupView  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame.tutorial	{		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.geom.Point;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;		import flash.utils.Timer;				import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.navigation.NavigationController;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import com.avatarlabs.utils.userinterface.DynamicUIScroller;		import com.avatarlabs.utils.userinterface.DynamicUISlider;		import com.avatarlabs.utils.text.TextFormatting;				import com.boogabooga.events.BoogaEvent;		import flash.events.TimerEvent;		import com.avatarlabs.utils.userinterface.DynamicUIArrowedSlider;		import flash.text.TextFormat;				public class TutorialPopupView extends EventDispatcher		{			//protected var _sliderClip:DynamicUISlider;			protected var _contentClip:MovieClip;			protected var _topLeftPosition:Point;			protected var _bottomLeftPosition:Point;			protected var _topRightPosition:Point;			protected var _bottomRightPosition:Point;						protected var _textStartingPosition:Point;			protected var _currentArrow:MovieClip;			protected var _currentTextClip:DynamicUIScroller;			protected var _currentText:String;			protected var _currentTextIndex:int;			protected var _animationTimer:Timer;						protected var _textScroller:DynamicUIScroller;			protected var _textSlider:DynamicUIArrowedSlider;			protected var _text2Scroller:DynamicUIScroller;			protected var _text2Slider:DynamicUIArrowedSlider;			protected var _maxTextHeight:Number;			protected var _originalTextFormat:TextFormat;						public static const TUTORIAL_VIEW_TOP_LEFT:int = 0;			public static const TUTORIAL_VIEW_BOTTOM_LEFT:int = 1;			public static const TUTORIAL_VIEW_TOP_RIGHT:int = 2;			public static const TUTORIAL_VIEW_BOTTOM_RIGHT:int = 3;						/**	Stage Instances **/			public var text_mc:MovieClip;			public var text2_mc:MovieClip;			public var arrows_mc:MovieClip;			//public var background_mc:MovieClip;			//public var villager_mc:MovieClip;			//public var slider_mc:MovieClip;			//public var mask_mc:MovieClip;			//public var content_mc:MovieClip;			public var topLeft_mc:MovieClip;			public var bottomLeft_mc:MovieClip;			public var topRight_mc:MovieClip;			public var bottomRight_mc:MovieClip;			public var blocker1_mc:MovieClip;			public var blocker2_mc:MovieClip;			public var blocker3_mc:MovieClip;			public var blocker4_mc:MovieClip;			public var blocker5_mc:MovieClip;			public var blocker6_mc:MovieClip;			public var blockerMask_mc:MovieClip;			public var blocker_mc:MovieClip;			public var introAnimationMask1_mc:MovieClip;			public var introAnimationMask2_mc:MovieClip;			public var introAnimationMask3_mc:MovieClip;			public var introAnimationMask4_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function TutorialPopupView()				{					//init();				}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;					_contentClip.mouseEnabled = false;										text_mc = _contentClip.text_mc;					text_mc.visible = false;					text2_mc = _contentClip.text2_mc;					text2_mc.visible = false;					//background_mc = text_mc.background_mc;					//villager_mc = text_mc.villager_mc;					//slider_mc = text_mc.slider_mc;					//mask_mc = text_mc.mask_mc;					//content_mc = text_mc.content_mc;					arrows_mc = _contentClip.arrows_mc;					arrows_mc.mouseChildren = false;					arrows_mc.mouseEnabled = false;					topLeft_mc = arrows_mc.topLeft_mc;					topLeft_mc.mouseChildren = false;					topLeft_mc.mouseEnabled = false;					//trace( "topLeft_mc: "+topLeft_mc );					topLeft_mc.visible = false;					topLeft_mc.stop();					bottomLeft_mc = arrows_mc.bottomLeft_mc;					bottomLeft_mc.mouseChildren = false;					bottomLeft_mc.mouseEnabled = false;					//trace( "bottomLeft_mc: "+bottomLeft_mc );					bottomLeft_mc.visible = false;					bottomLeft_mc.stop();					topRight_mc = arrows_mc.topRight_mc;					topRight_mc.mouseChildren = false;					topRight_mc.mouseEnabled = false;					//trace( "topRight_mc: "+topRight_mc );					topRight_mc.visible = false;					topRight_mc.stop();					bottomRight_mc = arrows_mc.bottomRight_mc;					bottomRight_mc.mouseChildren = false;					bottomRight_mc.mouseEnabled = false;					//trace( "bottomRight_mc: "+bottomRight_mc );					bottomRight_mc.visible = false;					bottomRight_mc.stop();										blocker1_mc = _contentClip.blocker1_mc;					//blocker1_mc.mouseEnabled = false;					blocker1_mc.cacheAsBitmap = true;					blocker2_mc = _contentClip.blocker2_mc;					//blocker2_mc.mouseEnabled = false;					blocker2_mc.cacheAsBitmap = true;					blocker3_mc = _contentClip.blocker3_mc;					//blocker3_mc.mouseEnabled = false;					blocker3_mc.cacheAsBitmap = true;					blocker4_mc = _contentClip.blocker4_mc;					//blocker4_mc.mouseEnabled = false;					blocker4_mc.cacheAsBitmap = true;					blocker5_mc = _contentClip.blocker5_mc;					blocker5_mc.cacheAsBitmap = true;					blocker6_mc = _contentClip.blocker6_mc;					blocker6_mc.cacheAsBitmap = true;										blocker_mc = _contentClip.blocker_mc;					blocker_mc.mouseChildren = false;					blocker_mc.mouseEnabled = false;					//blocker_mc.cacheAsBitmap = true;					//blocker_mc.visible = false;					//blockerMask_mc = _contentClip.blockerMask_mc;					//blockerMask_mc.cacheAsBitmap = true;					//blockerMask_mc.mouseChildren = false;					//blockerMask_mc.mouseEnabled = false;					//blockerMask_mc.visible = false;					//blocker_mc.mask = blockerMask_mc;										introAnimationMask1_mc = _contentClip.introAnimationMask1_mc;					introAnimationMask1_mc.visible = false;					introAnimationMask2_mc = _contentClip.introAnimationMask2_mc;					introAnimationMask2_mc.visible = false;					introAnimationMask3_mc = _contentClip.introAnimationMask3_mc;					introAnimationMask3_mc.visible = false;					introAnimationMask4_mc = _contentClip.introAnimationMask4_mc;					introAnimationMask4_mc.visible = false;										_maxTextHeight = text_mc.content_mc.label_txt.height;					_originalTextFormat = UtilFunctions.clone( text_mc.content_mc.label_txt.getTextFormat() ) as TextFormat;										_textSlider = new DynamicUIArrowedSlider();					_textSlider.dynamicClip = text_mc.slider_mc;					_textSlider.dynamicInit();					_textSlider.setProperty( "y" );					_textSlider.setHandle( text_mc.slider_mc.handle_mc );					_textSlider.setBounds( text_mc.slider_mc.bound_mc );										_textScroller = new DynamicUIScroller();					_textScroller.dynamicClip = text_mc;					_textScroller.dynamicInit();					_textScroller.setSlider( _textSlider );					_textScroller.setProperty("y");					_textScroller.setContent( text_mc.content_mc );					_textScroller.setMask( text_mc.mask_mc );					_textScroller.toggleSlider();										_text2Slider = new DynamicUIArrowedSlider();					_text2Slider.dynamicClip = text2_mc.slider_mc;					_text2Slider.dynamicInit();					_text2Slider.setProperty( "y" );					_text2Slider.setHandle( text2_mc.slider_mc.handle_mc );					_text2Slider.setBounds( text2_mc.slider_mc.bound_mc );										_text2Scroller = new DynamicUIScroller();					_text2Scroller.dynamicClip = text2_mc;					_text2Scroller.dynamicInit();					_text2Scroller.setProperty( "y" );					_text2Scroller.setSlider( _text2Slider );					_text2Scroller.setContent( text2_mc.content_mc );					_text2Scroller.setMask( text2_mc.mask_mc );					_text2Scroller.toggleSlider();										//setProperty("y");					//setContent( content_mc );					//setMask( mask_mc );					//setSlider( _slider );				}				public function get contentClip():MovieClip { return _contentClip; }							/** init			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function init():void				{					_topLeftPosition = new Point( 180, 210 );					_bottomLeftPosition = new Point( 180, -210 );					_topRightPosition = new Point( -180, 210 );					_bottomRightPosition = new Point( -180, -210 );										_textStartingPosition = new Point( text_mc.content_mc );										EventNotificationCenter.getInstance().addEventListener( BoogaEvent.ON_TUTORIAL_SHOW, handleTutorialShow, false, 0, true );					EventNotificationCenter.getInstance().addEventListener( BoogaEvent.ON_TUTORIAL_HIDE, handleTutorialHide, false, 0, true );				}							/** show			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function show( startTextAnimation:Boolean ):void				{					_contentClip.visible = true;										if( startTextAnimation )						startAnimationTimer();				}							/** hide			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function hide():void				{					_contentClip.visible = false;										if( _currentArrow != null )					{						_currentArrow.stop();					}										text_mc.content_mc.label_txt.text = ' ';					text2_mc.content_mc.label_txt.text = ' ';										//text_mc.content_mc.label_txt.setTextFormat( _originalTextFormat );					//text2_mc.content_mc.label_txt.setTextFormat( _originalTextFormat );				}											/** calculatePosition			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function calculatePosition( targetX:Number, targetY:Number, type:int ):void				{					if( type == TUTORIAL_VIEW_TOP_LEFT )					{						topLeft_mc.visible = true;						bottomLeft_mc.visible = false;						topRight_mc.visible = false;						bottomRight_mc.visible = false;												_currentArrow = topLeft_mc;												_currentTextClip.dynamicClip.x = _topLeftPosition.x;						_currentTextClip.dynamicClip.y = _topLeftPosition.y;												//arrows_mc.x = _topLeftPosition.x;						//arrows_mc.y = _topLeftPosition.y;											}					else if( type == TUTORIAL_VIEW_BOTTOM_LEFT )					{						topLeft_mc.visible = false;						bottomLeft_mc.visible = true;						topRight_mc.visible = false;						bottomRight_mc.visible = false;												_currentArrow = bottomLeft_mc;												_currentTextClip.dynamicClip.x = _bottomLeftPosition.x;						_currentTextClip.dynamicClip.y = _bottomLeftPosition.y;												//arrows_mc.x = _bottomLeftPosition.x;						//arrows_mc.y = _bottomLeftPosition.y;											}					else if( type == TUTORIAL_VIEW_TOP_RIGHT )					{						topLeft_mc.visible = false;						bottomLeft_mc.visible = false;						topRight_mc.visible = true;						bottomRight_mc.visible = false;												_currentArrow = topRight_mc;												_currentTextClip.dynamicClip.x = _topRightPosition.x;						_currentTextClip.dynamicClip.y = _topRightPosition.y;												//arrows_mc.x = _topRightPosition.x;						//arrows_mc.y = _topRightPosition.y;											}					else if( type == TUTORIAL_VIEW_BOTTOM_RIGHT )					{						topLeft_mc.visible = false;						bottomLeft_mc.visible = false;						topRight_mc.visible = false;						bottomRight_mc.visible = true;												_currentArrow = bottomRight_mc;												_currentTextClip.dynamicClip.x = _bottomRightPosition.x;						_currentTextClip.dynamicClip.y = _bottomRightPosition.y;												//arrows_mc.x = _bottomRightPosition.x;						//arrows_mc.y = _bottomRightPosition.y;											}										_contentClip.x = int(targetX);					_contentClip.y = int(targetY);										_currentArrow.gotoAndPlay(1);				}							/** handleTutorialShow			  *	---------------------------------------------------------------------------- *			  *	Shows the tutorial popup.			  *	---------------------------------------------------------------------------- */				protected function handleTutorialShow( event:CustomEvent ):void				{					if( event.customParameters.hideVillager )					{						//trace( "no villager" );						text_mc.visible = false;						text2_mc.visible = true;						_currentTextClip = _text2Scroller;					}					else					{						//trace( "with villager" );						text_mc.visible = true;						text2_mc.visible = false;						_currentTextClip = _textScroller;					}										//introAnimationMask1_mc.cacheAsBitmap = false;					//_contentClip.cacheAsBitmap = false;															if( event.customParameters.targetX <= 360 && event.customParameters.targetY <= 310 )					{						//top left area						calculatePosition( event.customParameters.targetX, event.customParameters.targetY, TUTORIAL_VIEW_TOP_LEFT );					}					else if( event.customParameters.targetX <= 360 && event.customParameters.targetY >= 310 )					{						//bottom left area						calculatePosition( event.customParameters.targetX, event.customParameters.targetY, TUTORIAL_VIEW_BOTTOM_LEFT );					}					else if( event.customParameters.targetX >= 360 && event.customParameters.targetY <= 310 )					{						//top right area						calculatePosition( event.customParameters.targetX, event.customParameters.targetY, TUTORIAL_VIEW_TOP_RIGHT );					}					else					{						//bottom right area						calculatePosition( event.customParameters.targetX, event.customParameters.targetY, TUTORIAL_VIEW_BOTTOM_RIGHT );					}										if( event.customParameters.introTutorial )					{						//introAnimationMask1_mc.cacheAsBitmap = true;						//_contentClip.cacheAsBitmap = true;						introAnimationMask1_mc.x = -_contentClip.x;						introAnimationMask1_mc.y = -_contentClip.y;						introAnimationMask2_mc.x = -_contentClip.x;						introAnimationMask2_mc.y = -_contentClip.y;						introAnimationMask3_mc.x = -_contentClip.x;						introAnimationMask3_mc.y = -_contentClip.y;						introAnimationMask4_mc.x = -_contentClip.x;						introAnimationMask4_mc.y = -_contentClip.y;																		introAnimationMask1_mc.cacheAsBitmap = true;						blocker1_mc.cacheAsBitmap = true;						blocker1_mc.mask = introAnimationMask1_mc;						introAnimationMask2_mc.cacheAsBitmap = true;						blocker2_mc.cacheAsBitmap = true;						blocker2_mc.mask = introAnimationMask2_mc;						introAnimationMask3_mc.cacheAsBitmap = true;						blocker3_mc.cacheAsBitmap = true;						blocker3_mc.mask = introAnimationMask3_mc;						introAnimationMask4_mc.cacheAsBitmap = true;						blocker4_mc.cacheAsBitmap = true;						blocker4_mc.mask = introAnimationMask4_mc;					}					else					{						blocker1_mc.mask = null;						blocker2_mc.mask = null;						blocker3_mc.mask = null;						blocker4_mc.mask = null;					}										if( event.customParameters.transparent )					{						blocker1_mc.alpha = 0;						blocker2_mc.alpha = 0;						blocker3_mc.alpha = 0;						blocker4_mc.alpha = 0;						blocker5_mc.alpha = 0;						blocker6_mc.alpha = 0;						blocker_mc.alpha = 0;					}					else					{												blocker1_mc.alpha = 0.6;						blocker2_mc.alpha = 0.6;						blocker3_mc.alpha = 0.6;						blocker4_mc.alpha = 0.6;						blocker5_mc.alpha = 0.6;						blocker6_mc.alpha = 0.6;						blocker_mc.alpha = 0.6;					}										if( event.customParameters.showText != false )					{						_currentText = event.customParameters.text;												_currentTextClip.dynamicClip.content_mc.label_txt.setTextFormat( _originalTextFormat );												TextFormatting.formatTextWithFontName( _currentTextClip.dynamicClip.content_mc.label_txt, _currentText, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );						var tf:TextFormat = _currentTextClip.dynamicClip.content_mc.label_txt.getTextFormat();												//trace( "_currentTextClip.dynamicClip.content_mc.label_txt.height: "+_currentTextClip.dynamicClip.content_mc.label_txt.height );						//trace( "_maxTextHeight: "+_maxTextHeight );												if( _currentTextClip.dynamicClip.content_mc.label_txt.height < _maxTextHeight )						{							while( _currentTextClip.dynamicClip.content_mc.label_txt.height < _maxTextHeight )							{								tf.size += 1;								_currentTextClip.dynamicClip.content_mc.label_txt.setTextFormat(tf);							}														_currentTextClip.dynamicClip.content_mc.label_txt.text = ' ';							tf.size = Number(tf.size) - 1;							_currentTextClip.dynamicClip.content_mc.label_txt.setTextFormat(tf);														//trace( "font size: "+_currentTextClip.dynamicClip.content_mc.label_txt.getTextFormat().size );						}												//trace( "font size: "+_currentTextClip.dynamicClip.content_mc.label_txt.getTextFormat().size );												_currentTextClip.dynamicClip.visible = true;						show(true);					}					else					{						_currentTextClip.dynamicClip.visible = false;						show(false);					}									}							/** handleTutorialHide			  *	---------------------------------------------------------------------------- *			  *	Hides the tutorial popup.			  *	---------------------------------------------------------------------------- */				protected function handleTutorialHide( event:CustomEvent ):void				{					hide();				}							/** startAnimationTimer			  *	---------------------------------------------------------------------------- *			  *	Starts the text animation timer.			  *	---------------------------------------------------------------------------- */				protected function startAnimationTimer():void				{					if( _animationTimer == null )					{						_animationTimer = new Timer( 50 );						_animationTimer.addEventListener( TimerEvent.TIMER, handleAnimationTimerFired, false, 0, true );					}										//trace( "font size before animation timer starts: "+_currentTextClip.dynamicClip.content_mc.label_txt.getTextFormat().size );										_currentTextIndex = 0;					_animationTimer.start();				}							/** handleAnimationTimerFired			  *	---------------------------------------------------------------------------- *			  *	This event is fired when the current text animation timer fired.			  *	---------------------------------------------------------------------------- */				protected function handleAnimationTimerFired( event:TimerEvent ):void				{					if( _currentTextIndex < _currentText.length )					{						_currentTextIndex += 2;												//trace( "font size: "+_currentTextClip.dynamicClip.content_mc.label_txt.getTextFormat().size );												TextFormatting.formatTextWithFontName( _currentTextClip.dynamicClip.content_mc.label_txt, _currentText.substr( 0, _currentTextIndex ), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );												if( _currentTextClip.dynamicClip.content_mc.height < _maxTextHeight )							_currentTextClip.dynamicClip.content_mc.y = _currentTextClip.dynamicClip.mask_mc.y + (_maxTextHeight - _currentTextClip.dynamicClip.content_mc.height)*.5;						else							_currentTextClip.dynamicClip.content_mc.y = _currentTextClip.dynamicClip.mask_mc.y												_currentTextClip.toggleSlider();					}					else					{						TextFormatting.formatTextWithFontName( _currentTextClip.dynamicClip.content_mc.label_txt, _currentText, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );						_animationTimer.stop();					}				}						}	}