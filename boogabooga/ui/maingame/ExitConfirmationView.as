/** ExitConfirmationView  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame	{		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.events.TimerEvent;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;				import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import org.osflash.signals.Signal;				import com.boogabooga.data.SoundsIndex;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.events.BoogaEvent;				public class ExitConfirmationView extends EventDispatcher		{			protected var _contentClip:MovieClip;						protected var _continueClip:DynamicUIButton;			protected var _cancelClip:DynamicUIButton;						protected var _headerTextMinY:Number;			protected var _headerTextMaxHeight:Number;						public var onContinueClicked:Signal;			public var onCancelClicked:Signal;						/**	Stage Instances **/			public var background_mc:MovieClip;			public var header_txt:TextField;			public var lostProgress_txt:TextField;			public var continue_mc:MovieClip;			public var cancel_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function ExitConfirmationView()				{					//init();				}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										background_mc = _contentClip.background_mc;					background_mc.cacheAsBitmap = true;					header_txt = _contentClip.header_txt;					lostProgress_txt = _contentClip.lostProgress_txt;					continue_mc = _contentClip.continue_mc;					continue_mc.mouseChildren = false;					continue_mc.cacheAsBitmap = true;					cancel_mc = _contentClip.cancel_mc;					cancel_mc.mouseChildren = false;					cancel_mc.cacheAsBitmap = true;										_headerTextMinY = header_txt.y;					_headerTextMaxHeight = header_txt.height;										_continueClip = new DynamicUIButton();					_continueClip.dynamicClip = continue_mc;					_continueClip.dynamicInit();										_cancelClip = new DynamicUIButton();					_cancelClip.dynamicClip = cancel_mc;					_cancelClip.dynamicInit();				}				public function get contentClip():MovieClip { return _contentClip; }							/** init			  *	---------------------------------------------------------------------------- */				public function init():void				{					_continueClip.addEventListener( "onClick", handleContinueClicked, false, 0, true );					_continueClip.addEventListener( "onSetFocus", handleContinueRolledOver, false, 0, true );					_continueClip.addEventListener( "onKillFocus", handleContinueRolledOut, false, 0, true );					_cancelClip.addEventListener( "onClick", handleCancelClicked, false, 0, true );					_cancelClip.addEventListener( "onSetFocus", handleCancelRolledOver, false, 0, true );					_cancelClip.addEventListener( "onKillFocus", handleCancelRolledOut, false, 0, true );										onContinueClicked = new Signal();					onCancelClicked = new Signal();										//TextFormatting.formatTextWithFontName( header_txt, "Exit?", "SF Fedora", false, TextFieldAutoSize.CENTER );					//TextFormatting.formatTextWithFontName( lostProgress_txt, "Any progress will be lost!", "SF Fedora", false, TextFieldAutoSize.CENTER );					TextFormatting.formatTextWithFontName( header_txt, StringsIndex.getInstance().getStringByName("EXIT_EXIT"), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					TextFormatting.formatTextWithFontName( lostProgress_txt, StringsIndex.getInstance().getStringByName("EXIT_PROGRESS_LOST"), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );										header_txt.y = _headerTextMinY + (_headerTextMaxHeight - header_txt.height)*.5;										EventNotificationCenter.getInstance().addSignalListener( BoogaEvent.ON_LANGUAGE_CHANGED, handleLanguageChanged, this );				}							/** show			  *	---------------------------------------------------------------------------- */				public function show( exit:Boolean=true ):void				{					if( exit )						TextFormatting.formatTextWithFontName( header_txt, StringsIndex.getInstance().getStringByName("EXIT_EXIT"), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					else						TextFormatting.formatTextWithFontName( header_txt, StringsIndex.getInstance().getStringByName("EXIT_REPLAY"), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );										header_txt.y = _headerTextMinY + (_headerTextMaxHeight - header_txt.height)*.5;										_contentClip.visible = true;				}							/** hide			  *	---------------------------------------------------------------------------- */				public function hide():void				{					_contentClip.visible = false;				}							/** handleContinueClicked			  *	---------------------------------------------------------------------------- */				protected function handleContinueClicked( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										//dispatchEvent( new BoogaEvent(BoogaEvent.ON_EXIT_CONFIRMATION_CONTINUE) );					onContinueClicked.dispatch();				}								protected function handleContinueRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );										//EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_continueClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("GLOBAL_PLAY")} );				}								protected function handleContinueRolledOut( event:Event ):void				{					//EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleCancelClicked			  *	---------------------------------------------------------------------------- */				protected function handleCancelClicked( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										//dispatchEvent( new BoogaEvent(BoogaEvent.ON_EXIT_CONFIRMATION_CANCEL) );					onCancelClicked.dispatch();				}								protected function handleCancelRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );									}								protected function handleCancelRolledOut( event:Event ):void				{					//EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleLanguageChanged			  *	---------------------------------------------------------------------------- *			  *	When a language is changed, update the text accordingly.			  *	---------------------------------------------------------------------------- */				protected function handleLanguageChanged( customParameters:Object ):void				{					TextFormatting.formatTextWithFontName( header_txt, StringsIndex.getInstance().getStringByName("EXIT_EXIT"), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					TextFormatting.formatTextWithFontName( lostProgress_txt, StringsIndex.getInstance().getStringByName("EXIT_PROGRESS_LOST"), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );										header_txt.y = _headerTextMinY + (_headerTextMaxHeight - header_txt.height)*.5;				}		}	}