/** UnlockNewIslandView  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame	{				import flash.display.Bitmap;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;				import com.avatarlabs.utils.VectorUtil;		import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.events.AssetLoaderEvent;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.userinterface.DynamicUIArrowedSlider;		import com.avatarlabs.utils.userinterface.DynamicUIScroller;		import com.avatarlabs.utils.userinterface.DynamicUIButton;				import com.boogabooga.controller.maingame.MainGameController;		import com.boogabooga.data.SettingsIndex;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.maingame.Island;		import com.boogabooga.events.BoogaEvent;				public class UnlockNewIslandView extends DynamicUIScroller		{			protected var _sliderClip:DynamicUIArrowedSlider;						protected var _headerMinY:Number;			protected var _headerMaxHeight:Number;						protected var _exitClip:DynamicUIButton;			protected var _island:Island;						/**	Stage Instances **/			public var content_mc:MovieClip;			public var mask_mc:MovieClip;			public var slider_mc:MovieClip;			public var header_mc:MovieClip;			public var name_mc:MovieClip;			public var image_mc:MovieClip;			public var shine_mc:MovieClip;			public var exit_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function UnlockNewIslandView()				{					//init();				}								override public function set dynamicClip( m:MovieClip ):void				{					super.dynamicClip = m;										content_mc = _dynamicClip.content_mc;					mask_mc = _dynamicClip.mask_mc;					slider_mc = _dynamicClip.slider_mc;										_sliderClip = new DynamicUIArrowedSlider();					_sliderClip.dynamicClip = slider_mc;					_sliderClip.dynamicInit();					_sliderClip.setProperty( "y" );					_sliderClip.setHandle( slider_mc.handle_mc );					_sliderClip.setBounds( slider_mc.bound_mc );										setProperty( "y" );										header_mc = _dynamicClip.header_mc;					name_mc = _dynamicClip.name_mc;					image_mc = _dynamicClip.image_mc;					shine_mc = _dynamicClip.shine_mc;					shine_mc.stop();					exit_mc = _dynamicClip.exit_mc;										_headerMinY = header_mc.y;					_headerMaxHeight = header_mc.height;										_exitClip = new DynamicUIButton();					_exitClip.dynamicClip = exit_mc;					_exitClip.dynamicInit();				}								override public function dynamicInit():void				{					super.dynamicInit();										setProperty( "y" );					setContent( content_mc );					setMask( mask_mc );					setSlider( _sliderClip );										TextFormatting.formatTextWithFontName( header_mc.label_txt, StringsIndex.getInstance().getStringByName("NEW_ISLAND_UNLOCKED"), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					header_mc.y = _headerMinY + int((_headerMaxHeight - header_mc.height)*.5);										_exitClip.addEventListener( "onClick", handleExitClicked, false, 0, true );					_exitClip.addEventListener( "onSetFocus", handleExitRolledOver, false, 0, true );										EventNotificationCenter.getInstance().addSignalListener( BoogaEvent.ON_LANGUAGE_CHANGED, handleLanguageChanged, this );				}								public function setNewIsland( island:Island ):void				{					_island = island;										//trace( "island name: "+_island.name );					//trace( "island description: "+StringsIndex.getInstance().getString( String(_island.description) ) );										TextFormatting.formatTextWithFontName( name_mc.label_txt, _island.name, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					TextFormatting.formatTextWithFontName( content_mc.label_txt, StringsIndex.getInstance().getString( String(_island.description) ), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					toggleSlider();										MainGameController.getInstance().assetLoaderController.addEventListener( AssetLoaderEvent.COMPLETE, handleLoadIslandBackgroundComplete );					MainGameController.getInstance().assetLoaderController.addEventListener( AssetLoaderEvent.ERROR, handleLoadIslandBackgroundError );					MainGameController.getInstance().assetLoaderController.loadAssets( [{id:_island.cacheIconId, url:_island.iconURL}] );				}							/** handleLoadIslandBackgroundComplete			  *	---------------------------------------------------------------------------- *			  *	Finished loading background. Creates or reuses game level icons,			  *	archeology icons, and cryptology icons.			  *	---------------------------------------------------------------------------- */				protected function handleLoadIslandBackgroundComplete( event:AssetLoaderEvent ):void				{					MainGameController.getInstance().assetLoaderController.removeEventListener( AssetLoaderEvent.COMPLETE, handleLoadIslandBackgroundComplete );					MainGameController.getInstance().assetLoaderController.removeEventListener( AssetLoaderEvent.ERROR, handleLoadIslandBackgroundError );										var bitmap:Bitmap = new Bitmap( BitmapDataManager.getInstance().getBitmapData(_island.cacheIconId).bitmapData );						bitmap.x = -bitmap.width * .5;						bitmap.y = -bitmap.height * .5;										image_mc.addChild( bitmap );										//_islandBackgroundClip = new (getDefinitionByName(_island.backgroundLinkageId) as Class)();										//image_mc.addChild( _islandBackgroundClip );				}							/** handleLoadIslandBackgroundError			  *	---------------------------------------------------------------------------- */				protected function handleLoadIslandBackgroundError( event:AssetLoaderEvent ):void				{					MainGameController.getInstance().assetLoaderController.removeEventListener( AssetLoaderEvent.COMPLETE, handleLoadIslandBackgroundComplete );					MainGameController.getInstance().assetLoaderController.removeEventListener( AssetLoaderEvent.ERROR, handleLoadIslandBackgroundError );				}							/** show			  *	---------------------------------------------------------------------------- */				public function show():void				{					_dynamicClip.visible = true;										shine_mc.play();				}							/** hide			  *	---------------------------------------------------------------------------- */				public function hide():void				{					_dynamicClip.visible = false;										shine_mc.stop();										while( image_mc.numChildren > 0 )						image_mc.removeChildAt( 0 );										resetScroller();										dispatchEvent( new BoogaEvent(BoogaEvent.ON_POPUP_HIDE) );				}							/** handleExitClicked			  *	---------------------------------------------------------------------------- */				private function handleExitClicked( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										hide();				}							/** handleExitRolledOver			  *	---------------------------------------------------------------------------- */				private function handleExitRolledOver( event:Event ):void				{					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );				}							/** handleLanguageChanged			  *	---------------------------------------------------------------------------- *			  *	Updates the texts when the language is changed.			  *	---------------------------------------------------------------------------- */				private function handleLanguageChanged( customParameters:Object ):void				{					TextFormatting.formatTextWithFontName( header_mc.label_txt, StringsIndex.getInstance().getStringByName("NEW_ISLAND_UNLOCKED"), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					header_mc.y = _headerMinY + int((_headerMaxHeight - header_mc.height)*.5);				}						}	}