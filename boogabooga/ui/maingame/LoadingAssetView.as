/** LoadingAssetView  *	---------------------------------------------------------------------------- *  *	@desc:  *		A list for the paths  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame	{		import flash.display.Bitmap;		import flash.display.MovieClip;		import flash.display.StageDisplayState;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.events.MouseEvent;		import flash.geom.Rectangle;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;		import flash.text.TextFormat;		import flash.utils.getDefinitionByName;		import flash.utils.getQualifiedClassName;				import com.greensock.TweenLite;		import com.greensock.easing.Sine;		import com.avatarlabs.utils.ArrayUtil;		import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.VectorUtil;		import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.AssetLoaderEvent;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.forms.InputText;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.userinterface.UIButton;		import com.avatarlabs.utils.userinterface.UIScroller;				import com.boogabooga.controller.AssetLoaderController;		import com.boogabooga.controller.maingame.MainGameController;		import com.boogabooga.data.SoundsIndex;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.gamelevel.GameLevelDataIndex;		import com.boogabooga.data.gamelevel.Weapon;		import com.boogabooga.events.GameLevelEvent;		import com.boogabooga.ui.maingame.loading.BuildingItemView;						public class LoadingAssetView extends EventDispatcher		{			protected var _contentClip:MovieClip;			protected var _currentAssetLoaderController:AssetLoaderController;						protected var _buildingItemViewClip:BuildingItemView;						protected var _tips:Array;			protected var _tipsLength:int;			protected var _tipsMaxHeight:Number;			protected var _tipsOriginalTextFormat:TextFormat;						/**	Stage Instances **/			//public var loadingPer_txt:TextField;			public var intoTheJungleAnimationContainer_mc:MovieClip;			public var intoTheJungleAnimation_mc:MovieClip;			public var buildingItem_mc:MovieClip;			public var spinAnimation_mc:MovieClip;			public var loading_mc:MovieClip;			public var tips_mc:MovieClip;			public var blackBackground_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function LoadingAssetView()				{					//init();				}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										intoTheJungleAnimationContainer_mc = _contentClip.intoTheJungleAnimationContainer_mc;										if( intoTheJungleAnimationContainer_mc != null )					{						intoTheJungleAnimation_mc = intoTheJungleAnimationContainer_mc.intoTheJungleAnimation_mc;						intoTheJungleAnimationContainer_mc.scrollRect = new Rectangle( 0, 0, 760, 625 );						intoTheJungleAnimationContainer_mc.cacheAsBitmap = true;					}										buildingItem_mc = _contentClip.buildingItem_mc;					spinAnimation_mc = _contentClip.spinAnimation_mc;					loading_mc = _contentClip.loading_mc;					tips_mc = _contentClip.tips_mc;					blackBackground_mc = _contentClip.blackBackground_mc;										if( blackBackground_mc != null )						blackBackground_mc.cacheAsBitmap = true;										if( buildingItem_mc != null )					{						_buildingItemViewClip = new BuildingItemView();						_buildingItemViewClip.contentClip = buildingItem_mc;						_buildingItemViewClip.init();					}										if( spinAnimation_mc != null )					{						spinAnimation_mc.stop();					}										if( loading_mc != null )					{						loading_mc.label_txt.mouseEnabled = false;						loading_mc.label_txt.mouseWheelEnabled = false;						TextFormatting.formatTextWithFontName( loading_mc.label_txt, "Loading", "Lithos Pro Black", false, TextFieldAutoSize.LEFT );						loading_mc.stop();					}										if( tips_mc != null )					{						tips_mc.visible = false;						tips_mc.label_txt.mouseEnabled = false;						tips_mc.label_txt.mouseWheelEnabled = false;												_tipsMaxHeight = tips_mc.label_txt.height;						_tipsOriginalTextFormat = UtilFunctions.clone( tips_mc.label_txt.getTextFormat() ) as TextFormat;					}				}				public function get contentClip():MovieClip { return _contentClip; }							/** init			  *	---------------------------------------------------------------------------- */				public function init():void				{					if( intoTheJungleAnimation_mc != null )					{						intoTheJungleAnimation_mc.stop();						intoTheJungleAnimation_mc.visible = false;						intoTheJungleAnimation_mc.alpha = 1;					}										if( buildingItem_mc != null )					{						_buildingItemViewClip.contentClip.visible = false;						_buildingItemViewClip.contentClip.alpha = 1;					}										if( spinAnimation_mc != null )					{						spinAnimation_mc.stop();						spinAnimation_mc.visible = false;					}										_tips = new Array();					var strings:Vector.<Object> = StringsIndex.getInstance().strings;					for( var i:int=0; i<strings.length; ++i )					{						if( strings[i].name.search('TIPS_') >= 0 )						{							_tips.push( strings[i].name );						}					}					_tipsLength = _tips.length;										//trace( "tips length: "+_tipsLength );				}							/** show			  *	---------------------------------------------------------------------------- */				public function show():void				{					_contentClip.visible = true;				}							/** hide			  *	---------------------------------------------------------------------------- */				public function hide():void				{					_contentClip.visible = false;										SoundEffectPlayer.getInstance().stopSound( "booga_jungle_atmosphere.wav", "booga_jungle_atmosphere.wav", "booga_jungle_atmosphere.wav", SoundEffectPlayer.SOUND_PLAYER_MUSIC );										if( spinAnimation_mc != null )					{						spinAnimation_mc.stop();						spinAnimation_mc.visible = false;					}				}							/** showLoadingProgress			  *	---------------------------------------------------------------------------- */				public function showLoadingProgress( alc:AssetLoaderController=null ):void				{					//loadingPer_txt.text = "0%";										if( alc == null )						_currentAssetLoaderController = MainGameController.getInstance().assetLoaderController;					else						_currentAssetLoaderController = alc;										_currentAssetLoaderController.addEventListener( AssetLoaderEvent.PROGRESS, handleLoadProgress, false, 0, true );										if( spinAnimation_mc != null )					{						spinAnimation_mc.play();						spinAnimation_mc.visible = true;					}										if( loading_mc != null )					{						loading_mc.play();						loading_mc.visible = true;					}										show();				}							/** hideLoadingProgress			  *	---------------------------------------------------------------------------- */				public function hideLoadingProgress():void				{					trace( "hideLoadingProgress();" );										if( _currentAssetLoaderController != null )					{						_currentAssetLoaderController.removeEventListener( AssetLoaderEvent.PROGRESS, handleLoadProgress );						_currentAssetLoaderController = null;					}										if( spinAnimation_mc != null )					{						spinAnimation_mc.stop();						spinAnimation_mc.visible = false;					}										if( loading_mc != null )					{						loading_mc.stop();						loading_mc.visible = false;					}										hide();				}							/** handleLoadProgress			  *	---------------------------------------------------------------------------- */				protected function handleLoadProgress( event:AssetLoaderEvent ):void				{					//ConsoleBroadcaster.broadcast( "LoadingAssetView", "handleLoadProgress("+event.percentage+");" );										//loadingPer_txt.text = int(event.percentage*100)+"%";					//TextFormatting.formatTextWithFontName( loadingPer_txt, int(event.percentage*100)+"%", "Lithos Pro Black", false, TextFieldAutoSize.LEFT );				}							/** showLoadingJungleAnimation			  *	---------------------------------------------------------------------------- */				public function showLoadingJungleAnimation():void				{					trace( "showLoadingJungleAnimation();" );					//trace( "intoTheJungleAnimation_mc: "+intoTheJungleAnimation_mc );										if( intoTheJungleAnimation_mc != null )					{						trace( "booga jungle atmosphere sound data: "+SoundsIndex.getInstance().getSoundBySoundId("booga_jungle_atmosphere.wav") );						//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("booga_jungle_atmosphere.wav").volume, 0, "BoogaJungleAtmosphere" );						SoundEffectPlayer.getInstance().playLibrarySound( "booga_jungle_atmosphere.wav", true, "booga_jungle_atmosphere.wav", "booga_jungle_atmosphere.wav", SoundEffectPlayer.SOUND_PLAYER_MUSIC );						intoTheJungleAnimation_mc.gotoAndPlay(1);						intoTheJungleAnimation_mc.visible = true;					}					else					{											}										if( loading_mc != null )					{						loading_mc.play();						loading_mc.visible = true;					}										if( tips_mc != null )					{						var tipIndex:int = int(Math.random()*_tipsLength);												tips_mc.label_txt.setTextFormat( _tipsOriginalTextFormat );						tips_mc.label_txt.height = _tipsMaxHeight;						TextFormatting.formatTextWithFontName( tips_mc.label_txt, StringsIndex.getInstance().getStringByName(_tips[tipIndex]), "Lithos Pro Black", false, TextFieldAutoSize.CENTER );						var tf:TextFormat = tips_mc.label_txt.getTextFormat();												if( tips_mc.label_txt.height < _tipsMaxHeight )						{							while( tips_mc.label_txt.height < _tipsMaxHeight )							{								tf.size += 1;								tips_mc.label_txt.setTextFormat(tf);							}														tf.size = Number(tf.size) - 1;							tips_mc.label_txt.setTextFormat(tf);						}												tips_mc.background_mc.height = tips_mc.label_txt.height + 15;						tips_mc.visible = true;												//trace( "tips_mc is available" );					}										show();				}							/** hideLoadingJungleAnimation			  *	---------------------------------------------------------------------------- */				public function hideLoadingJungleAnimation():void				{					trace( "hideLoadingJungleAnimation();" );										if( intoTheJungleAnimation_mc != null )					{						SoundEffectPlayer.getInstance().stopSound( "booga_jungle_atmosphere.wav", "booga_jungle_atmosphere.wav", "booga_jungle_atmosphere.wav", SoundEffectPlayer.SOUND_PLAYER_MUSIC );						intoTheJungleAnimation_mc.visible = false;						intoTheJungleAnimation_mc.gotoAndStop(1);					}										if( loading_mc != null )					{						loading_mc.stop();						loading_mc.visible = false;					}										if( tips_mc != null )					{						tips_mc.visible = false;					}										hide();				}							/** showBuildingItem			  *	---------------------------------------------------------------------------- */				public function showBuildingItem( alc:AssetLoaderController=null ):void				{					if( alc != null )					{						_currentAssetLoaderController = alc;						_currentAssetLoaderController.addEventListener( AssetLoaderEvent.PROGRESS, handleBuildingItemLoadProgress );					}										_buildingItemViewClip.contentClip.visible = true;										show();				}							/** hideBuildingItem			  *	---------------------------------------------------------------------------- */				public function hideBuildingItem():void				{					if( _currentAssetLoaderController != null )					{						_currentAssetLoaderController.removeEventListener( AssetLoaderEvent.PROGRESS, handleBuildingItemLoadProgress );						_currentAssetLoaderController = null;					}										_buildingItemViewClip.contentClip.visible = false;					_buildingItemViewClip.showLoadingPercentage( .01 );										hide();				}							/** handleBuildingItemLoadProgress			  *	---------------------------------------------------------------------------- */				protected function handleBuildingItemLoadProgress( event:AssetLoaderEvent ):void				{					_buildingItemViewClip.showLoadingPercentage( event.percentage );				}						}	}