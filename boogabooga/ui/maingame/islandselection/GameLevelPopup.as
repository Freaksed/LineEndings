/** GameLevelPopup  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame.islandselection	{		import flash.display.Bitmap;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.events.MouseEvent;		import flash.geom.ColorTransform;		import flash.geom.Point;		import flash.geom.Rectangle;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;		import flash.utils.getDefinitionByName;				import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.datatypes.DataTypeOperations;		import com.avatarlabs.utils.events.AssetLoaderEvent;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.timers.CountDown;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import org.osflash.signals.Signal;				import com.boogabooga.controller.maingame.MainGameController;		import com.boogabooga.data.SoundsIndex;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.gamelevel.GameLevelDataIndex;		//import com.boogabooga.data.maingame.Cryptology;		import com.boogabooga.data.maingame.Treasure;		import com.boogabooga.data.maingame.Village;		import com.boogabooga.events.BoogaEvent;		import flash.text.TextFormat;		//import com.boogabooga.ui.maingame.cryptology.CryptologySymbol;				public class GameLevelPopup extends EventDispatcher		{			protected var _contentClip:MovieClip;			protected var _item:AbstractGameObject;			protected var _bounds:Rectangle;						protected var _isContentVisible:Boolean;			protected var _gameLevelLocked:Boolean;			protected var _digCompleted:Boolean;						protected var _playClip:DynamicUIButton;			protected var _playAgainClip:DynamicUIButton;			protected var _exitClip:DynamicUIButton;			protected var _digClip:DynamicUIButton;			protected var _digEarlyClip:DynamicUIButton;						protected var _gameLevelUnlockedHeaderPosition:Point;			protected var _gameLevelLockedHeaderPosition:Point;						protected var _gameLevelUnlockedExitPosition:Point;			protected var _gameLevelLockedExitPosition:Point;						protected var _nextDigCountDown:CountDown;			protected var _nextDigOriginalTextFormat:TextFormat;			protected var _nextDigMaxWidth:Number;						public var onPlayClicked:Signal;			public var onDigClicked:Signal;			public var onDigEarlyClicked:Signal;			public var onNextDigCountDownExpired:Signal;			public var onPopupHid:Signal;						/**	Stage Instances **/			public var header_mc:MovieClip;			public var play_mc:MovieClip;			public var playAgain_mc:MovieClip;			public var digEarly_mc:MovieClip;			public var dig_mc:MovieClip;			//public var gameLevel_mc:MovieClip;			public var archeology_mc:MovieClip;			//public var cryptology_mc:MovieClip;			public var nextDig_mc:MovieClip;			public var backgroundTopRight_mc:MovieClip;			public var backgroundTopLeft_mc:MovieClip;			//public var backgroundBottomRight_mc:MovieClip;			//public var backgroundBottomLeft_mc:MovieClip;			public var backgroundGameLevelLockedTopRight_mc:MovieClip;			public var backgroundGameLevelLockedTopLeft_mc:MovieClip;			public var exit_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function GameLevelPopup()				{					//init();				}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										header_mc = _contentClip.header_mc;					play_mc = _contentClip.play_mc;					//play_mc.cacheAsBitmap = true;					playAgain_mc = _contentClip.playAgain_mc;					//playAgain_mc.cacheAsBitmap = true;					//gameLevel_mc = _contentClip.gameLevel_mc;					//gameLevel_mc.cacheAsBitmap = true;					archeology_mc = _contentClip.archeology_mc;					//archeology_mc.cacheAsBitmap = true;					dig_mc = _contentClip.dig_mc;					digEarly_mc = _contentClip.digEarly_mc;					nextDig_mc = _contentClip.nextDig_mc;					nextDig_mc.visible = false;					backgroundTopRight_mc = _contentClip.backgroundTopRight_mc;					backgroundTopRight_mc.cacheAsBitmap = true;					backgroundTopLeft_mc = _contentClip.backgroundTopLeft_mc;					backgroundTopLeft_mc.cacheAsBitmap = true;					backgroundTopLeft_mc.visible = false;					backgroundGameLevelLockedTopRight_mc = _contentClip.backgroundGameLevelLockedTopRight_mc;					backgroundGameLevelLockedTopRight_mc.cacheAsBitmap = true;					backgroundGameLevelLockedTopRight_mc.visible = false;					backgroundGameLevelLockedTopLeft_mc = _contentClip.backgroundGameLevelLockedTopLeft_mc;					backgroundGameLevelLockedTopLeft_mc.cacheAsBitmap = true;					backgroundGameLevelLockedTopLeft_mc.visible = false;					//backgroundBottomRight_mc = _contentClip.backgroundBottomRight_mc;					//backgroundBottomRight_mc.cacheAsBitmap = true;					//backgroundBottomLeft_mc = _contentClip.backgroundBottomLeft_mc;					//backgroundBottomLeft_mc.cacheAsBitmap = true;					exit_mc = _contentClip.exit_mc;					//exit_mc.cacheAsBitmap = true;										_playClip = new DynamicUIButton();					_playClip.dynamicClip = play_mc;					_playClip.dynamicInit();										_playAgainClip = new DynamicUIButton();					_playAgainClip.dynamicClip = playAgain_mc;					_playAgainClip.dynamicInit();										_exitClip = new DynamicUIButton();					_exitClip.dynamicClip = exit_mc;					_exitClip.dynamicInit();										_digClip = new DynamicUIButton();					_digClip.dynamicClip = dig_mc;					_digClip.dynamicInit();										_digEarlyClip = new DynamicUIButton();					_digEarlyClip.dynamicClip = digEarly_mc;					_digEarlyClip.dynamicInit();									}				public function get contentClip():MovieClip { return _contentClip; }								public function get isContentVisible():Boolean { return _isContentVisible; }				public function get gameLevelLocked():Boolean { return _gameLevelLocked; }				public function get digCompleted():Boolean { return _digCompleted; }							/** init			  *	---------------------------------------------------------------------------- */				public function init():void				{					//backgroundTopLeft_mc.visible = false;					//backgroundBottomRight_mc.visible = false;					//backgroundBottomLeft_mc.visible = false;										_gameLevelUnlockedHeaderPosition = new Point( 60, -147 );					_gameLevelUnlockedExitPosition = new Point( 226, -170 );										_gameLevelLockedHeaderPosition = new Point( 42, -93 );					_gameLevelLockedExitPosition = new Point( 172, -121 );										onPlayClicked = new Signal();					onDigClicked = new Signal();					onDigEarlyClicked = new Signal();					onNextDigCountDownExpired = new Signal();					onPopupHid = new Signal();										_bounds = _contentClip.getBounds( _contentClip );										_playClip.addEventListener( "onClick", handlePlayClicked, false, 0, true );					_playClip.addEventListener( "onSetFocus", handlePlayRolledOver, false, 0, true );					_playClip.addEventListener( "onKillFocus", handlePlayRolledOut, false, 0, true );					_playAgainClip.addEventListener( "onClick", handlePlayClicked, false, 0, true );					_playAgainClip.addEventListener( "onSetFocus", handlePlayAgainRolledOver, false, 0, true );					_playAgainClip.addEventListener( "onKillFocus", handlePlayAgainRolledOut, false, 0, true );					_exitClip.addEventListener( "onClick", handleExitClicked, false, 0, true );					_exitClip.addEventListener( "onSetFocus", handleExitRolledOver, false, 0, true );					_digEarlyClip.addEventListener( "onClick", handleDigEarlyClicked, false, 0, true );					_digEarlyClip.addEventListener( "onSetFocus", handleDigEarlyRolledOver, false, 0, true );					_digEarlyClip.addEventListener( "onKillFocus", handleDigEarlyRolledOut, false, 0, true );					_digClip.addEventListener( "onClick", handleDigClicked, false, 0, true );					_digClip.addEventListener( "onSetFocus", handleDigRolledOver, false, 0, true );					_digClip.addEventListener( "onKillFocus", handleDigRolledOut, false, 0, true );										archeology_mc.commonArtifact_mc.addEventListener( MouseEvent.ROLL_OVER, handleCommonArtifactRolledOver, false, 0, true );					archeology_mc.commonArtifact_mc.addEventListener( MouseEvent.ROLL_OUT, handleCommonArtifactRolledOut, false, 0, true );					archeology_mc.rareArtifact_mc.addEventListener( MouseEvent.ROLL_OVER, handleRareArtifactRolledOver, false, 0, true );					archeology_mc.rareArtifact_mc.addEventListener( MouseEvent.ROLL_OUT, handleRareArtifactRolledOut, false, 0, true );					archeology_mc.superDefenseType_mc.addEventListener( MouseEvent.ROLL_OVER, handleSuperDefenseRolledOver, false, 0, true );					archeology_mc.superDefenseType_mc.addEventListener( MouseEvent.ROLL_OUT, handleSuperDefenseRolledOut, false, 0, true );				}							/** show			  *	---------------------------------------------------------------------------- */				public function show( gameLevelLocked:Boolean, currentCommon:int, maxCommon:int, currentRare:int, maxRare:int, currentConsumables:int, maxConsumables:int, showCountDown:Boolean=false ):void				{					//trace( "show("+gameLevelLocked+", "+currentCommon+", "+maxCommon+", "+currentRare+", "+maxRare+", "+currentConsumables+", "+maxConsumables+");" );										_gameLevelLocked = gameLevelLocked;										if( _gameLevelLocked )					{						//gameLevel_mc.transform.colorTransform = new ColorTransform( .5, .5, .5, 1, 0, 0, 0, 0 );						_playClip.dynamicClip.visible = true;						_digClip.dynamicClip.visible = false;						_digEarlyClip.dynamicClip.visible = false;						_playAgainClip.dynamicClip.visible = false;						//nextDig_mc.visible = false;						archeology_mc.visible = false;												_exitClip.dynamicClip.x = _gameLevelLockedExitPosition.x;						_exitClip.dynamicClip.y = _gameLevelLockedExitPosition.y;												header_mc.x = _gameLevelLockedHeaderPosition.x;						header_mc.y = _gameLevelLockedHeaderPosition.y;												backgroundTopRight_mc.visible = false;						backgroundTopLeft_mc.visible = false;					}					else					{						//gameLevel_mc.transform.colorTransform = new ColorTransform();						_playClip.dynamicClip.visible = false;						//_digClip.dynamicClip.visible = true;						//_digEarlyClip.dynamicClip.visible = true;						_playAgainClip.dynamicClip.visible = true;						//nextDig_mc.visible = true;						archeology_mc.visible = true;												_exitClip.dynamicClip.x = _gameLevelUnlockedExitPosition.x;						_exitClip.dynamicClip.y = _gameLevelUnlockedExitPosition.y;												header_mc.x = _gameLevelUnlockedHeaderPosition.x;						header_mc.y = _gameLevelUnlockedHeaderPosition.y;												TextFormatting.formatTextWithFontName( archeology_mc.commonTreasureCount_txt, currentCommon+"/"+maxCommon, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );						TextFormatting.formatTextWithFontName( archeology_mc.rareTreasureCount_txt, currentRare+"/"+maxRare, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );						TextFormatting.formatTextWithFontName( archeology_mc.consumablesCount_txt, currentConsumables+'/'+maxConsumables, 'Lithos Pro Black', false, TextFieldAutoSize.CENTER );												backgroundGameLevelLockedTopRight_mc.visible = false;						backgroundGameLevelLockedTopLeft_mc.visible = true;					}										calculateBound();										if( currentCommon != maxCommon || currentRare != maxRare || currentConsumables != maxConsumables )					{						_digCompleted = false;												if( showCountDown )						{							_digClip.dynamicClip.visible = false;							_digEarlyClip.dynamicClip.visible = true;						}						else						{							_digClip.dynamicClip.visible = true;							_digEarlyClip.dynamicClip.visible = false;							nextDig_mc.visible = false;						}												_playAgainClip.dynamicClip.x = 81;					}					else					{						_digCompleted = true;						_digClip.dynamicClip.visible = false;						_digEarlyClip.dynamicClip.visible = false;						_playAgainClip.dynamicClip.x = 108;						nextDig_mc.visible = false;					}										/*					if( archeologyLocked )					{						//archeology_mc.transform.colorTransform = new ColorTransform( .5, .5, .5, 1, 0, 0, 0, 0 );						archeology_mc.visible = false;						play_mc.visible = true;					}					else					{						//archeology_mc.transform.colorTransform = new ColorTransform();						archeology_mc.visible = true;					}					*/					/*					if( cryptologyLocked )					{						cryptology_mc.transform.colorTransform = new ColorTransform( .5, .5, .5,1, 1, 1 );					}					else					{						cryptology_mc.transform.colorTransform = new ColorTransform();					}					*/					_isContentVisible = true;					_contentClip.visible = true;										//startCheckingBound();				}							/** hide			  *	---------------------------------------------------------------------------- */				public function hide():void				{					//stopCheckingBound();										if( _nextDigCountDown != null )						_nextDigCountDown.stopCountDown();										nextDig_mc.visible = false;										_contentClip.visible = false;					_isContentVisible = false;										//dispatchEvent( new BoogaEvent(BoogaEvent.ON_POPUP_HIDE) );					onPopupHid.dispatch();				}							/** calculateBound			  *	---------------------------------------------------------------------------- */				public function calculateBound():void				{					var bounds:Rectangle;										if( _gameLevelLocked )					{						bounds = backgroundGameLevelLockedTopRight_mc.getBounds( backgroundGameLevelLockedTopRight_mc.stage );					}					else					{						bounds = backgroundTopRight_mc.getBounds( backgroundTopRight_mc.stage );					}										if( bounds.right > 760 )					{						if( _gameLevelLocked )						{							backgroundGameLevelLockedTopRight_mc.visible = false;							backgroundGameLevelLockedTopLeft_mc.visible = true;							_contentClip.x -= 210;						}						else						{							backgroundTopRight_mc.visible = false;							backgroundTopLeft_mc.visible = true;							_contentClip.x -= 260;						}					}					else					{						if( _gameLevelLocked )						{							backgroundGameLevelLockedTopRight_mc.visible = true;							backgroundGameLevelLockedTopLeft_mc.visible = false;						}						else						{							backgroundTopRight_mc.visible = true;							backgroundTopLeft_mc.visible = false;						}					}				}							/** setNextDigTime			  *	---------------------------------------------------------------------------- */				public function setNextDigTime( time:Number ):void				{					var timeText:String = DataTypeOperations.convertSecondsToTimeString(time/1000);						timeText = timeText.substr( 0, timeText.length-3 );					TextFormatting.formatTextWithFontName( nextDig_mc.label_txt, StringsIndex.getInstance().getStringByName("ARCHEOLOGIES_NEXT_DIG_EXPEDITION_IN")+" "+timeText, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					nextDig_mc.visible = true;				}							/** setHeader			  *	---------------------------------------------------------------------------- */				public function setHeader( header:String ):void				{					//TextFormatting.formatTextWithFontName( header_mc.label_txt, text, "SF Fedora", false, TextFieldAutoSize.CENTER );					TextFormatting.formatTextWithFontName( header_mc.label_txt, header, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );				}							/** startCheckingBound			  *	---------------------------------------------------------------------------- */				protected function startCheckingBound():void				{					_contentClip.stage.addEventListener( MouseEvent.MOUSE_MOVE, handleMouseMoved, false, 0, true );				}							/** stopCheckingBound			  *	---------------------------------------------------------------------------- */				protected function stopCheckingBound():void				{					_contentClip.stage.removeEventListener( MouseEvent.MOUSE_MOVE, handleMouseMoved );				}							/** handleMouseMoved			  *	---------------------------------------------------------------------------- *			  *	Checks to see if mouse is out of the boundary of the popup. If so, close it.			  *	---------------------------------------------------------------------------- */				protected function handleMouseMoved( event:MouseEvent ):void				{					var localPosition:Point = _contentClip.globalToLocal( new Point(event.stageX, event.stageY) );										//trace( "x: "+localPosition.x+", y:"+localPosition.y );					//trace( "bounds.top: "+_bounds.top+", bottom: "+_bounds.bottom+", left: "+_bounds.left+", right: "+_bounds.right );										if( localPosition.x < _bounds.left || localPosition.x > _bounds.right || localPosition.y < _bounds.top || localPosition.y > _bounds.bottom )					{						hide();						//trace( "supposed to hide now" );					}				}							/** handlePlayClicked			  *	---------------------------------------------------------------------------- */				protected function handlePlayClicked( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );					//dispatchEvent( new BoogaEvent(BoogaEvent.ON_PLAY_LEVEL) );					onPlayClicked.dispatch();				}							/** handlePlayRolledOver			  *	---------------------------------------------------------------------------- */				protected function handlePlayRolledOver( event:Event ):void				{					//trace( "handlePlayRolledOver();" );					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_playClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("ISLAND_DEFEND")} );				}							/** handlePlayRolledOut			  *	---------------------------------------------------------------------------- */				protected function handlePlayRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handlePlayAgainRolledOver			  *	---------------------------------------------------------------------------- */				protected function handlePlayAgainRolledOver( event:Event ):void				{					//trace( "handlePlayAgainRolledOver();" );					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_playAgainClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("ISLAND_PLAY_AGAIN")} );				}							/** handlePlayAgainRolledOut			  *	---------------------------------------------------------------------------- */				protected function handlePlayAgainRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleDigClicked			  *	---------------------------------------------------------------------------- */				protected function handleDigClicked( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										//dispatchEvent( new BoogaEvent(BoogaEvent.ON_ARCHEOLOGY_DIG) );					onDigClicked.dispatch();				}							/** handleDigRolledOver			  *	---------------------------------------------------------------------------- */				protected function handleDigRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );										EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_digClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("DIG_DIG")} );				}							/** handleDigRolledOut			  *	---------------------------------------------------------------------------- */				protected function handleDigRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleDigEarlyClicked			  *	---------------------------------------------------------------------------- */				protected function handleDigEarlyClicked( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										//dispatchEvent( new BoogaEvent(BoogaEvent.ON_ARCHEOLOGY_DIG_EARLY) );					onDigEarlyClicked.dispatch();				}							/** handleDigEarlyRolledOver			  *	---------------------------------------------------------------------------- */				protected function handleDigEarlyRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );										EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_digEarlyClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("DIG_DIG_EARLY")} );				}							/** handleDigEarlyRolledOut			  *	---------------------------------------------------------------------------- */				protected function handleDigEarlyRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleExitClicked			  *	---------------------------------------------------------------------------- */				protected function handleExitClicked( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );					hide();				}							/** handleExitRolledOver			  *	---------------------------------------------------------------------------- */				protected function handleExitRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );				}								protected function handleRareArtifactRolledOver( event:MouseEvent ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:archeology_mc.rareArtifact_mc, text:StringsIndex.getInstance().getStringByName("DIG_RARE_TREASURE_FOUND")} );				}								protected function handleRareArtifactRolledOut( event:MouseEvent ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}								protected function handleCommonArtifactRolledOver( event:MouseEvent ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:archeology_mc.commonArtifact_mc, text:StringsIndex.getInstance().getStringByName("DIG_COMMON_TREASURE_FOUND")} );				}								protected function handleCommonArtifactRolledOut( event:MouseEvent ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}								protected function handleSuperDefenseRolledOver( event:MouseEvent ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:archeology_mc.superDefenseType_mc, text:StringsIndex.getInstance().getStringByName("LEVEL_SETUP_SPECIAL_ITEMS")} );				}								protected function handleSuperDefenseRolledOut( event:MouseEvent ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}		}	}