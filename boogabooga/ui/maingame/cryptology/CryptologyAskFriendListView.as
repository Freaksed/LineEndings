/** CryptologyAskFriendListView  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame.cryptology	{		import flash.display.Bitmap;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;		import flash.utils.getDefinitionByName;				import com.avatarlabs.utils.VectorUtil;		import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.AssetLoaderEvent;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.loader.CustomLoader;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.userinterface.UIArrowedSlider;		import com.avatarlabs.utils.userinterface.UIButton;		import com.avatarlabs.utils.userinterface.UIScroller;		import com.avatarlabs.utils.userinterface.UISlider;				import com.boogabooga.controller.maingame.MainGameController;		import com.boogabooga.data.maingame.Village;		import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.gamelevel.GameLevelDataIndex;		import com.boogabooga.data.maingame.Treasure;		import com.boogabooga.data.maingame.Cryptology;		import com.boogabooga.data.maingame.User;				public class CryptologyAskFriendListView extends UIScroller		{			protected var _friendListItems:Vector.<CryptologyAskFriendListItem>;						/**	Stage Instances **/			public var content_mc:MovieClip;			public var mask_mc:MovieClip;			public var slider_mc:UIArrowedSlider;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function CryptologyAskFriendListView()				{					//init();				}								override public function init():void				{					super.init();										_friendListItems = new Vector.<CryptologyAskFriendListItem>;										setSlider( slider_mc );					setContent( content_mc );					setMask( mask_mc );										toggleSlider();				}								public function reset():void				{					for( var i:int=0; i<_friendListItems.length; ++i )					{						content_mc.removeChild( _friendListItems[i] );					}										VectorUtil.removeAll( _friendListItems );				}								public function show():void				{					visible = true;				}								public function hide():void				{					visible = false;										reset();				}								public function addFriends( friends:Vector.<User> ):void				{					var friendListItem:CryptologyAskFriendListItem;										for( var i:int=0; i<friends.length; ++i )					{						friendListItem = new (getDefinitionByName("CryptologyAskFriendPopupView.friendList.Itme") as Class)();						friendListItem.addEventListener( "onSelected", handleFriendSelected );						friendListItem.user = friends[i];												if( i % 2 == 1 )							friendListItem.backgroundOdd_mc.visible = false;					}				}								protected function handleFriendSelected( event:Event ):void				{									}						}	}