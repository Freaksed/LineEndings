/** CryptologySymbol  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame.cryptology	{		import flash.display.Bitmap;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;				import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.AssetLoaderEvent;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.userinterface.UIButton;		import com.avatarlabs.utils.userinterface.UIScroller;		import com.avatarlabs.utils.userinterface.UISlider;				import com.boogabooga.controller.maingame.MainGameController;		import com.boogabooga.data.maingame.Village;		import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.gamelevel.GameLevelDataIndex;		import com.boogabooga.data.maingame.Treasure;				public class CryptologySymbol extends MovieClip		{			protected var _item:AbstractGameObject;			protected var _leftSymbolShown:Boolean;			protected var _rightSymbolShown:Boolean;						/**	Stage Instances **/			public var image_mc:MovieClip;			public var leftMask_mc:MovieClip;			public var rightMask_mc:MovieClip;			public var leftSymbolThickness_mc:MovieClip;			public var rightSymbolThickness_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function CryptologySymbol()				{					init();				}								public function init():void				{					leftMask_mc.visible = false;					rightMask_mc.visible = false;					leftSymbolThickness_mc.visible = false;					rightSymbolThickness_mc.visible = false;					//image_mc.visible = false;										_leftSymbolShown = false;					_rightSymbolShown = false;				}								public function initItem( item:AbstractGameObject ):void				{					ConsoleBroadcaster.broadcast( "CryptologySymbol", "initItem("+item.name+");" );										_item = item;										image_mc.visible = false;										if( BitmapDataManager.getInstance().getBitmapData(_item.cacheIconId) != null )					{						addImage();					}					else					{						MainGameController.getInstance().urgentAssetLoaderController.addBitmapToLoad( _item.cacheIconId, _item.iconURL );						MainGameController.getInstance().urgentAssetLoaderController.addEventListener( AssetLoaderEvent.COMPLETE, handleIconLoadComplete );						MainGameController.getInstance().urgentAssetLoaderController.startLoadAssets();												leftSymbolThickness_mc.visible = false;						rightSymbolThickness_mc.visible = false;					}				}								protected function handleIconLoadComplete( event:AssetLoaderEvent ):void				{					ConsoleBroadcaster.broadcast( "CryptologySymbol", "handleIconLoadComplete();" );										if( BitmapDataManager.getInstance().getBitmapData(_item.cacheIconId) != null )					{						addImage();					}				}								protected function addImage():void				{					var bitmap:Bitmap = new Bitmap( BitmapDataManager.getInstance().getBitmapData(_item.cacheIconId).bitmapData );						bitmap.width = 140;						bitmap.height = 140;						bitmap.smoothing = true;						//bitmap.x = -70;						//bitmap.y = -70;					image_mc.addChild( bitmap );					image_mc.visible = true;										if( _leftSymbolShown )						leftSymbolThickness_mc.visible = true;										if( _rightSymbolShown )						rightSymbolThickness_mc.visible = true;				}								public function reset():void				{					ConsoleBroadcaster.broadcast( "CryptologySymbol", "reset();" );										while( image_mc.numChildren > 0 )						image_mc.removeChildAt(0);										//_item = null;				}							/** showLeftSymbol			  *	---------------------------------------------------------------------------- *			  *	Show the left part of the symbol.			  *	---------------------------------------------------------------------------- */				public function showLeftSymbol():void				{					_leftSymbolShown = true;					_rightSymbolShown = false;										rightMask_mc.visible = false;					leftMask_mc.visible = true;					image_mc.mask = leftMask_mc;					leftSymbolThickness_mc.visible = true;					rightSymbolThickness_mc.visible = false;				}							/** showRightSymbol			  *	---------------------------------------------------------------------------- *			  *	Show the right part of the symbol.			  *	---------------------------------------------------------------------------- */				public function showRightSymbol():void				{					_leftSymbolShown = false;					_rightSymbolShown = true;										rightMask_mc.visible = true;					leftMask_mc.visible = false;					image_mc.mask = rightMask_mc;					leftSymbolThickness_mc.visible = false;					rightSymbolThickness_mc.visible = true;				}						}	}