/** PlayViewControls  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame.gameboard	{		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.utils.getDefinitionByName;				import com.avatarlabs.utils.UtilFunctions;		import com.avatarlabs.utils.VectorUtil;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.AssetLoaderEvent;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import org.osflash.signals.Signal;				import com.boogabooga.controller.gamelevel.GameboardController;		import com.boogabooga.controller.gamelevel.GameLevelDataController;		import com.boogabooga.controller.maingame.MainGameController;		import com.boogabooga.data.SoundsIndex;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.gamelevel.GameLevelDataIndex;		import com.boogabooga.data.gamelevel.GameLevelCurrentData;		import com.boogabooga.events.BoogaEvent;		import com.boogabooga.ui.gamelevel.Gameboard;		import com.boogabooga.ui.maingame.AbstractContentView;		import com.boogabooga.ui.maingame.IContentView;		import com.boogabooga.ui.maingame.LoadingAssetView;		import com.boogabooga.utils.GameLevelUtil;				public class PlayViewControls extends EventDispatcher		{			protected var _contentClip:MovieClip;			protected var _gameboardController:GameboardController;						protected var _fullScreenClip:DynamicUIButton;			protected var _playClip:DynamicUIButton;			protected var _pauseClip:DynamicUIButton;			protected var _musicOnClip:DynamicUIButton;			protected var _musicOffClip:DynamicUIButton;			protected var _sfxOnClip:DynamicUIButton;			protected var _sfxOffClip:DynamicUIButton;			protected var _normalScreenY:Number;						public var onFullScreenToggled:Signal;						/**	Stage Instances **/			public var fullScreen_mc:MovieClip;			public var play_mc:MovieClip;			public var pause_mc:MovieClip;			public var musicOn_mc:MovieClip;			public var musicOff_mc:MovieClip;			public var sfxOn_mc:MovieClip;			public var sfxOff_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function PlayViewControls()				{					//init();				}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										fullScreen_mc = _contentClip.fullScreen_mc;					fullScreen_mc.cacheAsBitmap = true;					play_mc = _contentClip.play_mc;					play_mc.cacheAsBitmap = true;					pause_mc = _contentClip.pause_mc;					pause_mc.cacheAsBitmap = true;					musicOn_mc = _contentClip.musicOn_mc;					musicOn_mc.cacheAsBitmap = true;					musicOff_mc = _contentClip.musicOff_mc;					musicOff_mc.cacheAsBitmap = true;					sfxOn_mc = _contentClip.sfxOn_mc;					sfxOn_mc.cacheAsBitmap = true;					sfxOff_mc = _contentClip.sfxOff_mc;					sfxOff_mc.cacheAsBitmap = true;										_fullScreenClip = new DynamicUIButton();					_fullScreenClip.dynamicClip = fullScreen_mc;					_fullScreenClip.dynamicInit();										_playClip = new DynamicUIButton();					_playClip.dynamicClip = play_mc;					_playClip.dynamicInit();										_pauseClip = new DynamicUIButton();					_pauseClip.dynamicClip = pause_mc;					_pauseClip.dynamicInit();										_musicOnClip = new DynamicUIButton();					_musicOnClip.dynamicClip = musicOn_mc;					_musicOnClip.dynamicInit();										_musicOffClip = new DynamicUIButton();					_musicOffClip.dynamicClip = musicOff_mc;					_musicOffClip.dynamicInit();										_sfxOnClip = new DynamicUIButton();					_sfxOnClip.dynamicClip = sfxOn_mc;					_sfxOnClip.dynamicInit();										_sfxOffClip = new DynamicUIButton();					_sfxOffClip.dynamicClip = sfxOff_mc;					_sfxOffClip.dynamicInit();										_normalScreenY = _contentClip.y;				}				public function get contentClip():MovieClip { return _contentClip; }								public function set gameboardController( g:GameboardController ):void { _gameboardController = g; }				public function get gameboardController():GameboardController { return _gameboardController; }								public function get normalScreenY():Number { return _normalScreenY; }								public function init():void				{					_fullScreenClip.addEventListener( "onClick", handleFullScreenClicked, false, 0, true );					_fullScreenClip.addEventListener( "onSetFocus", handleFullScreenRolledOver, false, 0, true );					_fullScreenClip.addEventListener( "onKillFocus", handleFullScreenRolledOut, false, 0, true );					_playClip.addEventListener( "onClick", handlePlayClicked, false, 0, true );					_playClip.addEventListener( "onSetFocus", handlePlayRolledOver, false, 0, true );					_playClip.addEventListener( "onKillFocus", handlePlayRolledOut, false, 0, true );					_pauseClip.addEventListener( "onClick", handlePauseClicked, false, 0, true );					_pauseClip.addEventListener( "onSetFocus", handlePauseRolledOver, false, 0, true );					_pauseClip.addEventListener( "onKillFocus", handlePauseRolledOut, false, 0, true );					_musicOnClip.addEventListener( "onClick", handleMusicOnClicked, false, 0, true );					_musicOnClip.addEventListener( "onSetFocus", handleMusicOnRolledOver, false, 0, true );					_musicOnClip.addEventListener( "onKillFocus", handleMusicOnRolledOut, false, 0, true );					_musicOffClip.addEventListener( "onClick", handleMusicOffClicked, false, 0, true );					_musicOffClip.addEventListener( "onSetFocus", handleMusicOffRolledOver, false, 0, true );					_musicOffClip.addEventListener( "onKillFocus", handleMusicOffRolledOut, false, 0, true );					_sfxOnClip.addEventListener( "onClick", handleSfxOnClicked, false, 0, true );					_sfxOnClip.addEventListener( "onSetFocus", handleSfxOnRolledOver, false, 0, true );					_sfxOnClip.addEventListener( "onKillFocus", handleSfxOnRolledOut, false, 0, true );					_sfxOffClip.addEventListener( "onClick", handleSfxOffClicked, false, 0, true );					_sfxOffClip.addEventListener( "onSetFocus", handleSfxOffRolledOver, false, 0, true );					_sfxOffClip.addEventListener( "onKillFocus", handleSfxOffRolledOut, false, 0, true );										//EventNotificationCenter.getInstance().addEventListener( BoogaEvent.ON_PLAY_VIEW_CONTROLS_HIDE, hide, false, 0, true );					//EventNotificationCenter.getInstance().addEventListener( BoogaEvent.ON_PLAY_VIEW_CONTROLS_SHOW, show, false, 0, true );					EventNotificationCenter.getInstance().addSignalListener( BoogaEvent.ON_PLAY_VIEW_CONTROLS_SHOW, show, this );					EventNotificationCenter.getInstance().addSignalListener( BoogaEvent.ON_PLAY_VIEW_CONTROLS_HIDE, hide, this );										onFullScreenToggled = new Signal();				}							/** show			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function show( customParameters:Object=null ):void				{					showGameLevelControls();										_contentClip.visible = true;				}							/** hide			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function hide( customParameters:Object=null ):void				{					_contentClip.visible = false;				}							/** showGameLevelControls			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function showGameLevelControls():void				{					if( _gameboardController.isPlaying )					{						if( _gameboardController.isPaused )						{							_playClip.dynamicClip.visible = true;							_pauseClip.dynamicClip.visible = false;						}						else						{							_playClip.dynamicClip.visible = false;							_pauseClip.dynamicClip.visible = true;						}					}					else					{						_playClip.dynamicClip.visible = false;						_pauseClip.dynamicClip.visible = false;					}										if( SoundEffectPlayer.getInstance().musicsMuted )					{						_musicOnClip.dynamicClip.visible = true;						_musicOffClip.dynamicClip.visible = false;					}					else					{						_musicOnClip.dynamicClip.visible = false;						_musicOffClip.dynamicClip.visible = true;					}										if( SoundEffectPlayer.getInstance().soundsMuted )					{						_sfxOnClip.dynamicClip.visible = true;						_sfxOffClip.dynamicClip.visible = false;					}					else					{						_sfxOnClip.dynamicClip.visible = false;						_sfxOffClip.dynamicClip.visible = true;					}										//_fullScreenClip.dynamicClip.visible = true;									}							/** hideGameLevelControls			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function hideGameLevelControls():void				{					trace( "hideGameLevelControls();" );										//_fullScreenClip.dynamicClip.visible = false;					_playClip.dynamicClip.visible = false;					_pauseClip.dynamicClip.visible = false;					//_musicOnClip.dynamicClip.visible = false;					//_musicOffClip.dynamicClip.visible = false;					//_sfxOnClip.dynamicClip.visible = false;					//_sfxOffClip.dynamicClip.visible = false;										//trace( "musicsMuted: "+SoundEffectPlayer.getInstance().musicsMuted );					//trace( "soundsMuted: "+SoundEffectPlayer.getInstance().soundsMuted );										if( SoundEffectPlayer.getInstance().musicsMuted )					{						_musicOnClip.dynamicClip.visible = true;						_musicOffClip.dynamicClip.visible = false;					}					else					{						_musicOnClip.dynamicClip.visible = false;						_musicOffClip.dynamicClip.visible = true;					}										if( SoundEffectPlayer.getInstance().soundsMuted )					{						_sfxOnClip.dynamicClip.visible = true;						_sfxOffClip.dynamicClip.visible = false;					}					else					{						_sfxOnClip.dynamicClip.visible = false;						_sfxOffClip.dynamicClip.visible = true;					}									}							/** disableButtonsForFullScreenTutorial			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function disableButtonsForFullScreenTutorial():void				{					_playClip.setDeactive();					_pauseClip.setDeactive();					_musicOnClip.setDeactive();					_musicOffClip.setDeactive();					_sfxOnClip.setDeactive();					_sfxOffClip.setDeactive();				}							/** enableButtonsAfterFullScreenTutorial			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function enableButtonsAfterFullScreenTutorial():void				{					_playClip.setActive();					_pauseClip.setActive();					_musicOnClip.setActive();					_musicOffClip.setActive();					_sfxOnClip.setActive();					_sfxOffClip.setActive();				}							/** handleFullScreenClicked			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleFullScreenClicked( event:Event ):void				{					_gameboardController.toggleFullScreen();					onFullScreenToggled.dispatch();										//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );									}							/** handleFullScreenRolledOver			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleFullScreenRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_fullScreenClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("PLAY_FULL_SCREEN")} );				}							/** handleFullScreenRolledOut			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleFullScreenRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handlePlayClicked			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handlePlayClicked( event:Event ):void				{					_gameboardController.unpause();										play_mc.visible = false;					pause_mc.visible = true;										//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );									}							/** handlePlayRolledOver			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handlePlayRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_playClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("PLAY_PLAY_GAME")} );				}							/** handlePlayRolledOut			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handlePlayRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handlePauseClicked			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handlePauseClicked( event:Event ):void				{					_gameboardController.pause();										pause_mc.visible = false;					play_mc.visible = true;										//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );									}							/** handlePauseRolledOver			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handlePauseRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_pauseClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("PLAY_PAUSE_GAME")} );				}							/** handlePauseRolledOut			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handlePauseRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleMusicOnClicked			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleMusicOnClicked( event:Event ):void				{					musicOn_mc.visible = false;					musicOff_mc.visible = true;										//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().unmuteMusics();				}							/** handleMusicOnRolledOver			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleMusicOnRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_musicOnClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("PLAY_MUSIC")} );				}							/** handleMusicOnRolledOut			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleMusicOnRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleMusicOffClicked			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleMusicOffClicked( event:Event ):void				{					musicOff_mc.visible = false;					musicOn_mc.visible = true;										//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().muteMusics();				}							/** handleMusicOffRolledOver			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleMusicOffRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_musicOffClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("PLAY_MUSIC")} );				}							/** handleMusicOffRolledOut			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleMusicOffRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleSfxOnClicked			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleSfxOnClicked( event:Event ):void				{					sfxOn_mc.visible = false;					sfxOff_mc.visible = true;										//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().unmuteSounds();				}							/** handleSfxOnRolledOver			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleSfxOnRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_sfxOnClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("PLAY_SFX")} );				}							/** handleSfxOnRolledOut			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleSfxOnRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}							/** handleSfxOffClicked			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleSfxOffClicked( event:Event ):void				{					sfxOff_mc.visible = false;					sfxOn_mc.visible = true;										//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().muteSounds();				}							/** handleSfxOffRolledOver			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleSfxOffRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_SHOW, this, {clip:_sfxOffClip.dynamicClip, text:StringsIndex.getInstance().getStringByName("PLAY_SFX")} );				}							/** handleSfxOffRolledOut			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handleSfxOffRolledOut( event:Event ):void				{					EventNotificationCenter.getInstance().sendSignal( BoogaEvent.ON_TEXT_HOVER_HIDE, this );				}						}	}