/** BetaView  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame	{		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.text.TextField;				import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.forms.DynamicInputText;		import com.avatarlabs.utils.navigation.NavigationController;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.userinterface.DynamicUIButton;				import com.boogabooga.data.SoundsIndex;				public class BetaView extends EventDispatcher		{			protected var _contentClip:MovieClip;						protected var _playClip:DynamicUIButton;			protected var _passwordClip:DynamicInputText;						/**	Stage Instances **/			public var play_mc:MovieClip;			public var password_mc:MovieClip;			public var error_txt:TextField;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function BetaView()				{					//init();				}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										play_mc = _contentClip.play_mc;					password_mc = _contentClip.password_mc;					error_txt = _contentClip.error_txt;										_playClip = new DynamicUIButton();					_playClip.dynamicClip = play_mc;					_playClip.dynamicInit();										_passwordClip = new DynamicInputText();					_passwordClip.dynamicClip = password_mc;					_passwordClip.dynamicInit();					_passwordClip.setTextField( password_mc.input_txt );										error_txt.visible = false;					error_txt.alpha = 0;				}				public function get contentClip():MovieClip { return _contentClip; }							/** init			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function init():void				{					_playClip.addEventListener( "onClick", handlePlayClicked, false, 0, true );					_playClip.addEventListener( "onSetFocus", handlePlayRolledOver, false, 0, true );									}							/** kill			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function kill():void				{					_playClip.removeEventListener( "onClick", handlePlayClicked );					_playClip.removeEventListener( "onSetFocus", handlePlayRolledOver );					_playClip = null;										_passwordClip = null;				}							/** handlePlayClicked			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				protected function handlePlayClicked( event:Event ):void				{					//NavigationController.getInstance().navigateTo( 0, "MainNavigation" );										//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_click.wav").volume, 0, "sfx_mouse_click.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										trace( "password value: "+_passwordClip.getValue() );										if( _passwordClip.getValue().toLowerCase() == "freedomland" )					{						dispatchEvent( new CustomEvent("onPlayClicked") );					}					else					{						error_txt.visible = true;					}				}								protected function handlePlayRolledOver( event:Event ):void				{					//SoundEffectPlayer.getInstance().setVolume( SoundsIndex.getInstance().getSoundBySoundId("sfx_mouse_rollover.wav").volume, 0, "sfx_mouse_rollover.wav" );					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav" );									}								protected function handlePlayRolledOut( event:Event ):void				{									}										}	}