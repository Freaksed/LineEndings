/** TextHoverPopupView  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame	{		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.geom.Point;		import flash.geom.Rectangle;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;		import flash.text.TextFormat;		import flash.utils.getDefinitionByName;				import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.navigation.NavigationController;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import com.avatarlabs.utils.userinterface.DynamicUIScroller;		import com.avatarlabs.utils.userinterface.DynamicUISlider;		import com.avatarlabs.utils.text.TextFormatting;		import net.kaegi.utils.FontManager;				import com.boogabooga.data.SettingsIndex;		import com.boogabooga.events.BoogaEvent;				public class TextHoverPopupView extends EventDispatcher		{			protected var _contentClip:MovieClip;			protected var _topLeftPosition:Point;			protected var _bottomLeftPosition:Point;			protected var _topRightPosition:Point;			protected var _bottomRightPosition:Point;						private var _labelYWithElements:int = 26;						public static const VIEW_TOP_LEFT:int = 0;			public static const VIEW_BOTTOM_LEFT:int = 1;			public static const VIEW_TOP_RIGHT:int = 2;			public static const VIEW_BOTTOM_RIGHT:int = 3;						/**	Stage Instances **/			public var label_mc:MovieClip;			public var background_mc:MovieClip;			public var label_txt:TextField;			public var label2_txt:TextField;			public var label3_txt:TextField;			public var elements_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function TextHoverPopupView()				{					//init();				}								public function set contentClip( m:MovieClip ):void				{					_contentClip = m;					_contentClip.mouseChildren = false;					_contentClip.mouseEnabled = false;										label_mc = _contentClip.label_mc;					label_txt = label_mc.label_txt;					label_txt.wordWrap = false;										label2_txt = label_mc.label2_txt;					label2_txt.wordWrap = false;					label2_txt.visible = false;										label3_txt = label_mc.label3_txt;					label3_txt.wordWrap = false;					label3_txt.visible = false;					label3_txt.styleSheet = SettingsIndex.getInstance().fontManager.getStyleSheet();										elements_mc = _contentClip.elements_mc;					background_mc = _contentClip.background_mc;				}				public function get contentClip():MovieClip { return _contentClip; }							/** init			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function init():void				{					//_topLeftPosition = new Point( 320, 150 );					//_bottomLeftPosition = new Point( 320, -150 );					//_topRightPosition = new Point( -320, 150 );					//_bottomRightPosition = new Point( -320, -150 );										EventNotificationCenter.getInstance().addSignalListener( BoogaEvent.ON_TEXT_HOVER_SHOW, handleTextHoverShow, this );					EventNotificationCenter.getInstance().addSignalListener( BoogaEvent.ON_TEXT_HOVER_HIDE, handleTextHoverHide, this );				}							/** show			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function show():void				{					_contentClip.visible = true;				}							/** hide			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- */				public function hide():void				{					_contentClip.visible = false;										label_txt.text = ' ';					label2_txt.text = ' ';					label3_txt.text = ' ';										while( elements_mc.numChildren > 0 )						elements_mc.removeChildAt(0);				}											/** calculatePosition			  *	---------------------------------------------------------------------------- *			  *	---------------------------------------------------------------------------- 				public function calculatePosition( targetX:Number, targetY:Number, type:int ):void				{					if( type == VIEW_TOP_LEFT )					{						label_mc.x = -int(label_mc.width);						label_mc.y = -int(label_mc.height);											}					else if( type == VIEW_BOTTOM_LEFT )					{						label_mc.x = -int(label_mc.width);						label_mc.y = 0;											}					else if( type == VIEW_TOP_RIGHT )					{						label_mc.x = 0;						label_mc.y = -int(label_mc.height);											}					else if( type == VIEW_BOTTOM_RIGHT )					{						label_mc.x = 0;						label_mc.y = 0;											}										background_mc.x = label_mc.x;					background_mc.y = label_mc.y;										_contentClip.x = targetX;					_contentClip.y = targetY;										//trace( "label_mc.x: "+label_mc.x+", y: "+label_mc.y );					//trace( "_contentClip.x: "+_contentClip.x+", y: "+_contentClip.y );				}*/							/** handleTextHoverShow			  *	---------------------------------------------------------------------------- *			  *	Shows the tutorial popup.			  *	---------------------------------------------------------------------------- */				//protected function handleTextHoverShow( event:CustomEvent ):void				protected function handleTextHoverShow( customParameters:Object ):void				{					ConsoleBroadcaster.broadcast( "TextHoverPopupView", "handleTextHoverShow();" );										var bound:Rectangle = customParameters.clip.getBounds( _contentClip.parent );										//trace( "bound: "+bound );										label_mc.y = 0;					label_txt.wordWrap = false;										//_currentText = customParameters.text;					var align:String = TextFieldAutoSize.LEFT;					if( customParameters.align != undefined )						align = customParameters.align;										//trace( "align: "+align );										var tf:TextFormat = label_txt.getTextFormat();						tf.align = align;										label2_txt.wordWrap = true;					label2_txt.width = 10;					label2_txt.height = 15;					label2_txt.y = 0;										label3_txt.wordWrap = true;					label3_txt.width = 10;					label3_txt.height = 15;					label3_txt.y = 0;										label_txt.x = 0;					label_txt.width = 150;					label_txt.wordWrap = true;					label_txt.setTextFormat( tf );					TextFormatting.formatTextWithFontName( label_txt, customParameters.text, "Lithos Pro Black", false, align );					/*					if( label_txt.width > 150 || align == TextFieldAutoSize.CENTER )					{						label_txt.wordWrap = true;						TextFormatting.formatTextWithFontName( label_txt, customParameters.text, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					}					else					{						label_txt.wordWrap = false;					}					*/										//trace( "label_txt align: "+label_txt.getTextFormat().align );					//trace( "label_txt.numLines: "+label_txt.numLines );										if( label_txt.numLines == 1 )					{						label_txt.setTextFormat( tf );						label_txt.wordWrap = false;						TextFormatting.formatTextWithFontName( label_txt, customParameters.text, "Lithos Pro Black", false, align );					}										if( customParameters.text2 != undefined )					{						var tf2:TextFormat = label2_txt.getTextFormat();							tf2.align = align;												label2_txt.x = 0;						label2_txt.y = 0;						label2_txt.width = 150;						label2_txt.height = 15;						label2_txt.wordWrap = true;						label2_txt.setTextFormat( tf2 );						TextFormatting.formatTextWithFontName( label2_txt, customParameters.text2, "Lithos Pro Black", false, align );												if( label2_txt.numLines == 1 )						{							label2_txt.wordWrap = false;							TextFormatting.formatTextWithFontName( label2_txt, customParameters.text2, "Lithos Pro Black", false, align );						}												label2_txt.y = label_txt.y+label_txt.height;						label2_txt.visible = true;					}										if( customParameters.text3 != undefined )					{						//var tf3:TextFormat = label3_txt.getTextFormat();							//tf3.align = align;												label3_txt.x = 0;						label3_txt.y = 0;						label3_txt.width = 150;						label3_txt.height = 15;						label3_txt.wordWrap = true;						//label3_txt.setTextFormat( tf3 );						//TextFormatting.formatTextWithFontName( label3_txt, customParameters.text3, "Lithos Pro Black", true, align );						label3_txt.autoSize = TextFieldAutoSize.CENTER;						label3_txt.htmlText = '<span class="font2Default">'+customParameters.text3+'</span>';												if( label3_txt.numLines == 1 )						{							label3_txt.wordWrap = false;							//TextFormatting.formatTextWithFontName( label3_txt, customParameters.text3, "Lithos Pro Black", true, align );							label3_txt.htmlText = '<span class="font2Default">'+customParameters.text3+'</span>';						}												label3_txt.y = label2_txt.y+label2_txt.height;						label3_txt.visible = true;					}										if( customParameters.elements != undefined && customParameters.elements.length > 0 )					{						var element:MovieClip;						var elementsLength = customParameters.elements.length;						var startX:int = 75;												//trace( "adding elements "+elementsLength );												if( (elementsLength & 1) == 0 )						{							//even							startX = 62 - ((int(elementsLength/2) - 1) * -25);						}						else						{							//odd							startX = 75 - (int(elementsLength/2) * -25);						}												//trace( "startX: "+startX );						elements_mc.x = startX;												for( var i:int=0; i<customParameters.elements.length; ++i )						{							element = new (getDefinitionByName(customParameters.elements[i]) as Class)();							element.width = 24;							element.height = 25;							element.x = 25 * i;							element.y = 0;							elements_mc.addChild( element );						}												label_mc.y = _labelYWithElements;					}										background_mc.height = label_mc.y + label_mc.height;					background_mc.width = align == TextFieldAutoSize.CENTER ? 150 : label_mc.width;										//trace( "label width: "+label_mc.width );					//trace( "label height: "+label_mc.height );										//trace( "bound.top: "+bound.top );					//trace( "bound.right: "+bound.right );					//trace( "bound.bottom: "+bound.bottom );					//trace( "bound.left: "+bound.left );										if( bound.top + 10 - background_mc.height > 10 )					{						//we can put the text hover on the top						if( bound.right - 10 + background_mc.width < 750 )						{							//top right							_contentClip.x = bound.right - 10;							_contentClip.y = bound.top + 10 - background_mc.height;							//trace( "text hover on top right" );						}						else						{							//top left							_contentClip.x = bound.left + 10 - background_mc.width;							_contentClip.y = bound.top + 10 - background_mc.height;							//trace( "text hover on top left" );						}					}					else					{						//we put the text hover on the bottom						if( bound.right - 10 + background_mc.width < 750 )						{							//bottom right							_contentClip.x = bound.right - 10;							_contentClip.y = bound.bottom - 10;							//trace( "text hover on bottom right" );						}						else						{							//bottom left							_contentClip.x = bound.left + 10 - background_mc.width;							_contentClip.y = bound.bottom - 10;							//trace( "text hover on bottom left" );						}					}										//trace( "_contentClip.x: "+_contentClip.x );					//trace( "_contentClip.y: "+_contentClip.y );										show();										//background_mc.x = label_mc.x;					//background_mc.y = label_mc.y;									}							/** handleTextHoverHide			  *	---------------------------------------------------------------------------- *			  *	Hides the tutorial popup.			  *	---------------------------------------------------------------------------- */				//protected function handleTextHoverHide( event:CustomEvent ):void				protected function handleTextHoverHide( customParameters:Object ):void				{					//ConsoleBroadcaster.broadcast( "TextHoverPopupView", "handleTextHoverHide();" );					hide();				}						}	}