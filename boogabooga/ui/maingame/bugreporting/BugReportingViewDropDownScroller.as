/** BugReportingViewDropDownScroller Class  *	------------------------------------------------------------------------------------  *	@dev: 	Christian Widodo [christian@avatarlabs.com]  *	@desc:	A DropDownMenu class with a scroller for the content inside  *			This is created since Flash's drop down ComboBox is not flexible enough  *			to fit the needs of a project  *	------------------------------------------------------------------------------------*/  	package com.boogabooga.ui.maingame.bugreporting	{		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.MouseEvent;		import flash.geom.Rectangle;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;		import flash.utils.getDefinitionByName;				import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import com.avatarlabs.utils.userinterface.DynamicUIScroller;		import com.avatarlabs.utils.userinterface.DynamicUIDropDownScroller;		import com.avatarlabs.utils.text.TextFormatting;				public class BugReportingViewDropDownScroller extends DynamicUIDropDownScroller		{			//protected var _dynamicClip:MovieClip;						//protected var _scrollerClip:DynamicUIScroller;						/**	Stage Instances **/			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function BugReportingViewDropDownScroller()				{									}							/** dynamicInit			  *	---------------------------------------------------------------------------- */				override public function dynamicInit():void				{					_contentItems = new Array();					_dp = new Array();										//_dropDownContentItemLinkage = "DropDownContent.item";					//_dropDownContentItemClass = getDefinitionByName(_dropDownContentItemLinkage) as Class;										TextFormatting.formatTextWithFontName( selectedLabel_mc.label_mc.label_txt, "choose one", "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					_selectedLabelClip.addEventListener( "onClick", handleSelectedLabelClicked, false, 0, true );					/*					var contentItem:MovieClip;										for( var i:int=0; i<_dp.length; i++ )					{						contentItem = new DynamicUIButton();						contentItem.dynamicClip = new _dropDownContentItemClass();						contentItem.dynamicClip.mouseChildren = false;						contentItem.dynamicClip.label_mc.label_txt.text = _dp[i].label;						contentItem.dynamicInit();						//contentItem.buttonMode = true;						contentItem.addEventListener( "onClick", handleContentItemClicked, false, 0, true );						contentItem.addEventListener( "onSetFocus", handleContentItemRolledOver, false, 0, true );						contentItem.addEventListener( "onKillFocus", handleContentItemRolledOut, false, 0, true );						contentItem.dynamicClip.x = 0;						contentItem.dynamicClip.y = _scrollerClip.dynamicClip.content_mc.numChildren * contentItem.dynamicClip.height;												_scrollerClip.dynamicClip.content_mc.addChild( contentItem.dynamicClip );												_contentItems.push( contentItem );					}					*/					_scrollerClip.dynamicClip.visible = false;										_opened = false;					_dynamicClip.tabEnabled = false;					_dynamicClip.tabChildren = false;										/*					trace( "_scrollerClip: "+_scrollerClip );					//trace( "_scrollerClip.toggleSlider: "+_scrollerClip.toggleSlider );										if( _scrollerClip )					{						trace( _scrollerClip.toggleSlider );						_scrollerClip.toggleSlider();					}					*/										try					{						_scrollerClip.toggleSlider();					}					catch( e:Error )					{						_scrollerClip.addEventListener( Event.INIT, handleScrollerInit, false, 0, true );					}				}							/** set/get dp			  *	---------------------------------------------------------------------------- */			  	override public function set dp( _dp:Array ):void				{					this._dp = _dp;										//trace( "_scrollerClip: "+_scrollerClip );					//trace( "contentClip: "+_scrollerClip.dynamicClip.content_mc );										var contentClip:MovieClip = _scrollerClip.dynamicClip.content_mc;					var contentItem:MovieClip;										while( contentClip.numChildren > 0 )					{						contentClip.removeChildAt(0);					}										_contentItems = new Array();										for( var i:int=0; i<_dp.length; i++ )					{						contentItem = new DynamicUIButton();						contentItem.dynamicClip = new _dropDownContentItemClass();						contentItem.dynamicClip.mouseChildren = false;						TextFormatting.formatTextWithFontName( contentItem.dynamicClip.label_mc.label_txt, _dp[i].label, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );						//contentItem.dynamicClip.label_mc.label_txt.text = _dp[i].label;						contentItem.dynamicInit();						//contentItem.buttonMode = true;						contentItem.addEventListener( "onClick", handleContentItemClicked, false, 0, true );						contentItem.addEventListener( "onSetFocus", handleContentItemRolledOver, false, 0, true );						contentItem.addEventListener( "onKillFocus", handleContentItemRolledOut, false, 0, true );						contentItem.dynamicClip.x = 0;						contentItem.dynamicClip.y = _scrollerClip.dynamicClip.content_mc.numChildren * contentItem.dynamicClip.height;												//trace( "contentItem: "+contentItem );						//trace( "contentItem.dynamicClip: "+contentItem.dynamicClip );												_scrollerClip.dynamicClip.content_mc.addChild( contentItem.dynamicClip );												_contentItems.push( contentItem );					}										//trace( _dp.length );					//trace( "contentHeight: "+MovieClip(_scrollerClip).content_mc.height );										try					{						_scrollerClip.toggleSlider();					}					catch( e:Error )					{						_scrollerClip.addEventListener( Event.INIT, handleScrollerInit, false, 0, true );					}				}							/** handleContentItemClicked			  *	---------------------------------------------------------------------------- */				override protected function handleContentItemClicked( event:Event ):void				{					//trace( "handleContentItemClicked();" );										for( var i:int=0; i<_contentItems.length; i++ )					{						if( _contentItems[i] == event.currentTarget )						{							_selectedItemId = _dp[i].id;							TextFormatting.formatTextWithFontName( selectedLabel_mc.label_mc.label_txt, _dp[i].label, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );							//MovieClip(selectedLabel_mc).label_mc.label_txt.text = _dp[i].label;						}					}										close();										dispatchEvent( new CustomEvent("onContentItemClick", {contentId:_selectedItemId}) );										//trace( "_selectedItemId: "+_selectedItemId );				}						}	}