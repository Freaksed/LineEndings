/** BuySingleItemPopupView  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame.weaponselection	{		import flash.display.Bitmap;		import flash.display.BitmapData;		import flash.display.Loader;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.net.URLRequest;		import flash.system.ApplicationDomain;		import flash.system.LoaderContext;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;		import flash.utils.getDefinitionByName;				import com.avatarlabs.utils.cache.BitmapDataManager;		import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.events.EventNotificationCenter;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.userinterface.DynamicUIButton;		import com.avatarlabs.utils.userinterface.DynamicUIScroller;		import com.avatarlabs.utils.userinterface.DynamicUISlider;				import com.boogabooga.data.SettingsIndex;		import com.boogabooga.data.SoundsIndex;		import com.boogabooga.data.StringsIndex;		import com.boogabooga.data.gamelevel.Chicken;		import com.boogabooga.data.gamelevel.God;		import com.boogabooga.data.gamelevel.Weapon;		import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.maingame.AttackSlot;		import com.boogabooga.data.maingame.DigEarly;		import com.boogabooga.data.maingame.StorePack;		import com.boogabooga.events.BoogaEvent;		import com.boogabooga.ui.maingame.weaponselection.BuyPopupView;				public class BuySingleItemPopupView extends BuyPopupView		{			public var itemName:String;						/**	Stage Instances **/			public var header_txt:TextField;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function BuySingleItemPopupView()				{					//init();				}								override public function set contentClip( m:MovieClip ):void				{					_contentClip = m;										header_txt = _contentClip.header_txt;					name_txt = _contentClip.name_txt;					image_mc = _contentClip.image_mc;					descriptionScroller_mc = _contentClip.descriptionScroller_mc;					exit_mc = _contentClip.exit_mc;					itemBackground_mc = _contentClip.itemBackground_mc;					background_mc = _contentClip.background_mc;					buy1_mc = _contentClip.buy1_mc;					elements_mc = _contentClip.elements_mc;										_descriptionSliderClip = new DynamicUISlider();					_descriptionSliderClip.dynamicClip = descriptionScroller_mc.slider_mc;					_descriptionSliderClip.dynamicInit();					_descriptionSliderClip.setProperty( "y" );					_descriptionSliderClip.setHandle( descriptionScroller_mc.slider_mc.handle_mc );					_descriptionSliderClip.setBounds( descriptionScroller_mc.slider_mc.bound_mc );										_descriptionScrollerClip = new DynamicUIScroller();					_descriptionScrollerClip.dynamicClip = descriptionScroller_mc;					_descriptionScrollerClip.dynamicInit();					_descriptionScrollerClip.setProperty( "y" );					_descriptionScrollerClip.setSlider( _descriptionSliderClip );					_descriptionScrollerClip.setContent( descriptionScroller_mc.content_mc );					_descriptionScrollerClip.setMask( descriptionScroller_mc.mask_mc );										_exitClip = new DynamicUIButton();					_exitClip.dynamicClip = exit_mc;					_exitClip.dynamicInit();										_buy1Clip = new DynamicUIButton();					_buy1Clip.dynamicClip = buy1_mc;					_buy1Clip.dynamicInit();				}								override public function set item( a:AbstractGameObject ):void				{					reset();										_item = a;										_descriptionScrollerClip.resetScroller();										TextFormatting.formatTextWithFontName( name_txt, StringsIndex.getInstance().getString(String(_item.name)), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );										//trace( 'pack statistic: '+_item.statistic );										if( _item is StorePack )						TextFormatting.formatTextWithFontName( MovieClip(descriptionScroller_mc).content_mc.label_txt, StringsIndex.getInstance().getString(String(_item.description))+_item.statistic, "Lithos Pro Black", false, TextFieldAutoSize.LEFT );					else						TextFormatting.formatTextWithFontName( MovieClip(descriptionScroller_mc).content_mc.label_txt, StringsIndex.getInstance().getString(String(_item.description)), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );										_descriptionScrollerClip.toggleSlider();										TextFormatting.formatTextWithFontName( MovieClip(buy1_mc).label_mc.label_txt, _item.prices[0].price, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );										if( _item is DigEarly )					{						var digEarlyClip:MovieClip = new (getDefinitionByName("Buy.DigEarlyIcon") as Class)();							digEarlyClip.x = 50;							digEarlyClip.y = 50;												image_mc.addChild( digEarlyClip );					}					else if( _item is AttackSlot )					{						var unlockSlotClip:MovieClip = new (getDefinitionByName("Buy.UnlockSlot") as Class)();							unlockSlotClip.x = 50;							unlockSlotClip.y = 50;												image_mc.addChild( unlockSlotClip );					}					else					{						if( _item.cacheIconId != null && _item.iconURL != null )						{							if( BitmapDataManager.getInstance().getBitmapData(_item.cacheIconId) == null )							{								BitmapDataManager.getInstance().addEventListener( Event.COMPLETE, handleLoadImageComplete, false, 0, true );								BitmapDataManager.getInstance().loadBitmapToCache( SettingsIndex.getInstance().contentURL+_item.iconURL, _item.cacheIconId );							}							else							{								addImage();							}						}					}				}							/** init			  *	---------------------------------------------------------------------------- */				override public function init():void				{					TextFormatting.formatTextWithFontName( header_txt, StringsIndex.getInstance().getStringByName("BUY_POPUP_CONFIRM_PURCHASE"), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );										_exitClip.addEventListener( "onClick", handleExitClicked, false, 0, true );					_exitClip.addEventListener( "onSetFocus", handleExitRolledOver, false, 0, true );					_exitClip.addEventListener( "onKillFocus", handleExitRolledOut, false, 0, true );										_buy1Clip.addEventListener( "onClick", handleBuy1Clicked, false, 0, true );					_buy1Clip.addEventListener( "onSetFocus", handleBuy1RolledOver, false, 0, true );					_buy1Clip.addEventListener( "onKillFocus", handleBuy1RolledOut, false, 0, true );										EventNotificationCenter.getInstance().addSignalListener( BoogaEvent.ON_LANGUAGE_CHANGED, handleLanguageChanged, this );				}							/** show			  *	---------------------------------------------------------------------------- 				override public function show():void				{					_contentClip.visible = true;										_isVisible = true;				}*/							/** hide			  *	---------------------------------------------------------------------------- 				override public function hide():void				{					_contentClip.visible = false;										_isVisible = false;										_descriptionScrollerClip.resetScroller();				}*/							/** handleBuy1Clicked			  *	---------------------------------------------------------------------------- */				override protected function handleBuy1Clicked( event:Event ):void				{					var eventName:String;					var type:String;										if( _item is StorePack )					{						eventName = BoogaEvent.ON_BUY_STORE_PACK;						type = "Pack";					}					else if( _item is DigEarly )					{						eventName = BoogaEvent.ON_BUY_DIG_EARLY;						type = "DigEarly";					}					else if( _item is AttackSlot )					{						eventName = BoogaEvent.ON_BUY_ATTACK_SLOT;						type = "AttackSlot";					}										_selectedItemPrice = 0;										SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav" );										dispatchEvent( new BoogaEvent(eventName, {type:type, itemId:_item.id, priceId:_item.prices[0].id}) );				}							/** handleLanguageChanged			  *	---------------------------------------------------------------------------- *			  *	Updates the texts when the language is changed.			  *	---------------------------------------------------------------------------- */				private function handleLanguageChanged( customParameters:Object ):void				{					//trace( "AddFacebookCreditsView -- handleLanguageChanged();" );										if( _item != null )					{						_descriptionScrollerClip.resetScroller();												TextFormatting.formatTextWithFontName( name_txt, StringsIndex.getInstance().getString(String(_item.name)), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );						TextFormatting.formatTextWithFontName( MovieClip(descriptionScroller_mc).content_mc.label_txt, StringsIndex.getInstance().getString(String(_item.description)), "Lithos Pro Black", false, TextFieldAutoSize.LEFT );						_descriptionScrollerClip.toggleSlider();					}				}		}	}