/** WeaponSelectionConsumableItemIcon  *	---------------------------------------------------------------------------- *  *	@author:  *		Christian Widodo [christian@avatarlabs.com]  *	---------------------------------------------------------------------------- */ 	package com.boogabooga.ui.maingame.weaponselection	{		import flash.display.Bitmap;		import flash.display.MovieClip;		import flash.events.Event;		import flash.events.EventDispatcher;		import flash.text.TextField;		import flash.text.TextFieldAutoSize;				import com.avatarlabs.utils.console.ConsoleBroadcaster;		import com.avatarlabs.utils.events.CustomEvent;		import com.avatarlabs.utils.sound.SoundEffectPlayer;		import com.avatarlabs.utils.text.TextFormatting;		import com.avatarlabs.utils.userinterface.DynamicUIButton;				import com.boogabooga.data.gamelevel.AbstractGameObject;		import com.boogabooga.data.gamelevel.Weapon;		import com.boogabooga.data.maingame.Village;		import com.boogabooga.ui.maingame.weaponselection.WeaponSelectionItemIcon;				public class WeaponSelectionConsumableItemIcon extends WeaponSelectionItemIcon		{			protected var _buyClip:DynamicUIButton;						/**	Stage Instances **/			public var buy_mc:MovieClip;			//public var count_mc:MovieClip;			/**	End of Stage Instances **/						/** Constructor			  *	---------------------------------------------------------------------------- */				public function WeaponSelectionConsumableItemIcon()				{					super();				}								override public function set contentClip( m:MovieClip ):void				{					super.contentClip = m;										buy_mc = _contentClip.buy_mc;					count_mc = _contentClip.count_mc;				}								override public function init():void				{					super.init();										_contentClip.mouseChildren = true;										count_mc.visible = false;										_buyClip = new DynamicUIButton();					_buyClip.dynamicClip = buy_mc;					_buyClip.dynamicInit();					_buyClip.dynamicClip.visible = false;					_buyClip.dynamicClip.mouseChildren = false;					_buyClip.addEventListener( "onClick", handleBuyClicked, false, 0, true );					_buyClip.addEventListener( "onSetFocus", handleBuyRolledOver, false, 0, true );					_buyClip.addEventListener( "onKillFocus", handleBuyRolledOut, false, 0, true );				}							/** showLockView			  *	---------------------------------------------------------------------------- *			  *	Shows the lock view with the unlock in x level text.			  *	---------------------------------------------------------------------------- */				override public function showLockView( level:int=0 ):void				{					super.showLockView( level );										count_mc.visible = false;					_buyClip.dynamicClip.visible = false;				}							/** showItemView			  *	---------------------------------------------------------------------------- *			  *	Shows the item view with the icon.			  *	---------------------------------------------------------------------------- */				override public function showItemView( item:AbstractGameObject ):void				{					super.showItemView( item );										//TextFormatting.formatTextWithFontName( count_mc.label_txt, ""+_item.useCount, "SF Fedora", false, TextFieldAutoSize.CENTER );					TextFormatting.formatTextWithFontName( count_mc.label_txt, ""+_item.useCount, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					count_mc.visible = true;					_buyClip.dynamicClip.visible = true;										var iconBitmap = image_mc.getChildAt(0) as Bitmap;						iconBitmap.width = 55;						iconBitmap.height = 55;				}							/** refreshCount			  *	---------------------------------------------------------------------------- *			  *	Refreshes the consumable item count.			  *	---------------------------------------------------------------------------- */				public function refreshCount():void				{					if( _item != null )					{						//TextFormatting.formatTextWithFontName( count_mc.label_txt, ""+_item.useCount, "SF Fedora", false, TextFieldAutoSize.CENTER );						TextFormatting.formatTextWithFontName( count_mc.label_txt, ""+_item.useCount, "Lithos Pro Black", false, TextFieldAutoSize.CENTER );					}				}								protected function handleBuyClicked( event:Event ):void				{					ConsoleBroadcaster.broadcast( "WeaponSelectionConsumableItemIcon", "handleBuyClicked();" );										SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_click.wav", false, "sfx_mouse_click.wav", "sfx_mouse_click.wav", SoundEffectPlayer.SOUND_PLAYER_SFX );										dispatchEvent( new CustomEvent("onBuyClick") );				}								protected function handleBuyRolledOver( event:Event ):void				{					SoundEffectPlayer.getInstance().playLibrarySound( "sfx_mouse_rollover.wav", false, "sfx_mouse_rollover.wav", "sfx_mouse_rollover.wav", SoundEffectPlayer.SOUND_PLAYER_SFX );				}								protected function handleBuyRolledOut( event:Event ):void				{									}		}	}